{"version":3,"sources":["images/blank_profile_pic.jpg","components/Layout.js","components/Helpers.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AdminTabs.js","views/Admin.js","views/Alerts.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","name","history","push","concat","logout","window","localStorage","removeItem","state","activeItem","show","children","permissionString","getItem","permissions","split","nav","indexOf","react_default","a","createElement","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","Component","withRouter","createBrowserHistory","domain","httpPost","url","body","arguments","length","undefined","token","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","error","json","httpPatch","httpGet","httpDelete","compareActivities","b","ordering","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","sent","sort","abrupt","is_showing","id","activity_id","type","student_id","date","str_value","num_value","first_name","last_name","t0","console","log","require","unparse","fields","data","document","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","checkCredentials","Redirect","to","partitions","parse","atob","decodeToken","exp","Date","now","getEarlierDate","daysAgo","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","ids","CustomFunction","AddStudentModal","firstName","lastName","cancel","onFirstNameChange","onLastNameChange","Modal","Title","Body","controlId","validationState","validateInput","Feedback","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","index","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","getCurrentDate","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","components_AddStudentModal","ButtonToolbar","float","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArray","yArrayStudents","heatMapType","dataLength","max","x","reverse","toCompare","min","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","heatMapColors","colorRange","es","width","scaleWidth","scaleHeight","margin","top","xType","yType","axisType","yDomain","reverseYAxis","orientation","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","info","profileInfo","field","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","handleInfoChange","mode","edit","studentsJson","studentColumnJson","parseCols","previousState","currentProps","uploadedPic","cols","sortCols","col","studentInfoId","updated","patchPost","info_id","int_value","bool_value","date_value","time_value","blob_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","studentInfoJson","parseStudentInfo","startDateString","endDateString","heatMapJson","_context2","t1","test","infoId","changedField","newValue","posted","updateStudentInfo","entryFound","entryIndex","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayOfWeek","weekNum","dayEntry","mdyArray","processedData","strDays","floor","y","color","files","reader","FileReader","onloadend","src","readAsDataURL","blankPic","ListGroup","parsedInfo","variant","components_Heatmap","formatData","handleNameChange","BarChart","obj","labelAnchorX","labelAnchorY","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byDayJson","byDayHeatMap","startDateYear","endDateYear","formatDayData","formatHourData","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","hourEntry","hourOfDay","components_BarChart","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","delete","role_name","onDelete","passwordBlock","confirm","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","values","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","newUser","last_login","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","errorMsg","componentClass","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AdminTabs","context","handleSelect","Tabs","activeKey","onSelect","Tab","eventKey","title","components_Users","components_Roles","components_Activities","Admin","components_AdminTabs","Alerts","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9923f057.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    let permissionString = window.localStorage.getItem(\"permissions\");\r\n    let permissions = permissionString === null ? [] : permissionString.split(\",\")\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    let navItems = <Nav>\r\n        {nav}\r\n        <NavItem onClick={this.handleItemClick('reports')}>Reports</NavItem>\r\n        <NavItem onClick={this.handleItemClick('alerts')}>Alerts</NavItem>\r\n      </Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst domain = 'ec2-3-16-129-180.us-east-2.compute.amazonaws.com' // '127.0.0.1:8000'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `http://${domain}/api/attendance/?day=${startDate}` : `http://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`http://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`http://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\trow[j] = 'N/A' // Needs student keys to be added to the database\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tconsole.log(entries[keys[i]][activity.id])\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tif (token === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t} \r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, domain, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`http://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ActivityCheckbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n        value: '',\r\n        activityType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\r\n    };\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked, value, activityType } = this.state;\r\n\r\n        let checkbox = <span className=\"checkbox\">\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={label}\r\n                    checked={isChecked}\r\n                    onChange={this.toggleCheckboxChange}\r\n                />\r\n                {label}\r\n            </label>\r\n        </span>;\r\n\r\n        if (activityType === 'boolean') {\r\n            return (<span className=\"checkbox\">\r\n                {checkbox}\r\n            </span>)\r\n        } else{\r\n            let input;\r\n            if (activityType === 'string') {\r\n                input = <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    name=\"value\"\r\n                    disabled = {isChecked}\r\n                    onChange={this.handleChange}\r\n                />\r\n            } else {\r\n                input = <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    disabled = {isChecked}\r\n                    name=\"value\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            }\r\n            return (\r\n                <span className=\"checkbox\">\r\n                    {checkbox}\r\n                    {input}\r\n                </span>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nActivityCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ActivityCheckbox;\r\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`http://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    self.setState({error: result.error})\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`http://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        self.setState({error: result.error})\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: Your changes have not been saved. Please refresh and try again.</Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, domain } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const { row } = this.state;\r\n        const activities = row['activities']\r\n        const keys = Object.keys(activities);\r\n        let ids = [];\r\n\r\n        // figure out what to delete\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].attendanceItemID !== 0) {\r\n                ids.push(activities[keys[i]].attendanceItemID)\r\n            }\r\n        }\r\n\r\n        // delete the things\r\n        for (let i = 0; i < ids.length; i++) {\r\n            httpDelete(`http://${domain}/api/attendance/?key=${ids[i]}`);\r\n        }\r\n\r\n        this.props.CustomFunction(row['studentID']);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`http://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tself.setState({\r\n\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\tlastName:\"\",\r\n\t\t\t\t});\r\n\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>Search:</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: ''\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`http://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`http://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`http://${domain}/api/activities/`);\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                attendanceItems: attendanceItems\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    addStudent(e, studentID) {\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`http://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            // Add new row to table\r\n            let name = \"\";\r\n            for (var j = 0; j < students.length; j++) {\r\n                if (students[j].id === parseInt(studentID)) {\r\n                    name = `${students[j].first_name} ${students[j].last_name}`;\r\n                    break;\r\n                }\r\n            } \r\n\r\n            let activityList = {};\r\n            for (var j = 0; j < activities.length; j++) {\r\n                const type = activities[j].type;\r\n                const value = type === 'boolean' ? false : '';\r\n                activityList[activities[j].name] = {\r\n                    'activityID': activities[j].activity_id,\r\n                    'attendanceItemID': 0,\r\n                    'value': value,\r\n                    'type': type\r\n                }\r\n            }\r\n            activityList['Key']['value'] = true;\r\n            activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n            const row = {'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities':activityList};\r\n            attendance.push(row);\r\n            self.setState({attendance: attendance});\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                    <Button onClick={this.openModal}>New Student</Button> \r\n                </ButtonToolbar>\r\n                <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, LabelSeries, MarkSeries } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        yArray: [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ],\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 350;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 200;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(max) {\r\n      if (max > 0) {\r\n            return [\"#F5FBFD\", \"teal\"]\r\n        }\r\n    return [\"#F5FBFD\", \"#F5FBFD\"];\r\n}\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          return this.state.yArray.map(x=>x).reverse();\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor==0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const heatMapColors = this.colorRange(maxLegendLabel)\r\n\r\n    return (\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n              className=\"heatmap-series-example\"\r\n              colorRange = {heatMapColors}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n          <ContinuousColorLegend\r\n                width={300}\r\n                startTitle={minLegendLabel}\r\n                midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n                endTitle= {maxLegendLabel}\r\n                startColor=\"#F5FBFD\"\r\n                endColor={maxHeatMapColor}\r\n                height={100}\r\n              />\r\n\r\n      </XYPlot>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { httpGet, httpPatch, httpPost, domain, getEarlierDate, getPrevSunday, getNextSaturday, dateToString } from '../components/Helpers';\r\nimport { Button, Form, FormGroup, FormControl, Label, ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport blankPic from '../images/blank_profile_pic.jpg'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n    };\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`http://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      var studentColumnJson = await httpGet(`http://${domain}/api/student_column/`);\r\n      var profileInfo = this.parseCols(studentColumnJson);\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          id: null,\r\n\r\n          uploadedPic: false\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'id': null,\r\n          'blob_value': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`http://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      \r\n      try {\r\n        const studentInfoJson = await httpGet(`http://${domain}/api/student_info/?student_id=` + state.id);\r\n        state.profileInfo = this.parseStudentInfo(state, studentInfoJson);\r\n      } \r\n      catch (e) {\r\n        var studentColumnJson = await httpGet(`http://${domain}/api/student_column/`);\r\n        state.profileInfo = this.parseCols(studentColumnJson);\r\n      }\r\n\r\n      var startDate = getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      var startDateString = dateToString(startDate);\r\n      //var startDateString = \"2018-01-28\";\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      var endDateString = dateToString(endDate);\r\n      //var endDateString = \"2018-03-03\";\r\n      state.endDateString = endDateString;\r\n\r\n      const heatMapJson = await httpGet(`http://${domain}/api/reports/individualHeatmap/?student_id=` + state.id + '&startdate=' + startDateString + '&enddate=' + endDateString);\r\n      state.heatMapJson = heatMapJson;\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet('http://127.0.0.1:8000/api/student_info?student_id=' + this.state.id);\r\n    var profileInfo = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: profileInfo,\r\n      };\r\n    });\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n\r\n      // Ensure all varchar(x) types get caught as str_value\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state.profileInfo;\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' })\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileData[changedField] = evt.target.value;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n\r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfo[changedField].type;\r\n\r\n    state.profileInfo[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfo[changedField].value = newValue;\r\n    state.profileInfo[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault()\r\n    httpPatch(`http://${domain}/api/students/`, state.profileData);\r\n    \r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          httpPatch(`http://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost);\r\n        } else {\r\n          console.log(field.patchPost);\r\n          httpPost(`http://${domain}/api/student_info/`, field.patchPost);\r\n          posted = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var studentId = state.id;\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    // var startDateString = \"2018-01-03\";\r\n    //var endDateString = \"2018-01-31\";\r\n    var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var mdyArray;\r\n    var m, d, y;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '\\/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      mdyArray = heatMapJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n      y = mdyArray[0];\r\n      m = mdyArray[1];\r\n      d = mdyArray[2];\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value != null != '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type;\r\n        switch (this.state.profileInfo[entry].type) {\r\n          case 'str_value':\r\n          type = \"text\";\r\n          break;\r\n          case 'int_value':\r\n          type = \"int\";\r\n          break;\r\n          case 'date_value':\r\n          type = \"date\";\r\n          break;\r\n          case 'time_value':\r\n          type = \"time\";\r\n          break;\r\n        }\r\n        \r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    console.log(evt.target.files[0]);\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.state.profileInfo[5].updated = true;\r\n      this.state.profileInfo[5].patchPost['blob_value'] = reader.result;\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          src: reader.result,\r\n          uploadedPic: true\r\n        };\r\n      });\r\n    }\r\n    reader.readAsDataURL(evt.target.files[0]);\r\n  }\r\n\r\n  render() {\r\n    let permissions = window.localStorage.getItem('permissions').split(',')\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      var pic;\r\n      if (this.state.uploadedPic) {\r\n        pic = this.state.src;\r\n      } else {\r\n        pic = blankPic;\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'> \r\n              <div className='col-md-2 to-front top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={pic} width=\"196\" height=\"196\" /><br /> */}\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n      <Heatmap\r\n        data = {this.formatData(this.state)} heatMapType = \"individualStudent\"/>\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\" /> */}\r\n                {/* <p> Upload Student Profile Photo </p> */}\r\n                {/* <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br /> */}\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    <Label>Last Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button> \r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, {Component} from 'react';\r\nimport Heatmap from '../components/Heatmap';\r\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport {getEarlierDate, getPrevSunday, getNextSaturday, dateToString, domain, httpGet } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js'\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byDayJson: [],\r\n            byDayHeatMap: []\r\n        };\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //hardcoded date range for testing\r\n          var startDateStringWeek = \"2018-02-08\";\r\n          var endDateStringWeek = \"2018-02-14\";\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          // var startDateWeek = getEarlierDate(6);\r\n          // var startDateStringWeek = dateToString(startDateWeek);\r\n          // var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`http://${domain}/api/reports/byHourAttendance/?startdate=` + startDateStringWeek + '&enddate=' + endDateStringWeek);\r\n          console.log(\"By hour:\",byHourJson);\r\n          // var byHourJson = await byHourAttendanceData.json();\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n          var startDateYear= getEarlierDate(365);\r\n          startDateYear = getPrevSunday(startDateYear);\r\n          var startDateStringYear = dateToString(startDateYear);\r\n          var endDateYear = getNextSaturday(today);\r\n          var endDateStringYear = dateToString(endDateYear);\r\n          const byDayJson = await httpGet(`http://${domain}/api/reports/byDayAttendance/?startdate=` + startDateStringYear + '&enddate=' + endDateStringYear);\r\n          // var byDayJson = await byDayAttendanceData.json();\r\n          var dayData = await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear);\r\n          var hourData = await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n\r\n\r\n          //Delete this block later, this is just here for testing\r\n          // var dayData = this.formatDayData(this.state);\r\n          // console.log(\"processed day of year data after setting state: \", this.state.byDayJson);\r\n          // var hourData = this.formatHourData(this.state);\r\n          // console.log(\"processed hour of week data: \", hourData);\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          mdyArray = byDayJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          annualHeatMapEntry = {\"x\": weekNum, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on same day, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,2);\r\n          mdyArray = byHourJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //add this into render later to display heatmaps\r\n    /*<Heatmap \r\n      data = {this.formatHourData(this.state)}/>\r\n      <Heatmap \r\n      data = {this.formatDayData(this.state)}/>\r\n      */\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container py-4\">\r\n                <h1> Reports </h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 align-self-center\">\r\n                        <h3> Hourly Attendance </h3>\r\n                        <Heatmap\r\n                        data = {this.state.byHourJson}\r\n                        heatMapType = \"weekly\" />\r\n\r\n                    </div>\r\n                    <div className='col-md-4 align-self-center'>\r\n                        <h3> Daily Attendance </h3>\r\n                        <BarChart data = {this.state.byDayJson.slice(0, 7)}/> </div>\r\n\r\n\r\n                    </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h3> Annual Daily Attendance </h3>\r\n                  <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n                </div>\r\n                 </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`http://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({backendError: true});\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`http://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`http://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({\r\n                        backendError: true\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>{this.state.row['name'] === undefined || this.state.row['name'] === ' ' ? \"[User History]\" : this.state.row['name'] }</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { httpGet, domain } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`http://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`http://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            const roles = await httpGet(`http://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n        }\r\n        this.setState({showUserModal: false, users: users, showingUsers: showingUsers, showingAllUsers: false});\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users });\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`http://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, name: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                    <Button onClick={this.openModal}>New User</Button>\r\n                </ButtonToolbar>\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                checkboxes.push({label: perm_name, checked: false})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`http://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpDelete, httpPatch, domain } from './Helpers';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`http://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`http://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role?')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`http://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`http://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`http://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response) {\r\n                    console.log(response);\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(response);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`http://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n            return;\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`http://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`http://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response[0] || 'error' in response[1]) {\r\n                    console.log(response);\r\n                } else {\r\n                    let activity1 = response[0];\r\n                    let activity2 = response[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Attendance Activities</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport Activities from './Activities';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          <Tab eventKey={1} title=\"User Management\">\r\n            <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={2} title=\"User Roles\">\r\n            <Roles toggleRefreshRoles={this.toggleRefreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={3} title=\"Attendance Activities\">\r\n            <Activities />\r\n          </Tab>\r\n          <Tab eventKey={4} title=\"Student Profile Fields\">\r\n            Tab 4 content\r\n          </Tab>\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\n\r\nclass Alerts extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <p>Alerts</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alerts;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport Alerts from '../views/Alerts';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route path='/alerts' render={() => checkCredentials(Alerts)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}