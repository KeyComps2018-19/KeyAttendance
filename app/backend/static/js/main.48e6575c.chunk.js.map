{"version":3,"sources":["images/blank_profile_pic.jpg","components/Layout.js","components/Helpers.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/AssignStudentKeyButton.js","components/FileUploader.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/StudentFieldCheckbox.js","components/AddStudentFieldModal.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","name","history","push","concat","logout","window","localStorage","removeItem","state","activeItem","show","children","permissionString","getItem","permissions","split","nav","indexOf","react_default","a","createElement","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","Component","withRouter","createBrowserHistory","domain","httpPost","url","body","arguments","length","undefined","token","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","error","json","httpPatch","httpGet","httpDelete","compareActivities","b","ordering","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","sent","sort","abrupt","is_showing","id","activity_id","type","student_id","date","str_value","num_value","first_name","last_name","t0","require","unparse","fields","data","document","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","checkCredentials","Redirect","to","partitions","parse","atob","decodeToken","exp","Date","now","getEarlierDate","daysAgo","console","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","ids","CustomFunction","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","info_id","log","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","getCurrentDate","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","components_AddStudentModal","ButtonToolbar","float","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArray","yArrayStudents","heatMapType","dataLength","max","x","reverse","toCompare","min","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","heatMapColors","colorRange","es","width","scaleWidth","scaleHeight","margin","top","xType","yType","axisType","yDomain","reverseYAxis","orientation","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","mode","edit","studentsJson","studentColumnJson","parseCols","previousState","currentProps","uploadedPic","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","blob_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","studentInfoJson","parseStudentInfo","startDateString","endDateString","heatMapJson","_context2","t1","infoId","changedField","newValue","posted","updateStudentInfo","entryFound","entryIndex","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayOfWeek","weekNum","dayEntry","mdyArray","processedData","strDays","floor","y","color","files","reader","FileReader","onloadend","src","readAsDataURL","blankPic","ListGroup","parsedInfo","variant","components_Heatmap","formatData","handleNameChange","BarChart","obj","labelAnchorX","labelAnchorY","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byDayJson","byDayHeatMap","startDateYear","endDateYear","formatDayData","formatHourData","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","hourEntry","hourOfDay","components_BarChart","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","test","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","delete","role_name","onDelete","passwordBlock","confirm","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","values","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","newUser","last_login","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","student_key","studentKey","onClose","match_key","paddingTop","match_name","AssignStudentKeyButton","FileUploader","event","file","extension","upload","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","header","output","components_AssignStudentKeyModal","components_FileUploader","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","errorMsg","componentClass","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","StudentFieldCheckbox","quick_add","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","Tabs","activeKey","onSelect","Tab","eventKey","title","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48e6575c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    let permissionString = window.localStorage.getItem(\"permissions\");\r\n    let permissions = permissionString === null ? [] : permissionString.split(\",\")\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    let navItems = <Nav>\r\n        {nav}\r\n        <NavItem onClick={this.handleItemClick('reports')}>Reports</NavItem>\r\n      </Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst domain = 'app.jordansybesma.com' // '127.0.0.1:8000'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else if (response) {\r\n\t\t\treturn response.json()\r\n\t\t} else {\r\n\t\t\treturn // we got nothing back\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `https://${domain}/api/attendance/?day=${startDate}` : `https://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`https://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`https://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tif (token === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t} \r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, domain, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`https://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ActivityCheckbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n        value: '',\r\n        activityType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\r\n    };\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked, value, activityType } = this.state;\r\n\r\n        let checkbox = <span className=\"checkbox\">\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={label}\r\n                    checked={isChecked}\r\n                    onChange={this.toggleCheckboxChange}\r\n                />\r\n                {label}\r\n            </label>\r\n        </span>;\r\n\r\n        if (activityType === 'boolean') {\r\n            return (<span className=\"checkbox\">\r\n                {checkbox}\r\n            </span>)\r\n        } else{\r\n            let input;\r\n            if (activityType === 'string') {\r\n                input = <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    name=\"value\"\r\n                    disabled = {isChecked}\r\n                    onChange={this.handleChange}\r\n                />\r\n            } else {\r\n                input = <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    disabled = {isChecked}\r\n                    name=\"value\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            }\r\n            return (\r\n                <span className=\"checkbox\">\r\n                    {checkbox}\r\n                    {input}\r\n                </span>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nActivityCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ActivityCheckbox;\r\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`https://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    self.setState({error: result.error})\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`https://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        self.setState({error: result.error})\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: Your changes have not been saved. Please refresh and try again.</Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, domain } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const { row } = this.state;\r\n        const activities = row['activities']\r\n        const keys = Object.keys(activities);\r\n        let ids = [];\r\n\r\n        // figure out what to delete\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].attendanceItemID !== 0) {\r\n                ids.push(activities[keys[i]].attendanceItemID)\r\n            }\r\n        }\r\n\r\n        // delete the things\r\n        for (let i = 0; i < ids.length; i++) {\r\n            httpDelete(`https://${domain}/api/attendance/?key=${ids[i]}`);\r\n        }\r\n\r\n        this.props.CustomFunction(row['studentID']);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\tshow: false,\r\n\t\t\tstudentFields: {},\r\n\t\t\tstudentInfo: {},\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n\t\t\tlet studentInfo = {};\r\n\t\t\tconst fieldsList = this.props.studentFields;\r\n\t\t\tlet studentFields = {};\r\n\t\t\tfor (var index in fieldsList) {\r\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\r\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tshow: this.props.show,\r\n\t\t\t\tstudentFields: studentFields,\r\n\t\t\t\tstudentInfo: studentInfo,\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tcreateStudentInfo(name, value, student_id, self) {\r\n\t\tconst {studentFields} = self.state;\r\n\t\tconst field = studentFields[name];\r\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\r\n\t\tif (field.type === 'str') {\r\n\t\t\tbody['str_value'] = value;\r\n\t\t} else if (field.type === 'int') {\r\n\t\t\tbody['int_value'] = value;\r\n\t\t} else if (field.type === 'date') {\r\n\t\t\tbody['date_value'] = value;\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`https://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tconst student_id = result.id;\r\n\t\t\t\tconst {studentInfo} = self.state;\r\n\t\t\t\tlet infoBody = [];\r\n\t\t\t\tfor (var field in studentInfo) {\r\n\t\t\t\t\tif (studentInfo[field] !== '') {\r\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thttpPost(`https://${domain}/api/student_info/`, infoBody)\r\n\t\t\t\t\t.then(function (infoResult) {\r\n\t\t\t\t\t\tif ('error' in infoResult) {\r\n\t\t\t\t\t\t\tconsole.log(infoResult);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\t\t\t\tlastName: \"\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcreateStudentInfoFields () {\r\n\t\tlet info = [];\r\n\t\tconst { studentFields } = this.state;\r\n\t\tfor (var fieldName in studentFields) {\r\n\t\t\tconst field = studentFields[fieldName];\r\n\t\t\tlet type;\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\ttype = \"text\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\ttype = \"int\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\ttype = \"date\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\r\n\t\t}\r\n\t\treturn info;\r\n\t}\r\n\r\n\thandleInfoChange = e => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\t\tlet { studentInfo } = this.state;\r\n\t\tstudentInfo[name] = value;\r\n        this.setState({\r\n\t\t\tstudentInfo\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>Search:</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: ''\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`https://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`https://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`https://${domain}/api/activities/`);\r\n            const studentFields = await httpGet(`https://${domain}/api/student_column/?quick_add=True`)\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                studentFields : studentFields,\r\n                attendanceItems: attendanceItems\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    addStudent(e, studentID) {\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`https://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            // Add new row to table\r\n            let name = \"\";\r\n            for (var j = 0; j < students.length; j++) {\r\n                if (students[j].id === parseInt(studentID)) {\r\n                    name = `${students[j].first_name} ${students[j].last_name}`;\r\n                    break;\r\n                }\r\n            } \r\n\r\n            let activityList = {};\r\n            for (var j = 0; j < activities.length; j++) {\r\n                const type = activities[j].type;\r\n                const value = type === 'boolean' ? false : '';\r\n                activityList[activities[j].name] = {\r\n                    'activityID': activities[j].activity_id,\r\n                    'attendanceItemID': 0,\r\n                    'value': value,\r\n                    'type': type\r\n                }\r\n            }\r\n            activityList['Key']['value'] = true;\r\n            activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n            const row = {'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities':activityList};\r\n            attendance.push(row);\r\n            self.setState({attendance: attendance});\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                    <Button onClick={this.openModal}>New Student</Button> \r\n                </ButtonToolbar>\r\n                <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, LabelSeries, MarkSeries } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        yArray: [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ],\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 350;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 200;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(max) {\r\n      if (max > 0) {\r\n            return [\"#F5FBFD\", \"teal\"]\r\n        }\r\n    return [\"#F5FBFD\", \"#F5FBFD\"];\r\n}\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          return this.state.yArray.map(x=>x).reverse();\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor==0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const heatMapColors = this.colorRange(maxLegendLabel)\r\n\r\n    return (\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n              className=\"heatmap-series-example\"\r\n              colorRange = {heatMapColors}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n          <ContinuousColorLegend\r\n                width={300}\r\n                startTitle={minLegendLabel}\r\n                midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n                endTitle= {maxLegendLabel}\r\n                startColor=\"#F5FBFD\"\r\n                endColor={maxHeatMapColor}\r\n                height={100}\r\n              />\r\n\r\n      </XYPlot>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { httpGet, httpPatch, httpPost, domain, getEarlierDate, getPrevSunday, getNextSaturday, dateToString } from '../components/Helpers';\r\nimport { Button, Form, FormGroup, FormControl, Label, ListGroup, ListGroupItem} from \"react-bootstrap\";\r\nimport blankPic from '../images/blank_profile_pic.jpg'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n    };\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`https://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      var studentColumnJson = await httpGet(`https://${domain}/api/student_column/`);\r\n      var profileInfo = this.parseCols(studentColumnJson);\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          id: null,\r\n\r\n          uploadedPic: false\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'id': null,\r\n          'blob_value': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`https://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      \r\n      try {\r\n        const studentInfoJson = await httpGet(`https://${domain}/api/student_info/?student_id=` + state.id);\r\n        state.profileInfo = this.parseStudentInfo(state, studentInfoJson);\r\n      } \r\n      catch (e) {\r\n        var studentColumnJson = await httpGet(`https://${domain}/api/student_column/`);\r\n        state.profileInfo = this.parseCols(studentColumnJson);\r\n      }\r\n\r\n      var startDate = getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      var startDateString = dateToString(startDate);\r\n      //var startDateString = \"2018-01-28\";\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      var endDateString = dateToString(endDate);\r\n      //var endDateString = \"2018-03-03\";\r\n      state.endDateString = endDateString;\r\n\r\n      const heatMapJson = await httpGet(`https://${domain}/api/reports/individualHeatmap/?student_id=` + state.id + '&startdate=' + startDateString + '&enddate=' + endDateString);\r\n      state.heatMapJson = heatMapJson;\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet(`https://${domain}/api/student_info?student_id=` + this.state.id);\r\n    var profileInfo = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: profileInfo,\r\n      };\r\n    });\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n\r\n      var type;\r\n      state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state.profileInfo;\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' })\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileData[changedField] = evt.target.value;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n\r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfo[changedField].type;\r\n\r\n    state.profileInfo[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfo[changedField].value = newValue;\r\n    state.profileInfo[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault()\r\n    httpPatch(`https://${domain}/api/students/`, state.profileData);\r\n    \r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          httpPatch(`https://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost);\r\n        } else {\r\n          console.log(field.patchPost);\r\n          httpPost(`https://${domain}/api/student_info/`, field.patchPost);\r\n          posted = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var studentId = state.id;\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    // var startDateString = \"2018-01-03\";\r\n    //var endDateString = \"2018-01-31\";\r\n    var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var mdyArray;\r\n    var m, d, y;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '\\/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      mdyArray = heatMapJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n      y = mdyArray[0];\r\n      m = mdyArray[1];\r\n      d = mdyArray[2];\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value != null != '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type;\r\n        switch (this.state.profileInfo[entry].type) {\r\n          case 'str_value':\r\n          type = \"text\";\r\n          break;\r\n          case 'int_value':\r\n          type = \"int\";\r\n          break;\r\n          case 'date_value':\r\n          type = \"date\";\r\n          break;\r\n          case 'time_value':\r\n          type = \"time\";\r\n          break;\r\n        }\r\n        \r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    console.log(evt.target.files[0]);\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.state.profileInfo[5].updated = true;\r\n      this.state.profileInfo[5].patchPost['blob_value'] = reader.result;\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          src: reader.result,\r\n          uploadedPic: true\r\n        };\r\n      });\r\n    }\r\n    reader.readAsDataURL(evt.target.files[0]);\r\n  }\r\n\r\n  render() {\r\n    let permissions = window.localStorage.getItem('permissions').split(',')\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      var pic;\r\n      if (this.state.uploadedPic) {\r\n        pic = this.state.src;\r\n      } else {\r\n        pic = blankPic;\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'> \r\n              <div className='col-md-2 to-front top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={pic} width=\"196\" height=\"196\" /><br /> */}\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n      <Heatmap\r\n        data = {this.formatData(this.state)} heatMapType = \"individualStudent\"/>\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\" /> */}\r\n                {/* <p> Upload Student Profile Photo </p> */}\r\n                {/* <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br /> */}\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    <Label>Last Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button> \r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, {Component} from 'react';\r\nimport Heatmap from '../components/Heatmap';\r\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport {getEarlierDate, getPrevSunday, getNextSaturday, dateToString, domain, httpGet } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js'\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byDayJson: [],\r\n            byDayHeatMap: []\r\n        };\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //hardcoded date range for testing\r\n          var startDateStringWeek = \"2018-02-08\";\r\n          var endDateStringWeek = \"2018-02-14\";\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          // var startDateWeek = getEarlierDate(6);\r\n          // var startDateStringWeek = dateToString(startDateWeek);\r\n          // var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`https://${domain}/api/reports/byHourAttendance/?startdate=` + startDateStringWeek + '&enddate=' + endDateStringWeek);\r\n          console.log(\"By hour:\",byHourJson);\r\n          // var byHourJson = await byHourAttendanceData.json();\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n          var startDateYear= getEarlierDate(365);\r\n          startDateYear = getPrevSunday(startDateYear);\r\n          var startDateStringYear = dateToString(startDateYear);\r\n          var endDateYear = getNextSaturday(today);\r\n          var endDateStringYear = dateToString(endDateYear);\r\n          const byDayJson = await httpGet(`https://${domain}/api/reports/byDayAttendance/?startdate=` + startDateStringYear + '&enddate=' + endDateStringYear);\r\n          // var byDayJson = await byDayAttendanceData.json();\r\n          var dayData = await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear);\r\n          var hourData = await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n\r\n\r\n          //Delete this block later, this is just here for testing\r\n          // var dayData = this.formatDayData(this.state);\r\n          // console.log(\"processed day of year data after setting state: \", this.state.byDayJson);\r\n          // var hourData = this.formatHourData(this.state);\r\n          // console.log(\"processed hour of week data: \", hourData);\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          mdyArray = byDayJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          annualHeatMapEntry = {\"x\": weekNum, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on same day, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,2);\r\n          mdyArray = byHourJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //add this into render later to display heatmaps\r\n    /*<Heatmap \r\n      data = {this.formatHourData(this.state)}/>\r\n      <Heatmap \r\n      data = {this.formatDayData(this.state)}/>\r\n      */\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container py-4\">\r\n                <h1> Reports </h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 align-self-center\">\r\n                        <h3> Hourly Attendance </h3>\r\n                        <Heatmap\r\n                        data = {this.state.byHourJson}\r\n                        heatMapType = \"weekly\" />\r\n\r\n                    </div>\r\n                    <div className='col-md-4 align-self-center'>\r\n                        <h3> Daily Attendance </h3>\r\n                        <BarChart data = {this.state.byDayJson.slice(0, 7)}/> </div>\r\n\r\n\r\n                    </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h3> Annual Daily Attendance </h3>\r\n                  <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n                </div>\r\n                 </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`https://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({backendError: true});\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`https://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`https://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({\r\n                        backendError: true\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>{this.state.row['name'] === undefined || this.state.row['name'] === ' ' ? \"[User History]\" : this.state.row['name'] }</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { httpGet, domain } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`https://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`https://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            const roles = await httpGet(`https://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n        }\r\n        this.setState({showUserModal: false, users: users, showingUsers: showingUsers, showingAllUsers: false});\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users });\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`https://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, name: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                    <Button onClick={this.openModal}>New User</Button>\r\n                </ButtonToolbar>\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                checkboxes.push({label: perm_name, checked: false})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`https://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpDelete, httpPatch, domain } from './Helpers';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`https://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`https://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role?')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`https://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`https://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\r\nimport { httpGet, httpPatch } from './Helpers';\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass AssignStudentKeyModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oldID: 0,\r\n            student: {},\r\n            suggestions: [],\r\n            searchArray: [],\r\n            match: \"\",\r\n        }\r\n\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.setMatch = this.setMatch.bind(this);\r\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\r\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            oldID: this.props.studentID\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\r\n            const student = await httpGet(`http://127.0.0.1:8000/api/students/?id=${this.props.studentID}`);\r\n            const suggestions = await httpGet(`http://127.0.0.1:8000/api/suggestions/student/?id=${this.props.studentID}`);\r\n            const searchArray = this.buildSuggestionsArray();\r\n\r\n            this.setState({\r\n                student: student,\r\n                suggestions: suggestions,\r\n                searchArray: searchArray,\r\n                oldID: this.props.studentID\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSuggestionsArray() {\r\n        let array = []\r\n        const citySpanStudents = this.props.citySpanStudents;\r\n        for (var object in this.props.citySpanStudents) {\r\n            array.push({\r\n                firstName: citySpanStudents[object].first_name,\r\n                lastName1: citySpanStudents[object].last_name,\r\n                lastName2: \"\",\r\n                id: citySpanStudents[object].student_key\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    setMatch(studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    setMatchFromSearch(e, studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose()\r\n    }\r\n\r\n    onSubmit() {\r\n        // PATCH student\r\n        httpPatch(`http://127.0.0.1:8000/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose(this.props.studentID);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <h4>Suggestions:</h4>\r\n                    {this.state.suggestions.length === 3 \r\n                    && <ListGroup>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\r\n                      </ListGroup>}\r\n                    <br/>\r\n                    <h4>Search for match:</h4>\r\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\r\n                    <br/>\r\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass AssignStudentKeyButton extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyButton;\r\n","import React from 'react';\r\nimport { Button, Form, FormControl, FormGroup, ControlLabel, Label, Well } from 'react-bootstrap';\r\nimport { httpGet } from './Helpers';\r\n\r\nclass FileUploader extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t  super();\r\n\t  this.state = {\r\n\t\tfile: undefined,\r\n\t\terror: \"\",\r\n\t  };\r\n\r\n\t  this.submit = this.submit.bind(this);\r\n\t}\r\n  \r\n\thandleChange = event => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\r\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\terror: \"\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Invalid file type\"\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tsubmit() {\r\n\t\tif (this.state.file !== undefined) {\r\n\t\t\tthis.props.upload(this.state.file);\r\n\t\t\tthis.setState({file: undefined});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\r\n\t\t\t\t<Well style={{display: 'inline-block'}}>\r\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\r\n\t\t\t\t</Well>\r\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\r\n\t\t\t</FormGroup>\r\n\t\t\t{this.state.error !== \"\" && <Label bsStyle=\"danger\">Error: {this.state.error}</Label>}\r\n\t\t</Form>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default FileUploader;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\r\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch } from './Helpers';\r\nimport FileUploader from './FileUploader';\r\n\r\nclass StudentKeys extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unmatchedStudents: [],\r\n            citySpanStudents: [],\r\n            suggestions: [],\r\n            showModal: false,\r\n            focusedStudent: -1,\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleRowClick = this.handleRowClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\r\n        this.processCSV = this.processCSV.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const unmatchedStudents = await httpGet('http://127.0.0.1:8000/api/suggestions/unmatchedstudents/');\r\n            const citySpanStudents = await httpGet('http://127.0.0.1:8000/api/suggestions/cityspanstudents/');\r\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\r\n\r\n            this.setState({\r\n                unmatchedStudents: unmatchedStudents,\r\n                suggestions: suggestions,\r\n                showModal: false,\r\n                focusedStudent: -1,\r\n                citySpanStudents: citySpanStudents\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleCSVUpload(csv) {\r\n        var papa = require('papaparse');\r\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\r\n    }\r\n\r\n    processCSV(result) {\r\n        var output = []\r\n        for (let index in result.data) {\r\n            let obj = result.data[index];\r\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\r\n                continue;\r\n            } \r\n            output.push({first_name: obj[\"First Name\"], last_name: obj[\"Last Name\"], student_key: obj[\"Student Key\"]})\r\n        }\r\n        httpPatch('http://127.0.0.1:8000/api/suggestions/cityspanstudents/', {\"students\": output});\r\n    }\r\n\r\n    tmpfail(error, file) {\r\n        console.log(error);\r\n    }\r\n\r\n    handleRowClick(studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    closeModal(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({\r\n            showModal: false,\r\n            unmatchedStudents: unmatchedStudents\r\n        });\r\n    }\r\n\r\n    handleSearch(e, studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    updateStudents(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({unmatchedStudents: unmatchedStudents});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.unmatchedStudents.map(student =>\r\n            (\r\n               {\r\n                   name: `${student.first_name} ${student.last_name}`,\r\n                   id: student.id\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: AssignStudentKeyButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Students Without Student Keys</h1>\r\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\r\n                <br/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <Autocomplete\r\n                        suggestions={this.state.suggestions}\r\n                        handler={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div style={{float: 'right'}}>\r\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\r\n                </div>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'edit':this.handleRowClick}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentKeys ;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`https://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response) {\r\n                    console.log(response);\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(response);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`https://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n            return;\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`https://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`https://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response[0] || 'error' in response[1]) {\r\n                    console.log(response);\r\n                } else {\r\n                    let activity1 = response[0];\r\n                    let activity2 = response[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Attendance Activities</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React, { Component } from 'react';\r\nimport { httpPatch, domain } from './Helpers';\r\n\r\nclass StudentFieldCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accessor === 'is_showing') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.info_id !== this.state.row.info_id) {\r\n            this.setState({ row: this.props.row });\r\n        }\r\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {info_id: row.info_id};\r\n        body[self.props.accessor] = !self.state.checked;\r\n        httpPatch(`https://${domain}/api/student_column/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response) {\r\n                    console.log(response);\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(response);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentFieldCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddStudentFieldModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\r\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            is_showing: self.state.inUse,\r\n            quick_add: self.state.quickAdd,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`https://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n            return;\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'str',\r\n                        inUse: true,\r\n                        quickAdd: false,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleInUseCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n\r\n    handleQuickAddCheckbox = e => {\r\n        this.setState({quickAdd: !this.state.quickAdd});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Field Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Field Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"date\">Date</option>\r\n                                <option value=\"str\">Text</option>\r\n                                <option value=\"int\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleInUseCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <ControlLabel>Show in Quick Add</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.quickAdd}\r\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\r\n                                onChange={this.handleQuickAddCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentFieldModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain } from './Helpers';\r\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddStudentFieldModal from './AddStudentFieldModal';\r\n\r\nclass EditStudentFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.createNewField = this.createNewField.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const fields = await httpGet(`https://${domain}/api/student_column/`);\r\n            this.setState({\r\n                fields\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewField(field) {\r\n        return {\r\n            info_id: field.info_id,\r\n            is_showing: field.is_showing,\r\n            quick_add: field.quick_add,\r\n            name: field.name,\r\n            type: field.type,\r\n        };\r\n    }\r\n\r\n    updateCheckbox(field=null) {\r\n        let self = this;\r\n        let { fields } = self.state;\r\n        if (field !== null) {\r\n            fields = fields.filter(item => item.info_id !== field.info_id);\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        self.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'date') {\r\n            return 'Date';\r\n        } else if (type === 'str') {\r\n            return 'Text';\r\n        } else if (type === 'int') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(field=null) {\r\n        const { fields } = this.state;\r\n        if (field !== null) {\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        this.setState({showModal: false, fields: fields});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.fields.map(field =>\r\n            (\r\n               {\r\n                   name: field.name,\r\n                   is_showing: field.is_showing,\r\n                   info_id: field.info_id,\r\n                   type: field.type,\r\n                   type_name: this.getDataTypeName(field.type),\r\n                   quick_add: field.quick_add\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Field',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'quick_add',\r\n                label: 'Show in Quick Add',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n        ];\r\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Student Profile Fields</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\r\n                </ButtonToolbar>\r\n                <AddStudentFieldModal show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditStudentFields;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport StudentKeys from './StudentKeys';\r\nimport Activities from './Activities';\r\nimport EditStudentFields from './EditStudentFields';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          <Tab eventKey={1} title=\"User Management\">\r\n            <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={2} title=\"User Roles\">\r\n            <Roles toggleRefreshRoles={this.toggleRefreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={3} title=\"Attendance Activities\">\r\n            <Activities />\r\n          </Tab>\r\n          <Tab eventKey={4} title=\"Student Profile Fields\">\r\n            <EditStudentFields />\r\n          </Tab>\r\n          <Tab eventKey={5} title=\"Student Key Management\">\r\n            <StudentKeys/>\r\n          </Tab>\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}