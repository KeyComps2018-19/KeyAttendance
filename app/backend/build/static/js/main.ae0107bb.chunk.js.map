{"version":3,"sources":["components/Layout.js","components/Helpers.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AdminTabs.js","views/Admin.js","views/Alerts.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js","images/blank_profile_pic.jpg"],"names":["Layout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","name","history","push","concat","logout","window","localStorage","removeItem","state","activeItem","show","children","permissions","getItem","split","nav","indexOf","react_default","a","createElement","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","Component","withRouter","createBrowserHistory","domain","httpPost","url","body","arguments","length","undefined","token","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","error","json","httpPatch","httpGet","httpDelete","compareActivities","b","ordering","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","sent","sort","abrupt","is_showing","id","activity_id","type","student_id","date","str_value","num_value","first_name","last_name","t0","console","log","require","unparse","fields","data","document","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","checkCredentials","tokenData","partitions","parse","atob","decodeToken","Redirect","to","exp","Date","now","getEarlierDate","daysAgo","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","ids","CustomFunction","AddStudentModal","firstName","lastName","cancel","onFirstNameChange","onLastNameChange","Modal","Title","Body","controlId","validationState","validateInput","Feedback","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","index","react","Form","inline","autoComplete","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","getCurrentDate","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","components_AddStudentModal","ButtonToolbar","float","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","es","width","margin","top","xType","orientation","colorRange","stroke","strokeWidth","rectStyle","rx","ry","Students","mode","studentsJson","profileData","heatMapJson","startDateString","endDateString","edit","previousState","currentProps","studentId","getStudentProfile","studentProfileJson","_context2","evt","changedField","entryFound","entryIndex","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayOfWeek","weekNum","dayEntry","mdyArray","processedData","strDays","floor","x","y","color","src","blankPic","birthday","nickname","gender","first_attendance","number_visits","components_Heatmap","formatData","accept","defaultValue","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byDayJson","startDateWeek","startDateYear","endDateYear","dayData","formatDayData","hourData","formatHourData","currHour","hourArray","entry","hourToCompareIdx","hourToCompare","count","hourEntry","hourOfDay","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","test","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","delete","role_name","onDelete","passwordBlock","confirm","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","Users","users","updateRow","roles","refreshRoles","toggleRefreshRoles","last_login","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","getFormattedTime","isActive","checkmark","tableCallbacks","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","errorMsg","componentClass","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","find","type_name","up","down","components_AddActivityModal","AdminTabs","context","handleSelect","Tabs","activeKey","onSelect","Tab","eventKey","title","components_Users","components_Roles","components_Activities","Admin","components_AdminTabs","Alerts","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.ae0107bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    let permissionString = window.localStorage.getItem(\"permissions\");\r\n    let permissions = permissionString.split(\",\")\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    let navItems = <Nav>\r\n        {nav}\r\n        <NavItem onClick={this.handleItemClick('reports')}>Reports</NavItem>\r\n        <NavItem onClick={this.handleItemClick('alerts')}>Alerts</NavItem>\r\n      </Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst domain = 'ec2-3-16-129-180.us-east-2.compute.amazonaws.com' // '127.0.0.1:8000'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `http://${domain}/api/attendance/?day=${startDate}` : `http://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`http://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`http://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\trow[j] = 'N/A' // Needs student keys to be added to the database\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tconsole.log(entries[keys[i]][activity.id])\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n    let tokenData = decodeToken(token)\r\n\tif (token === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else if (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, domain, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`http://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ActivityCheckbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n        value: '',\r\n        activityType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\r\n    };\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked, value, activityType } = this.state;\r\n\r\n        let checkbox = <span className=\"checkbox\">\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={label}\r\n                    checked={isChecked}\r\n                    onChange={this.toggleCheckboxChange}\r\n                />\r\n                {label}\r\n            </label>\r\n        </span>;\r\n\r\n        if (activityType === 'boolean') {\r\n            return (<span className=\"checkbox\">\r\n                {checkbox}\r\n            </span>)\r\n        } else{\r\n            let input;\r\n            if (activityType === 'string') {\r\n                input = <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    name=\"value\"\r\n                    disabled = {isChecked}\r\n                    onChange={this.handleChange}\r\n                />\r\n            } else {\r\n                input = <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    disabled = {isChecked}\r\n                    name=\"value\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            }\r\n            return (\r\n                <span className=\"checkbox\">\r\n                    {checkbox}\r\n                    {input}\r\n                </span>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nActivityCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ActivityCheckbox;\r\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`http://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    self.setState({error: result.error})\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`http://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        self.setState({error: result.error})\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: Your changes have not been saved. Please refresh and try again.</Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, domain } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const { row } = this.state;\r\n        const activities = row['activities']\r\n        const keys = Object.keys(activities);\r\n        let ids = [];\r\n\r\n        // figure out what to delete\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].attendanceItemID !== 0) {\r\n                ids.push(activities[keys[i]].attendanceItemID)\r\n            }\r\n        }\r\n\r\n        // delete the things\r\n        for (let i = 0; i < ids.length; i++) {\r\n            httpDelete(`http://${domain}/api/attendance/?key=${ids[i]}`);\r\n        }\r\n\r\n        this.props.CustomFunction(row['studentID']);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`http://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tself.setState({\r\n\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\tlastName:\"\",\r\n\t\t\t\t});\r\n\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.id.toString().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \" +\r\n            suggestion.id.toString()).startsWith(userInput.toLowerCase()) === true)\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>Search:</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder=\"Name or ID\"\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: ''\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`http://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`http://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`http://${domain}/api/activities/`);\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                attendanceItems: attendanceItems\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    addStudent(e, studentID) {\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`http://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            // Add new row to table\r\n            let name = \"\";\r\n            for (var j = 0; j < students.length; j++) {\r\n                if (students[j].id === parseInt(studentID)) {\r\n                    name = `${students[j].first_name} ${students[j].last_name}`;\r\n                    break;\r\n                }\r\n            } \r\n\r\n            let activityList = {};\r\n            for (var j = 0; j < activities.length; j++) {\r\n                const type = activities[j].type;\r\n                const value = type === 'boolean' ? false : '';\r\n                activityList[activities[j].name] = {\r\n                    'activityID': activities[j].activity_id,\r\n                    'attendanceItemID': 0,\r\n                    'value': value,\r\n                    'type': type\r\n                }\r\n            }\r\n            activityList['Key']['value'] = true;\r\n            activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n            const row = {'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities':activityList};\r\n            attendance.push(row);\r\n            self.setState({attendance: attendance});\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        const today = new Date()\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                    <Button onClick={this.openModal}>New Student</Button> \r\n                </ButtonToolbar>\r\n                <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, LabelSeries, MarkSeries } from 'react-vis';\r\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: {}\r\n    };\r\n  }\r\n\r\n  render() {    \r\n    return (\r\n      <XYPlot\r\n        width={500}\r\n        height={300}\r\n        margin={{top: 30}}\r\n        xType=\"ordinal\"\r\n      >\r\n\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n        <MarkSeries data={this.props.data}/>\r\n           \r\n        <HeatmapSeries\r\n              className=\"heatmap-series-example\"\r\n              colorRange={[\"#fffaf0\", \"orange\"]}\r\n              data={this.props.data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n      </XYPlot>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap\r\n","import React, { Component } from 'react';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { httpGet, httpPatch, domain } from '../components/Helpers';\r\nimport blankPic from '../images/blank_profile_pic.jpg'\r\nimport {getEarlierDate, getPrevSunday, getNextSaturday, dateToString} from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n      studentsJson: {},\r\n      suggestionsArray: [],\r\n      id: null,\r\n      profileData: {},\r\n      heatMapJson: {},\r\n      startDateString: \"\",\r\n      endDateString: \"\"\r\n    };\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`http://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          studentsJson: studentsJson,\r\n          suggestionsArray: suggestionsArray,\r\n          id: null,\r\n          profileData: {},\r\n          heatMapJson: {}\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var state = {\r\n      mode: 'display',\r\n      id: studentId\r\n    };\r\n    this.getStudentProfile(state);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`http://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      var startDate= getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      var startDateString = dateToString(startDate);\r\n      //var startDateString = \"2018-01-28\";\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      var endDateString = dateToString(endDate);\r\n      //var endDateString = \"2018-03-03\";\r\n      state.endDateString = endDateString;\r\n\t  \r\n    const heatMapJson = await httpGet(`http://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\r\n    console.log(heatMapJson);\r\n    //const heatMapJson = await heatMapData.json();\r\n    //console.log(\"json: \", heatMapJson);\r\n    state.heatMapJson = heatMapJson;\r\n    //console.log(\"json added to state: \", state.heatMapJson);\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  edit() {\r\n    this.setState({mode: 'edit'})\r\n  }\r\n  \r\n  handleChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileData[changedField] = evt.target.value;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n  \r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault()\r\n    httpPatch(`http://${domain}/api/students/`, state.profileData);\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {firstName: state.profileData['first_name'],\r\n                                              id: state.profileData['id'],\r\n                                              lastName1: state.profileData['last_name'],\r\n                                              lastName2: ''};\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var studentId = state.id;\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n   // var startDateString = \"2018-01-03\";\r\n    //var endDateString = \"2018-01-31\";\r\n    var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if(heatMapJson.length == 0){\r\n      var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) == false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) == false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx != heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n    }\r\n\r\n    //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var mdyArray;\r\n    var m, d, y;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '\\/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      mdyArray = heatMapJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n      y = mdyArray[0];\r\n      m = mdyArray[1];\r\n      d = mdyArray[2];\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": weekNum+1, \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n    }\r\n    console.log(\"processed data: \", processedData);\r\n    return processedData;\r\n  }\r\n\r\n  render() {\r\n    let permissions = window.localStorage.getItem('permissions').split(',')\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n\t\t\t<div className='container-fluid no-padding'>\r\n\t\t\t\t<div className='row justify-content-start'>\r\n\t\t\t\t\t<div className='col-md-12 to-front top-bottom-padding'>\r\n\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\t\t\thandler={this.handler}\r\n\t\t\t\t\t\t/>\r\n\t\t  \t\t\t</div>\r\n\t\t  \t\t</div>\r\n\t\t  \t</div>  \r\n        </div>\r\n      );\r\n    } \r\n\t\r\n\telse if (this.state.mode === 'display') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n\t\t  <div className='container-fluid no-padding'>\r\n  \t\t\t<div className='row justify-content-start'>\r\n\t\t\t  <div className='col-md-4 to-front top-bottom-padding'>\r\n\t\t\t\t<Autocomplete\r\n\t\t\t\t  suggestions={this.state.suggestionsArray}\r\n\t\t\t\t  handler={this.handler}\r\n\t\t\t    />\r\n\t\t\t  </div>\r\n          <div className='col-md-8 top-bottom-padding'>\r\n                <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\"/><br/>\r\n\t\t\t\tName: {this.state.profileData.first_name} {this.state.profileData.last_name} <br/>\r\n                Student ID: {this.state.profileData.student_id} <br/>\r\n                Birthday: {this.state.profileData.birthday} <br/>\r\n                Nickname: {this.state.profileData.nickname} <br/>\r\n                Gender: {this.state.profileData.gender} <br/>\r\n                First Attendance: {this.state.profileData.first_attendance} <br/>\r\n                Number of Visits: {this.state.profileData.number_visits} <br/>\r\n                <button onClick={this.edit}>\r\n                  Edit\r\n                </button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n          <Heatmap \r\n            data = {this.formatData(this.state)}/>\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n\t\t  <div className='container-fluid no-padding'>\r\n  \t\t\t<div className='row justify-content-start'>\r\n\t\t\t  <div className='col-md-4 to-front top-bottom-padding'>\r\n\t\t\t\t  <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.handler}\r\n\t\t\t\t  />\r\n\t\t\t  </div>\r\n          <div className='col-md-8 top-bottom-padding'>\r\n              <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\"/>\r\n                <p> Upload Student Profile Photo </p>\r\n                <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name=\"file\"/><br/>\r\n              <form className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n              First Name: <input type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              Last Name: <input type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              Student ID: <input type=\"text\" id=\"student_id\" defaultValue={this.state.profileData.student_id} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              Birthday: <input type=\"date\" id=\"birthday\" defaultValue={this.state.profileData.birthday} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              Nickname: <input type=\"text\" id=\"nickname\" defaultValue={this.state.profileData.nickname} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              Gender: <input type=\"text\" id=\"gender\" defaultValue={this.state.profileData.gender} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              First Attendance: <input type=\"date\" id=\"firstAttendance\" defaultValue={this.state.profileData.first_attendance} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              Number of Visits: <input type=\"text\" id=\"numVisits\" defaultValue={this.state.profileData.number_visits} onChange={evt => this.handleChange(evt, this.state)} /> <br/>\r\n              <input type=\"submit\" value=\"Submit\" />\r\n              </form>\r\n          </div>\r\n        \t</div>\r\n\t\t  </div>\r\n\t\t</div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","import React from 'react';\r\nimport Heatmap from '../components/Heatmap';\r\nimport continuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport {getEarlierDate, getPrevSunday, getNextSaturday, dateToString, domain, httpGet} from '../components/Helpers';\r\n\r\nclass Reports extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          startDateStringWeek: \"\",\r\n          endDateStringWeek: \"\",\r\n          startDateStringYear: \"\",\r\n          endDateStringYear: \"\",\r\n          byHourJson: {},\r\n          byDayJson: {}\r\n        };\r\n      }\r\n    \r\n      async componentDidMount() {\r\n        try {\r\n          //hardcoded date range for testing\r\n          //var startDateStringWeek = \"2018-02-08\";\r\n          //var endDateStringWeek = \"2018-02-15\";\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          var startDateWeek = getEarlierDate(6);\r\n          var startDateStringWeek = dateToString(startDateWeek);\r\n          var endDateStringWeek = dateToString(today);\r\n          var byHourJson = await httpGet(`http://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\r\n          console.log(\"byHour: \", byHourJson);\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n          var startDateYear= getEarlierDate(365);\r\n          startDateYear = getPrevSunday(startDateYear);\r\n          var startDateStringYear = dateToString(startDateYear);\r\n          var endDateYear = getNextSaturday(today);\r\n          var endDateStringYear = dateToString(endDateYear);\r\n          const byDayJson = await httpGet(`http://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\r\n          console.log(\"byDay: \", byDayJson);\r\n          \r\n          this.setState(function (previousState, currentProps) {\r\n            return {\r\n              startDateStringWeek: startDateStringWeek,\r\n              endDateStringWeek: endDateStringWeek,\r\n              startDateStringYear: startDateStringYear,\r\n              endDateStringYear : endDateStringYear,\r\n              byHourJson: byHourJson,\r\n              byDayJson : byDayJson\r\n            };\r\n          });\r\n\r\n          //Delete this block later, this is just here for testing\r\n          var dayData = this.formatDayData(this.state);\r\n          console.log(\"processed day of year data: \", dayData);\r\n          var hourData = this.formatHourData(this.state);\r\n          console.log(\"processed hour of week data: \", hourData);\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n    \r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = state.startDateStringYear;\r\n        var endDateString = state.endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = this.state.byDayJson;\r\n        console.log(byDayJson);\r\n\r\n        if(byDayJson.length == 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) == false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) == false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx != byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, weekNum, dayEntry;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          weekNum = Math.floor(i / 7);\r\n          mdyArray = byDayJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          dayEntry = {\"x\": weekNum, \"y\": dayOfWeek, \"color\": byDayJson[i]['daily_visits']};\r\n          processedData.push(dayEntry);\r\n        }\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = state.startDateStringWeek;\r\n        var endDateString = state.endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = this.state.byHourJson;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) { \r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange == true;  \r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length == 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) == false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) == false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx != byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on same day, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare != currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx != byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare == hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare == \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n    \r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'];\r\n          mdyArray = byHourJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n        return processedData;\r\n      }\r\n\r\n      //add this into render later to display heatmaps\r\n    /*<Heatmap \r\n      data = {this.formatHourData(this.state)}/>\r\n      <Heatmap \r\n      data = {this.formatDayData(this.state)}/>\r\n      */\r\n\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <p>Reports</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`http://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({backendError: true});\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`http://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`http://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({\r\n                        backendError: true\r\n                    });\r\n                } else {\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport { httpGet, domain } from './Helpers';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`http://${domain}/api/users/`);\r\n            const roles = await httpGet(`http://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            const roles = await httpGet(`http://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { users } = this.state;\r\n        if (user !== null) {\r\n            users.push({\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            });\r\n        }\r\n        this.setState({showUserModal: false, users: users});\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users } = this.state;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            users.push({\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            });\r\n        }\r\n        this.setState({ users: users });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.users.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow }\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User Management</h1>\r\n                <br/>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New User</Button>\r\n                </ButtonToolbar>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                checkboxes.push({label: perm_name, checked: false})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`http://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpDelete, httpPatch, domain } from './Helpers';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`http://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`http://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role?')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`http://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`http://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`http://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response) {\r\n                    console.log(response);\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(response);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`http://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n            return;\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`http://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`http://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response[0] || 'error' in response[1]) {\r\n                    console.log(response);\r\n                } else {\r\n                    let activity1 = response[0];\r\n                    let activity2 = response[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Attendance Activities</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport Activities from './Activities';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          <Tab eventKey={1} title=\"User Management\">\r\n            <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={2} title=\"User Roles\">\r\n            <Roles toggleRefreshRoles={this.toggleRefreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={3} title=\"Attendance Activities\">\r\n            <Activities />\r\n          </Tab>\r\n          <Tab eventKey={4} title=\"Student Profile Fields\">\r\n            Tab 4 content\r\n          </Tab>\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\n\r\nclass Alerts extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <p>Alerts</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alerts;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport Alerts from '../views/Alerts';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route path='/alerts' render={() => checkCredentials(Alerts)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";"],"sourceRoot":""}