{"version":3,"sources":["images/blank_profile_pic.jpg","components/Helpers.js","components/Layout.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/AssignStudentKeyButton.js","components/FileUploader.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AddStudentFieldModal.js","components/StudentFieldCheckbox.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","domain","protocol","httpPost","url","body","arguments","length","undefined","token","window","localStorage","getItem","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","logout","push","error","json","httpPatch","httpGet","httpDelete","compareActivities","a","b","ordering","removeItem","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","concat","sent","sort","abrupt","is_showing","name","id","activity_id","type","student_id","date","str_value","num_value","Object","first_name","last_name","t0","console","log","require","unparse","fields","data","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","this","downloadReportsCSV","columnHeaders","title","checkCredentials","Component","permissions","react_default","Redirect","to","partitions","split","parse","atob","decodeToken","exp","Date","now","getPermissions","getEarlierDate","daysAgo","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","Layout","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","state","activeItem","show","children","nav","indexOf","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","withRouter","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","errorCode","errorMsg","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","alert","ids","CustomFunction","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","info_id","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","canCreateStudent","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","getCurrentDate","fetchAndBuild","month","getMonth","day","getFullYear","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","buttonToolbar","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","ButtonToolbar","float","components_AddStudentModal","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArrayStudents","err","heatMapType","dataLength","yArray","x","reverse","toCompare","min","max","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","colorRange","setYArrayRange","margin","es","width","scaleWidth","scaleHeight","top","left","xType","yType","axisType","yDomain","reverseYAxis","orientation","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","mode","canViewStudentInfo","canViewHeatmap","heatMapJson","edit","studentsJson","studentColumnJson","parseCols","profileInfoPrelim","previousState","currentProps","uploadedPic","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","profileDataPrelim","studentInfoJson","addTypes","returnedState","parseStudentInfo","startDateString","endDateString","_context2","t1","test","infoId","returnednewState","entryFound","entryIndex","changedField","profileDataUpdated","newValue","posted","updateStudentInfo","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayOfWeek","weekNum","dayEntry","mdyArray","processedData","strDays","floor","y","toString","color","reader","FileReader","onloadend","src","readAsDataURL","files","blankPic","heatmap","components_Heatmap","formatData","ListGroup","parsedInfo","variant","handleNameChange","confirm","delete","BarChart","obj","labelAnchorX","labelAnchorY","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byHourJsonForDownload","byDayJson","byDayJsonForDownload","byDayHeatMap","downloadHourlyCSV","downloadWeeklyCSV","downloadYearlyCSV","formatDayData","formatHourData","entryAsList","values","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","hourEntry","hourOfDay","components_BarChart","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","role_name","onDelete","passwordBlock","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","newUser","last_login","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","student_key","studentKey","onClose","match_key","paddingTop","match_name","AssignStudentKeyButton","FileUploader","event","file","extension","upload","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","header","output","components_AssignStudentKeyModal","components_FileUploader","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","componentClass","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","quick_add","StudentFieldCheckbox","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","tabs","counter","Tab","eventKey","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Tabs","activeKey","onSelect","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3ef4c85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\n// For local development\r\n//const domain = '127.0.0.1:8000'\r\n//const protocol = 'http'\r\n\r\n// For production server\r\nconst domain = 'app.jordansybesma.com'\r\nconst protocol = 'https'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else if (response) {\r\n\t\t\treturn response.json()\r\n\t\t} else {\r\n\t\t\treturn // we got nothing back\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n  \r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `${protocol}://${domain}/api/attendance/?day=${startDate}` : `${protocol}://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\tconsole.log(\"sheet: \", sheet);\r\n\tconsole.log(\"columns: \", columns);\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\nfunction downloadReportsCSV(json, columnHeaders, title) {\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columnHeaders,\r\n\t\tdata: json\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `${title}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tconst permissions = window.localStorage.getItem('permissions')\r\n\tif (token === null || permissions === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t}\r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\nfunction getPermissions() {\r\n\tlet permissions = window.localStorage.getItem('permissions')\r\n\tif (permissions !== null && permissions.length > 0) {\r\n\t\treturn permissions.split(',');\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { getPermissions, protocol, domain, downloadReportsCSV, downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    const permissions = getPermissions();\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0 \r\n      || permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0\r\n      || permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_reports') >= 0) {\r\n      nav.push(<NavItem key={3} onClick={this.handleItemClick('reports')}>Reports</NavItem>)\r\n    }\r\n    const navItems = <Nav>{nav}</Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain, protocol } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`${protocol}://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nclass ActivityCheckbox extends Component {\n    state = {\n        isChecked: false,\n        value: '',\n        activityType: ''\n    };\n\n    componentDidMount() {\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\n    }\n\n    componentDidUpdate() {\n        if (this.props.checked !== this.state.isChecked) {\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\n        }\n    }\n\n    // Handles checked/unchecked state of checkbox\n    toggleCheckboxChange = () => {\n        const { toggleCheckbox, label } = this.props;\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\n    };\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    render() {\n        const { label } = this.props;\n        const { isChecked, value, activityType } = this.state;\n\n        let checkbox = <span className=\"checkbox\">\n            <label>\n                <input\n                    type=\"checkbox\"\n                    value={label}\n                    checked={isChecked}\n                    onChange={this.toggleCheckboxChange}\n                />\n                {label}\n            </label>\n        </span>;\n\n        if (activityType === 'boolean') {\n            return (<span className=\"checkbox\">\n                {checkbox}\n            </span>)\n        } else{\n            let input;\n            if (activityType === 'string') {\n                input = <input\n                    type=\"text\"\n                    value={value}\n                    name=\"value\"\n                    disabled = {isChecked}\n                    onChange={this.handleChange}\n                />\n            } else {\n                input = <input\n                    type=\"number\"\n                    value={value}\n                    disabled = {isChecked}\n                    name=\"value\"\n                    onChange={this.handleChange}\n                />\n            }\n            return (\n                <span className=\"checkbox\">\n                    {checkbox}\n                    {input}\n                </span>\n            )\n        }\n\n    }\n}\n\nActivityCheckbox.propTypes = {\n    label: PropTypes.string.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired\n};\n\nexport default ActivityCheckbox;\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain, protocol } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            errorMsg: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`${protocol}://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    const errorCode = result.error;\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: errorCode, errorMsg: response.error})\r\n                    });\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1, error: '', errorMsg: ''})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        const errorCode = result.error;\r\n                        result.response.then(function (response) {\r\n                            self.setState({ error: errorCode, errorMsg: response.error })\r\n                        });\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1, error: '', errorMsg: ''})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        let errorMsg = \"Your changes have not been saved. Please refresh and try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: {errorMsg} </Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, getPermissions, domain, protocol } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('delete_attendanceitems') < 0) {\r\n            alert('Error: You are not authorized to delete attendance items');\r\n        } else {\r\n            const { row } = this.state;\r\n            const activities = row['activities']\r\n            const keys = Object.keys(activities);\r\n            let ids = [];\r\n\r\n            // figure out what to delete\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (activities[keys[i]].attendanceItemID !== 0) {\r\n                    ids.push(activities[keys[i]].attendanceItemID)\r\n                }\r\n            }\r\n\r\n            // delete the things\r\n            for (let i = 0; i < ids.length; i++) {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${ids[i]}`);\r\n            }\r\n\r\n            this.props.CustomFunction(row['studentID']);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\tshow: false,\r\n\t\t\tstudentFields: {},\r\n\t\t\tstudentInfo: {},\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n\t\t\tlet studentInfo = {};\r\n\t\t\tconst fieldsList = this.props.studentFields;\r\n\t\t\tlet studentFields = {};\r\n\t\t\tfor (var index in fieldsList) {\r\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\r\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tshow: this.props.show,\r\n\t\t\t\tstudentFields: studentFields,\r\n\t\t\t\tstudentInfo: studentInfo,\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tcreateStudentInfo(name, value, student_id, self) {\r\n\t\tconst {studentFields} = self.state;\r\n\t\tconst field = studentFields[name];\r\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\r\n\t\tif (field.type === 'str') {\r\n\t\t\tbody['str_value'] = value;\r\n\t\t} else if (field.type === 'int') {\r\n\t\t\tbody['int_value'] = value;\r\n\t\t} else if (field.type === 'date') {\r\n\t\t\tbody['date_value'] = value;\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`${protocol}://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tconst student_id = result.id;\r\n\t\t\t\tconst {studentInfo} = self.state;\r\n\t\t\t\tlet infoBody = [];\r\n\t\t\t\tfor (var field in studentInfo) {\r\n\t\t\t\t\tif (studentInfo[field] !== '') {\r\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thttpPost(`${protocol}://${domain}/api/student_info/`, infoBody)\r\n\t\t\t\t\t.then(function (infoResult) {\r\n\t\t\t\t\t\tif ('error' in infoResult) {\r\n\t\t\t\t\t\t\tconsole.log(infoResult);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\t\t\t\tlastName: \"\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcreateStudentInfoFields () {\r\n\t\tlet info = [];\r\n\t\tconst { studentFields } = this.state;\r\n\t\tfor (var fieldName in studentFields) {\r\n\t\t\tconst field = studentFields[fieldName];\r\n\t\t\tlet type;\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\ttype = \"text\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\ttype = \"int\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\ttype = \"date\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\r\n\t\t}\r\n\t\treturn info;\r\n\t}\r\n\r\n\thandleInfoChange = e => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\t\tlet { studentInfo } = this.state;\r\n\t\tstudentInfo[name] = value;\r\n        this.setState({\r\n\t\t\tstudentInfo\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>Search:</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain, protocol } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { getPermissions, downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: '',\r\n            canCreateStudent: false\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`${protocol}://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            const permissions = getPermissions()\r\n            let studentFields = [];\r\n            let canCreateStudent = false;\r\n            if (permissions.indexOf('add_students') >= 0) {\r\n                studentFields = await httpGet(`${protocol}://${domain}/api/student_column/?quick_add=True`);\r\n                canCreateStudent = true;\r\n            }\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                studentFields : studentFields,\r\n                attendanceItems: attendanceItems,\r\n                canCreateStudent: canCreateStudent\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    addStudent(e, studentID) {\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`${protocol}://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n            } else {\r\n                // Add new row to table\r\n                let name = \"\";\r\n                for (var j = 0; j < students.length; j++) {\r\n                    if (students[j].id === parseInt(studentID)) {\r\n                        name = `${students[j].first_name} ${students[j].last_name}`;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let activityList = {};\r\n                for (var j = 0; j < activities.length; j++) {\r\n                    const type = activities[j].type;\r\n                    const value = type === 'boolean' ? false : '';\r\n                    activityList[activities[j].name] = {\r\n                        'activityID': activities[j].activity_id,\r\n                        'attendanceItemID': 0,\r\n                        'value': value,\r\n                        'type': type\r\n                    }\r\n                }\r\n                activityList['Key']['value'] = true;\r\n                activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n                const row = { 'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities': activityList };\r\n                attendance.push(row);\r\n                self.setState({ attendance: attendance });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/notfound'/>);\r\n        }\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        let buttonToolbar;\r\n        if (this.state.canCreateStudent) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                <Button onClick={this.openModal}>New Student</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n            </ButtonToolbar>\r\n        }\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                {buttonToolbar}\r\n                <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\nimport { HeatmapSeries, XAxis, XYPlot, YAxis } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        // yArray is used for the reports Heatmaps and yArrayStudents is used for students heatmap\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  // Sets the correct range for the y-axis depending on what day the data starts on\r\n    // This assumes the range length will always be exactly one week\r\n  setYArrayRange(data) {\r\n      try {\r\n          if (data[0][\"y\"] === \"Thu\") {\r\n              return [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Fri\") {\r\n              return [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sat\") {\r\n              return [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sun\") {\r\n              return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Mon\") {\r\n              return [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Tue\") {\r\n              return [\"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\",]\r\n          }\r\n          else if (data[0][\"y\"] === \"Wed\") {\r\n              return [\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", ]\r\n          }\r\n      }\r\n      catch(err) {\r\n          console.log(err);\r\n      }\r\n\r\n\r\n  };\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 300;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 350;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(data, heatMapType) {\r\n      for (var i=0; i<data.length; i++) {\r\n          if ((heatMapType === \"individualStudent\"  && data[i][\"color\"] !== 0) ||\r\n              ((heatMapType === \"weekly\" || heatMapType === \"annual\" ) && data[i][\"color\"] !== 0)) {\r\n              return [\"#F5FBFD\", \"teal\"]\r\n          }\r\n      }\r\n      return [\"#F5FBFD\", \"#F5FBFD\"];\r\n  }\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType, yArray) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          try {\r\n              return yArray.map(x => x).reverse();\r\n          }\r\n          catch (err) {\r\n              console.log(err);\r\n          }\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor==0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const heatMapColors = this.colorRange(maxLegendLabel)\r\n    const yArray = this.setYArrayRange(data);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div style={{margin:20}}>\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30, left: 45}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType, yArray)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n            className=\"heatmap-series-example\"\r\n            colorRange = {this.colorRange(data, heatMapType)}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n      </XYPlot>\r\n      </div>\r\n\r\n      <ContinuousColorLegend\r\n      width={300}\r\n      startTitle={minLegendLabel}\r\n      midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n      endTitle= {maxLegendLabel}\r\n      startColor=\"#F5FBFD\"\r\n      endColor={maxHeatMapColor}\r\n      height={100}\r\n      />\r\n</div>\r\n      \r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport { Button, Col, Row, ButtonToolbar, Form, FormControl, FormGroup, Label, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { dateToString, getPermissions, domain, getEarlierDate, getNextSaturday, getPrevSunday, httpDelete, httpGet, httpPatch, httpPost, protocol } from '../components/Helpers';\r\nimport blankPic from '../images/blank_profile_pic.jpg';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n      canViewStudentInfo: false,\r\n      canViewHeatmap: false,\r\n      heatMapJson: []\r\n    };\r\n    this.display = this.display.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`${protocol}://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      let permissions = getPermissions()\r\n      let canViewStudentInfo = false;\r\n      if (permissions.indexOf('view_studentinfo') >= 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        var profileInfo = this.parseCols(studentColumnJson);\r\n        var profileInfoPrelim = this.parseCols(studentColumnJson);\r\n        canViewStudentInfo = true;\r\n      }\r\n      let canViewHeatmap = false;\r\n      if (permissions.indexOf('view_reports') >= 0) {\r\n        canViewHeatmap = true;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          profileInfoPrelim: profileInfoPrelim,\r\n          id: null,\r\n          canViewStudentInfo: canViewStudentInfo,\r\n          canViewHeatmap: canViewHeatmap,\r\n          uploadedPic: false\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'id': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`${protocol}://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      // Deep copy\r\n      state.profileDataPrelim = JSON.parse(JSON.stringify(studentProfileJson));\r\n\r\n      if (state.canViewStudentInfo) {\r\n        try {\r\n          const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info?student_id=${state.id}`);\r\n\r\n          if (studentInfoJson.length == 0) {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n          } else {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n\r\n            var returnedState = this.parseStudentInfo(state, studentInfoJson);\r\n            state.profileInfo = returnedState.profileInfo;\r\n            state.profileInfoPrelim = returnedState.profileInfoPrelim;\r\n          }\r\n        }\r\n        catch (e) {\r\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n          state.profileInfo = this.parseCols(studentColumnJson);\r\n        }\r\n      }\r\n\r\n      var startDate = getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      //var startDateString = dateToString(startDate);\r\n      var startDateString = \"2018-01-28\";\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      //var endDateString = dateToString(endDate);\r\n      var endDateString = \"2018-03-03\";\r\n      state.endDateString = endDateString;\r\n\r\n      if (this.state.canViewHeatmap) {\r\n        const heatMapJson = await httpGet(`${protocol}://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\r\n        state.heatMapJson = heatMapJson;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info?student_id=${this.state.id}`);\r\n    var returnedState = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: returnedState.profileInfo,\r\n        profileInfoPrelim: returnedState.profileInfoPrelim\r\n      };\r\n    });\r\n  }\r\n\r\n  addTypes(state) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      // Ensure all varchar(x) types get caught as str_value\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfoPrelim[infoId - 1].patchPost = info[item];\r\n\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n      state.profileInfoPrelim[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n      state.profileInfoPrelim[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  search() {\r\n    var preState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  display() {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' });\r\n  }\r\n  \r\n  async delete(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    // Ensure we have studentInfoIds from the most recent POSTs\r\n    var newState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n\r\n    try {\r\n      const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info?student_id=${state.id}`);\r\n\r\n      if (studentInfoJson.length == 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n      } else {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n\r\n        var returnednewState = this.parseStudentInfo(newState, studentInfoJson);\r\n        newState.profileInfo = returnednewState.profileInfo;\r\n      }\r\n    } \r\n    catch (e) {\r\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n      newState.profileInfo = this.parseCols(studentColumnJson);\r\n    }\r\n\r\n    httpDelete(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    \r\n    for (var field in newState.profileInfo) {\r\n      var field = newState.profileInfo[field];\r\n      if (field.studentInfoId) {\r\n        httpDelete(`${protocol}://${domain}/api/student_info/?id=${field.studentInfoId}`, field.patchPost);\r\n      } else {\r\n        console.log(field);\r\n      }\r\n    }\r\n\r\n    // Ensure that the autocomplete removes the entry\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray.splice(entryIndex, 1);\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n    \r\n    this.state.mode = 'search';\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileDataPrelim[changedField] = evt.target.value;\r\n    state.profileDataUpdated = true;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n    \r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfoPrelim[changedField].type;\r\n\r\n    state.profileInfoPrelim[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfoPrelim[changedField].value = newValue;\r\n    state.profileInfoPrelim[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault();\r\n    httpPatch(`${protocol}://${domain}/api/students/`, state.profileData)\r\n      .then(function (result) {\r\n        if ('error' in result) {\r\n          result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n        }\r\n      });\r\n    \r\n    // Deep copy\r\n    state.profileInfo = JSON.parse(JSON.stringify(state.profileInfoPrelim));\r\n\r\n    if (state.profileDataUpdated) {\r\n      state.profileData = JSON.parse(JSON.stringify(state.profileDataPrelim));\r\n      httpPatch(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    }\r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          httpPatch(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\r\n            .then(function (result) {\r\n              if ('error' in result) {\r\n                result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n              }\r\n            });;\r\n        } else {\r\n          httpPost(`${protocol}://${domain}/api/student_info/`, field.patchPost)\r\n            .then(function (result) {\r\n              if ('error' in result) {\r\n                result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n              } else {\r\n                posted = true;\r\n              }\r\n            });;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var studentId = state.id;\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    // var startDateString = \"2018-01-03\";\r\n    //var endDateString = \"2018-01-31\";\r\n    var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var mdyArray;\r\n    var m, d, y;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '\\/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      mdyArray = heatMapJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n      y = mdyArray[0];\r\n      m = mdyArray[1];\r\n      d = mdyArray[2];\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value != null != '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type = this.state.profileInfo[entry].colInfo.type;\r\n        // var type;\r\n        // switch (this.state.profileInfo[entry].type) {\r\n        //   case 'str_value':\r\n        //   type = \"text\";\r\n        //   break;\r\n        //   case 'int_value':\r\n        //   type = \"int\";\r\n        //   break;\r\n        //   case 'date_value':\r\n        //   type = \"date\";\r\n        //   break;\r\n        //   case 'time_value':\r\n        //   type = \"time\";\r\n        //   break;\r\n        // }\r\n        \r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.state.profileInfo[5].updated = true;\r\n      this.state.profileInfo[5].patchPost['blob_value'] = reader.result;\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          src: reader.result,\r\n          uploadedPic: true\r\n        };\r\n      });\r\n    }\r\n    reader.readAsDataURL(evt.target.files[0]);\r\n  }\r\n\r\n  render() {\r\n    let permissions = getPermissions()\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    let heatmap = [];\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      var pic;\r\n      if (this.state.uploadedPic) {\r\n        pic = this.state.src;\r\n      } else {\r\n        pic = blankPic;\r\n      }\r\n      let heatmap = [];\r\n      if (this.state.canViewHeatmap) {\r\n        heatmap = <div><h3>Student Attendance</h3>\r\n          <p>Number of engagements for this individual student in the past month.</p>\r\n          <Heatmap data={this.formatData(this.state)} heatMapType=\"individualStudent\" /></div>\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'> \r\n              <div className='col-md-2 to-front top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={pic} width=\"196\" height=\"196\" /><br /> */}\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"btn btn-primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n      {heatmap}\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\" /> */}\r\n                {/* <p> Upload Student Profile Photo </p> */}\r\n                {/* <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br /> */}\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    <Label>Last Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"default\" onClick={this.display}>Cancel</Button>\r\n                      <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\r\n                    </ButtonToolbar>\r\n                    <br />\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"danger\" onClick={evt => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete(evt, this.state) }}>Delete</Button>\r\n                    </ButtonToolbar>\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { domain, downloadReportsCSV, getEarlierDate, getPermissions, httpGet, protocol } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js';\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byHourJsonForDownload: [],\r\n            byDayJson: [],\r\n            byDayJsonForDownload: [],\r\n            byDayHeatMap: []\r\n        };\r\n        this.downloadHourlyCSV = this.downloadHourlyCSV.bind(this);\r\n        this.downloadWeeklyCSV = this.downloadWeeklyCSV.bind(this);\r\n        this.downloadYearlyCSV = this.downloadYearlyCSV.bind(this);\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //hardcoded date range for testing\r\n          var startDateStringWeek = \"2018-02-08\";\r\n          var endDateStringWeek = \"2018-02-14\";\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          //var startDateWeek = getEarlierDate(6);\r\n          //var startDateStringWeek = dateToString(startDateWeek);\r\n          //var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`${protocol}://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\r\n          console.log(\"By hour:\",byHourJson);\r\n          // var byHourJson = await byHourAttendanceData.json();\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n         // var startDateYear= getEarlierDate(365);\r\n         // startDateYear = getPrevSunday(startDateYear);\r\n          //var startDateStringYear = dateToString(startDateYear);\r\n         // var endDateYear = getNextSaturday(today);\r\n          //var endDateStringYear = dateToString(endDateYear);\r\n          var startDateStringYear = \"2018-02-04\";\r\n          var endDateStringYear = \"2019-02-09\";\r\n          const byDayJson = await httpGet(`${protocol}://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\r\n          // var byDayJson = await byDayAttendanceData.json();\r\n          var dayData = await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear);\r\n          var hourData = await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n\r\n\r\n          //Delete this block later, this is just here for testing\r\n          // var dayData = this.formatDayData(this.state);\r\n          // console.log(\"processed day of year data after setting state: \", this.state.byDayJson);\r\n          // var hourData = this.formatHourData(this.state);\r\n          // console.log(\"processed hour of week data: \", hourData);\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n      downloadHourlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Hourly_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byHourJsonForDownload, [\"Date\", \"Hour\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadWeeklyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Daily_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload.splice(0,7), [\"Date\",\"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadYearlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Annual_Attendance_\".concat(this.state.startDateStringYear);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringYear);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload, [\"Date\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n\r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byDayJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byDayJson.length; i++){\r\n          entryAsList = Object.values(byDayJson[i]);\r\n          byDayJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          mdyArray = byDayJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          annualHeatMapEntry = {\"x\": weekNum+1, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayJsonForDownload: byDayJsonForDownload,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on same day, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n        \r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byHourJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byHourJson.length; i++){\r\n          entryAsList = Object.values(byHourJson[i]);\r\n          byHourJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,2);\r\n          mdyArray = byHourJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          hourEntry = {\"x\": hourOfDay.concat(\" hrs\"), \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n                  byHourJsonForDownload: byHourJsonForDownload\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n    render() {\r\n        const buildingCSV = this.state.buildingCSV;\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_reports') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n        return (\r\n            <div className=\"container py-4\">\r\n                <h1> Reports </h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 align-self-center\">\r\n                        <h3> Hourly Attendance </h3>\r\n                        <p> Number of engagements per hour in the past week.</p>\r\n                        <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.downloadHourlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Hourly'}</Button>\r\n                </ButtonToolbar>\r\n                        <Heatmap\r\n                        data = {this.state.byHourJson}\r\n                        heatMapType = \"weekly\" />\r\n\r\n                    </div>\r\n                    <div className='col-md-4 align-self-center'>\r\n                        <h3> Daily Attendance </h3>\r\n                        <p> Number of engagements per day in the past week.</p>\r\n                        <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.downloadWeeklyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Daily'}</Button>\r\n                </ButtonToolbar>\r\n                        <BarChart data = {this.state.byDayJson.slice(0, 7)}/> </div>\r\n                    </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h3> Annual Daily Attendance </h3>\r\n                    <p> Number of engagements per day in the past year.</p>\r\n                    <ButtonToolbar style={{ float: 'right'}}>\r\n                          <Button onClick={this.downloadYearlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Annual'}</Button>\r\n                        </ButtonToolbar>\r\n                  <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n                </div>\r\n                 </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: '',\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        errorMsg: '',\r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain, protocol } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            errorMsg: false\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({backendError: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({\r\n                    backendError: false,\r\n                    errorMsg: ''\r\n                })\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                        backendError: false,\r\n                        errorMsg: ''\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n           \r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>{this.state.row['name'] === undefined || this.state.row['name'] === ' ' ? \"[User History]\" : this.state.row['name'] }</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { getPermissions, httpGet, domain, protocol } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n        }\r\n        this.setState({showUserModal: false, users: users, showingUsers: showingUsers, showingAllUsers: false});\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users });\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`${protocol}://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, name: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        const permissions = getPermissions();\r\n        let buttonToolbar;\r\n        if (permissions.indexOf('add_user') >= 0) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                <Button onClick={this.openModal}>New User</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n            </ButtonToolbar>\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                {buttonToolbar}\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\nimport { Alert, Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                checkboxes.push({label: perm_name, checked: false})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: '', error: false, backendError: false, errorMsg: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() === 'error') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        if (permissions.length < 1) {\r\n            self.setState({error: true});\r\n            return;\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name)) {\r\n            return 'success';\r\n        } else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n                        >\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { httpDelete, httpPatch, domain, protocol } from './Helpers';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            errorMsg: '',\r\n            error: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({error: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({error: false, errorMsg: ''});\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({error: false, errorMsg: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role?')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain, protocol } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`${protocol}://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass AssignStudentKeyModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oldID: 0,\r\n            student: {},\r\n            suggestions: [],\r\n            searchArray: [],\r\n            match: \"\",\r\n        }\r\n\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.setMatch = this.setMatch.bind(this);\r\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\r\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            oldID: this.props.studentID\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\r\n            const student = await httpGet(`${protocol}://${domain}/api/students/?id=${this.props.studentID}`);\r\n            const suggestions = await httpGet(`${protocol}://${domain}/api/suggestions/student/?id=${this.props.studentID}`);\r\n            const searchArray = this.buildSuggestionsArray();\r\n\r\n            this.setState({\r\n                student: student,\r\n                suggestions: suggestions,\r\n                searchArray: searchArray,\r\n                oldID: this.props.studentID\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSuggestionsArray() {\r\n        let array = []\r\n        const citySpanStudents = this.props.citySpanStudents;\r\n        for (var object in this.props.citySpanStudents) {\r\n            array.push({\r\n                firstName: citySpanStudents[object].first_name,\r\n                lastName1: citySpanStudents[object].last_name,\r\n                lastName2: \"\",\r\n                id: citySpanStudents[object].student_key\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    setMatch(studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    setMatchFromSearch(e, studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose()\r\n    }\r\n\r\n    onSubmit() {\r\n        // PATCH student\r\n        httpPatch(`${protocol}://${domain}/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose(this.props.studentID);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <h4>Suggestions:</h4>\r\n                    {this.state.suggestions.length === 3 \r\n                    && <ListGroup>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\r\n                      </ListGroup>}\r\n                    <br/>\r\n                    <h4>Search for match:</h4>\r\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\r\n                    <br/>\r\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass AssignStudentKeyButton extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyButton;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, Form, FormGroup, Label, Well } from 'react-bootstrap';\r\n\r\nclass FileUploader extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t  super();\r\n\t  this.state = {\r\n\t\tfile: undefined,\r\n\t\terror: \"\",\r\n\t  };\r\n\r\n\t  this.submit = this.submit.bind(this);\r\n\t}\r\n  \r\n\thandleChange = event => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\r\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\terror: \"\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Invalid file type\"\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tsubmit() {\r\n\t\tif (this.state.file !== undefined) {\r\n\t\t\tthis.props.upload(this.state.file);\r\n\t\t\tthis.setState({file: undefined});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\r\n\t\t\t\t<Well style={{display: 'inline-block'}}>\r\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\r\n\t\t\t\t</Well>\r\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\r\n\t\t\t</FormGroup>\r\n\t\t\t{this.state.error !== \"\" && <Label bsStyle=\"danger\">Error: {this.state.error}</Label>}\r\n\t\t</Form>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default FileUploader;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\r\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport FileUploader from './FileUploader';\r\n\r\nclass StudentKeys extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unmatchedStudents: [],\r\n            citySpanStudents: [],\r\n            suggestions: [],\r\n            showModal: false,\r\n            focusedStudent: -1,\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleRowClick = this.handleRowClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\r\n        this.processCSV = this.processCSV.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const unmatchedStudents = await httpGet(`${protocol}://${domain}/api/suggestions/unmatchedstudents/`);\r\n            const citySpanStudents = await httpGet(`${protocol}://${domain}/api/suggestions/cityspanstudents/`);\r\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\r\n\r\n            this.setState({\r\n                unmatchedStudents: unmatchedStudents,\r\n                suggestions: suggestions,\r\n                showModal: false,\r\n                focusedStudent: -1,\r\n                citySpanStudents: citySpanStudents\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleCSVUpload(csv) {\r\n        var papa = require('papaparse');\r\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\r\n    }\r\n\r\n    processCSV(result) {\r\n        var output = []\r\n        for (let index in result.data) {\r\n            let obj = result.data[index];\r\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\r\n                continue;\r\n            } \r\n            output.push({first_name: obj[\"First Name\"], last_name: obj[\"Last Name\"], student_key: obj[\"Student Key\"]})\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/suggestions/cityspanstudents/`, {\"students\": output});\r\n    }\r\n\r\n    tmpfail(error, file) {\r\n        console.log(error);\r\n    }\r\n\r\n    handleRowClick(studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    closeModal(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({\r\n            showModal: false,\r\n            unmatchedStudents: unmatchedStudents\r\n        });\r\n    }\r\n\r\n    handleSearch(e, studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    updateStudents(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({unmatchedStudents: unmatchedStudents});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.unmatchedStudents.map(student =>\r\n            (\r\n               {\r\n                   name: `${student.first_name} ${student.last_name}`,\r\n                   id: student.id\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: AssignStudentKeyButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Students Without Student Keys</h1>\r\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\r\n                <br/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <Autocomplete\r\n                        suggestions={this.state.suggestions}\r\n                        handler={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div style={{float: 'right'}}>\r\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\r\n                </div>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'edit':this.handleRowClick}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentKeys ;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.activity_id !== this.state.row.activity_id) {\r\n            this.setState({ row: this.props.row })\r\n        } else if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    let activity1 = result[0];\r\n                    let activity2 = result[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Attendance Activities</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentFieldModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\r\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            is_showing: self.state.inUse,\r\n            quick_add: self.state.quickAdd,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'str',\r\n                        inUse: true,\r\n                        quickAdd: false,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleInUseCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n\r\n    handleQuickAddCheckbox = e => {\r\n        this.setState({quickAdd: !this.state.quickAdd});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Field Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Field Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"date\">Date</option>\r\n                                <option value=\"str\">Text</option>\r\n                                <option value=\"int\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleInUseCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <ControlLabel>Show in Quick Add</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.quickAdd}\r\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\r\n                                onChange={this.handleQuickAddCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentFieldModal;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass StudentFieldCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accessor === 'is_showing') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.info_id !== this.state.row.info_id) {\r\n            this.setState({ row: this.props.row });\r\n        }\r\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {info_id: row.info_id};\r\n        body[self.props.accessor] = !self.state.checked;\r\n        httpPatch(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentFieldCheckbox;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddStudentFieldModal from './AddStudentFieldModal';\r\nimport { domain, httpGet, protocol } from './Helpers';\r\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\r\n\r\nclass EditStudentFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.createNewField = this.createNewField.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const fields = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            this.setState({\r\n                fields\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewField(field) {\r\n        return {\r\n            info_id: field.info_id,\r\n            is_showing: field.is_showing,\r\n            quick_add: field.quick_add,\r\n            name: field.name,\r\n            type: field.type,\r\n        };\r\n    }\r\n\r\n    updateCheckbox(field=null) {\r\n        let self = this;\r\n        let { fields } = self.state;\r\n        if (field !== null) {\r\n            fields = fields.filter(item => item.info_id !== field.info_id);\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        self.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'date') {\r\n            return 'Date';\r\n        } else if (type === 'str') {\r\n            return 'Text';\r\n        } else if (type === 'int') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(field=null) {\r\n        const { fields } = this.state;\r\n        if (field !== null) {\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        this.setState({showModal: false, fields: fields});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.fields.map(field =>\r\n            (\r\n               {\r\n                   name: field.name,\r\n                   is_showing: field.is_showing,\r\n                   info_id: field.info_id,\r\n                   type: field.type,\r\n                   type_name: this.getDataTypeName(field.type),\r\n                   quick_add: field.quick_add\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Field',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'quick_add',\r\n                label: 'Show in Quick Add',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n        ];\r\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Student Profile Fields</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\r\n                </ButtonToolbar>\r\n                <AddStudentFieldModal show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditStudentFields;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport StudentKeys from './StudentKeys';\r\nimport Activities from './Activities';\r\nimport EditStudentFields from './EditStudentFields';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      let tabs = [];\r\n      let counter = 1;\r\n      const permissions = getPermissions()\r\n      if (permissions.indexOf('view_user') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Management\">\r\n          <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('view_group') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Roles\">\r\n          <Roles toggleRefreshRoles={this.toggleRefreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Attendance Activities\">\r\n          <Activities />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Profile Fields\">\r\n          <EditStudentFields />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n\r\n      tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Key Management\">\r\n          <StudentKeys />\r\n        </Tab>)\r\n        counter++;\r\n\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          {tabs}\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\nimport { getPermissions } from '../components/Helpers';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0 ||\r\n            permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0 || \r\n            permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\nimport  { Link } from 'react-router-dom';\nimport { Jumbotron } from 'react-bootstrap';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div className='content'>\n                <Jumbotron> \n                    <div className='content-jumbotron'>\n                        <h1>\n                            404 <small>page not found</small>\n                        </h1>\n                        <p>\n                            The page you're looking for has mysteriously disappeared! \n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\n                        </p>\n                    </div>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}