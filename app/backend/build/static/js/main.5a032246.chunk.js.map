{"version":3,"sources":["images/blank_profile_pic.jpg","components/Helpers.js","components/Layout.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/AssignStudentKeyButton.js","components/FileUploader.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AddStudentFieldModal.js","components/StudentFieldCheckbox.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","domain","protocol","httpPost","url","body","arguments","length","undefined","token","window","localStorage","getItem","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","logout","push","error","json","httpPatch","httpGet","httpDelete","compareActivities","a","b","ordering","removeItem","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","concat","sent","sort","abrupt","is_showing","name","id","activity_id","type","student_id","date","str_value","num_value","Object","first_name","last_name","t0","console","log","require","unparse","fields","data","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","this","downloadReportsCSV","columnHeaders","title","checkCredentials","Component","permissions","react_default","Redirect","to","partitions","split","parse","atob","decodeToken","exp","Date","now","getPermissions","getEarlierDate","daysAgo","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Layout","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","state","activeItem","show","children","nav","indexOf","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","withRouter","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","errorCode","errorMsg","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","alert","ids","CustomFunction","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","info_id","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","canCreateStudent","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","refresh","getCurrentDate","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","buttonToolbar","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","ButtonToolbar","float","components_AddStudentModal","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArrayStudents","err","heatMapType","dataLength","yArray","x","reverse","toCompare","min","max","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","colorRange","setYArrayRange","margin","es","width","scaleWidth","scaleHeight","top","left","xType","yType","axisType","yDomain","reverseYAxis","orientation","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","mode","canViewStudentInfo","canViewHeatmap","heatMapJson","edit","studentsJson","studentColumnJson","parseCols","profileInfoPrelim","previousState","currentProps","uploadedPic","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","profileDataPrelim","studentInfoJson","addTypes","returnedState","parseStudentInfo","startDateString","endDateString","_context2","t1","test","infoId","returnednewState","entryFound","entryIndex","changedField","profileDataUpdated","newValue","posted","updateStudentInfo","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayOfWeek","weekNum","dayEntry","mdyArray","processedData","strDays","floor","y","color","reader","FileReader","onloadend","src","readAsDataURL","files","blankPic","heatmap","components_Heatmap","formatData","ListGroup","parsedInfo","variant","handleNameChange","confirm","delete","BarChart","obj","labelAnchorX","labelAnchorY","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byHourJsonForDownload","byDayJson","byDayJsonForDownload","byDayHeatMap","dateOne","dateTwo","downloadHourlyCSV","downloadWeeklyCSV","downloadYearlyCSV","updateDateOne","updateDateTwo","startDateWeek","startDateYear","endDateYear","formatDayData","formatHourData","entryAsList","values","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","hourEntry","hourOfDay","components_BarChart","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","role_name","onDelete","passwordBlock","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","newUser","last_login","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","displayName","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","student_key","studentKey","onClose","match_key","paddingTop","match_name","AssignStudentKeyButton","FileUploader","event","file","extension","upload","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","header","output","components_AssignStudentKeyModal","components_FileUploader","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","componentClass","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","quick_add","StudentFieldCheckbox","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","tabs","counter","Tab","eventKey","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Tabs","activeKey","onSelect","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a032246.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\n// For local development\r\nconst domain = '127.0.0.1:8000'\r\nconst protocol = 'http'\r\n\r\n// For production server\r\n// const domain = 'app.jordansybesma.com'\r\n// const protocol = 'https'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else if (response) {\r\n\t\t\treturn response.json()\r\n\t\t} else {\r\n\t\t\treturn // we got nothing back\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n  \r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `${protocol}://${domain}/api/attendance/?day=${startDate}` : `${protocol}://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\tconsole.log(\"sheet: \", sheet);\r\n\tconsole.log(\"columns: \", columns);\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\nfunction downloadReportsCSV(json, columnHeaders, title) {\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columnHeaders,\r\n\t\tdata: json\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `${title}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tconst permissions = window.localStorage.getItem('permissions')\r\n\tif (token === null || permissions === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t}\r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\nfunction getPermissions() {\r\n\tlet permissions = window.localStorage.getItem('permissions')\r\n\tif (permissions !== null && permissions.length > 0) {\r\n\t\treturn permissions.split(',');\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { getPermissions, protocol, domain, downloadReportsCSV, downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    const permissions = getPermissions();\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0 \r\n      || permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0\r\n      || permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_reports') >= 0) {\r\n      nav.push(<NavItem key={3} onClick={this.handleItemClick('reports')}>Reports</NavItem>)\r\n    }\r\n    const navItems = <Nav>{nav}</Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain, protocol } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`${protocol}://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ActivityCheckbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n        value: '',\r\n        activityType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\r\n    };\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked, value, activityType } = this.state;\r\n\r\n        let checkbox = <span className=\"checkbox\">\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={label}\r\n                    checked={isChecked}\r\n                    onChange={this.toggleCheckboxChange}\r\n                />\r\n                {label}\r\n            </label>\r\n        </span>;\r\n\r\n        if (activityType === 'boolean') {\r\n            return (<span className=\"checkbox\">\r\n                {checkbox}\r\n            </span>)\r\n        } else{\r\n            let input;\r\n            if (activityType === 'string') {\r\n                input = <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    name=\"value\"\r\n                    disabled = {isChecked}\r\n                    onChange={this.handleChange}\r\n                />\r\n            } else {\r\n                input = <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    disabled = {isChecked}\r\n                    name=\"value\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            }\r\n            return (\r\n                <span className=\"checkbox\">\r\n                    {checkbox}\r\n                    {input}\r\n                </span>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nActivityCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ActivityCheckbox;\r\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain, protocol } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            errorMsg: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`${protocol}://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    const errorCode = result.error;\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: errorCode, errorMsg: response.error})\r\n                    });\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1, error: '', errorMsg: ''})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        const errorCode = result.error;\r\n                        result.response.then(function (response) {\r\n                            self.setState({ error: errorCode, errorMsg: response.error })\r\n                        });\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1, error: '', errorMsg: ''})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        let errorMsg = \"Your changes have not been saved. Please refresh and try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: {errorMsg} </Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, getPermissions, domain, protocol } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('delete_attendanceitems') < 0) {\r\n            alert('Error: You are not authorized to delete attendance items');\r\n        } else {\r\n            const { row } = this.state;\r\n            const activities = row['activities']\r\n            const keys = Object.keys(activities);\r\n            let ids = [];\r\n\r\n            // figure out what to delete\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (activities[keys[i]].attendanceItemID !== 0) {\r\n                    ids.push(activities[keys[i]].attendanceItemID)\r\n                }\r\n            }\r\n\r\n            // delete the things\r\n            for (let i = 0; i < ids.length; i++) {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${ids[i]}`);\r\n            }\r\n\r\n            this.props.CustomFunction(row['studentID']);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\tshow: false,\r\n\t\t\tstudentFields: {},\r\n\t\t\tstudentInfo: {},\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n\t\t\tlet studentInfo = {};\r\n\t\t\tconst fieldsList = this.props.studentFields;\r\n\t\t\tlet studentFields = {};\r\n\t\t\tfor (var index in fieldsList) {\r\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\r\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tshow: this.props.show,\r\n\t\t\t\tstudentFields: studentFields,\r\n\t\t\t\tstudentInfo: studentInfo,\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tcreateStudentInfo(name, value, student_id, self) {\r\n\t\tconst {studentFields} = self.state;\r\n\t\tconst field = studentFields[name];\r\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\r\n\t\tif (field.type === 'str') {\r\n\t\t\tbody['str_value'] = value;\r\n\t\t} else if (field.type === 'int') {\r\n\t\t\tbody['int_value'] = value;\r\n\t\t} else if (field.type === 'date') {\r\n\t\t\tbody['date_value'] = value;\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`${protocol}://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tconst student_id = result.id;\r\n\t\t\t\tconst {studentInfo} = self.state;\r\n\t\t\t\tlet infoBody = [];\r\n\t\t\t\tfor (var field in studentInfo) {\r\n\t\t\t\t\tif (studentInfo[field] !== '') {\r\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thttpPost(`${protocol}://${domain}/api/student_info/`, infoBody)\r\n\t\t\t\t\t.then(function (infoResult) {\r\n\t\t\t\t\t\tif ('error' in infoResult) {\r\n\t\t\t\t\t\t\tconsole.log(infoResult);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\t\t\t\tlastName: \"\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcreateStudentInfoFields () {\r\n\t\tlet info = [];\r\n\t\tconst { studentFields } = this.state;\r\n\t\tfor (var fieldName in studentFields) {\r\n\t\t\tconst field = studentFields[fieldName];\r\n\t\t\tlet type;\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\ttype = \"text\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\ttype = \"int\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\ttype = \"date\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\r\n\t\t}\r\n\t\treturn info;\r\n\t}\r\n\r\n\thandleInfoChange = e => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\t\tlet { studentInfo } = this.state;\r\n\t\tstudentInfo[name] = value;\r\n        this.setState({\r\n\t\t\tstudentInfo\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>{this.props.label === undefined ? 'Search:' : this.props.label}</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain, protocol } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { getPermissions, downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: '',\r\n            canCreateStudent: false\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`${protocol}://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            const permissions = getPermissions()\r\n            let studentFields = [];\r\n            let canCreateStudent = false;\r\n            if (permissions.indexOf('add_students') >= 0) {\r\n                studentFields = await httpGet(`${protocol}://${domain}/api/student_column/?quick_add=True`);\r\n                canCreateStudent = true;\r\n            }\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                studentFields : studentFields,\r\n                attendanceItems: attendanceItems,\r\n                canCreateStudent: canCreateStudent\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    async addStudent(e, studentID) {\r\n        // Refresh attendance page.\r\n        await this.fetchAndBuild();\r\n\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`${protocol}://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n            } else {\r\n                // Add new row to table\r\n                let name = \"\";\r\n                for (var j = 0; j < students.length; j++) {\r\n                    if (students[j].id === parseInt(studentID)) {\r\n                        name = `${students[j].first_name} ${students[j].last_name}`;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let activityList = {};\r\n                for (var j = 0; j < activities.length; j++) {\r\n                    const type = activities[j].type;\r\n                    const value = type === 'boolean' ? false : '';\r\n                    activityList[activities[j].name] = {\r\n                        'activityID': activities[j].activity_id,\r\n                        'attendanceItemID': 0,\r\n                        'value': value,\r\n                        'type': type\r\n                    }\r\n                }\r\n                activityList['Key']['value'] = true;\r\n                activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n                const row = { 'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities': activityList };\r\n                attendance.push(row);\r\n                self.setState({ attendance: attendance });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    refresh() {\r\n        this.fetchAndBuild();\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/notfound'/>);\r\n        }\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        let buttonToolbar;\r\n        if (this.state.canCreateStudent) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.refresh}>Refresh</Button>\r\n                <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                <Button onClick={this.openModal}>Create New Student</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.refresh}>Refresh</Button>\r\n                <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n            </ButtonToolbar>\r\n        }\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                {buttonToolbar}\r\n                <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Autocomplete\r\n                    label={'Check-in Student:'}\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\nimport { HeatmapSeries, XAxis, XYPlot, YAxis } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        // yArray is used for the reports Heatmaps and yArrayStudents is used for students heatmap\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  // Sets the correct range for the y-axis depending on what day the data starts on\r\n    // This assumes the range length will always be exactly one week\r\n  setYArrayRange(data) {\r\n      try {\r\n          if (data[0][\"y\"] === \"Thu\") {\r\n              return [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Fri\") {\r\n              return [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sat\") {\r\n              return [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sun\") {\r\n              return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Mon\") {\r\n              return [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Tue\") {\r\n              return [\"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\",]\r\n          }\r\n          else if (data[0][\"y\"] === \"Wed\") {\r\n              return [\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", ]\r\n          }\r\n      }\r\n      catch(err) {\r\n          console.log(err);\r\n      }\r\n\r\n\r\n  };\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 300;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 350;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(data, heatMapType) {\r\n      for (var i=0; i<data.length; i++) {\r\n          if ((heatMapType === \"individualStudent\"  && data[i][\"color\"] !== 0) ||\r\n              ((heatMapType === \"weekly\" || heatMapType === \"annual\" ) && data[i][\"color\"] !== 0)) {\r\n              return [\"#F5FBFD\", \"teal\"]\r\n          }\r\n      }\r\n      return [\"#F5FBFD\", \"#F5FBFD\"];\r\n  }\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType, yArray) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          try {\r\n              return yArray.map(x => x).reverse();\r\n          }\r\n          catch (err) {\r\n              console.log(err);\r\n          }\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor==0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const heatMapColors = this.colorRange(maxLegendLabel)\r\n    const yArray = this.setYArrayRange(data);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div style={{margin:20}}>\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30, left: 45}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType, yArray)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n            className=\"heatmap-series-example\"\r\n            colorRange = {this.colorRange(data, heatMapType)}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n      </XYPlot>\r\n      </div>\r\n\r\n      <ContinuousColorLegend\r\n      width={300}\r\n      startTitle={minLegendLabel}\r\n      midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n      endTitle= {maxLegendLabel}\r\n      startColor=\"#F5FBFD\"\r\n      endColor={maxHeatMapColor}\r\n      height={100}\r\n      />\r\n</div>\r\n      \r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport { Button, Col, Row, ButtonToolbar, Form, FormControl, FormGroup, Label, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { dateToString, getPermissions, domain, getEarlierDate, getNextSaturday, getPrevSunday, httpDelete, httpGet, httpPatch, httpPost, protocol } from '../components/Helpers';\r\nimport blankPic from '../images/blank_profile_pic.jpg';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n      canViewStudentInfo: false,\r\n      canViewHeatmap: false,\r\n      heatMapJson: []\r\n    };\r\n    this.display = this.display.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`${protocol}://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      let permissions = getPermissions()\r\n      let canViewStudentInfo = false;\r\n      if (permissions.indexOf('view_studentinfo') >= 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        var profileInfo = this.parseCols(studentColumnJson);\r\n        var profileInfoPrelim = this.parseCols(studentColumnJson);\r\n        canViewStudentInfo = true;\r\n      }\r\n      let canViewHeatmap = false;\r\n      if (permissions.indexOf('view_reports') >= 0) {\r\n        canViewHeatmap = true;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          profileInfoPrelim: profileInfoPrelim,\r\n          id: null,\r\n          canViewStudentInfo: canViewStudentInfo,\r\n          canViewHeatmap: canViewHeatmap,\r\n          uploadedPic: false\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'id': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`${protocol}://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      // Deep copy\r\n      state.profileDataPrelim = JSON.parse(JSON.stringify(studentProfileJson));\r\n      if (this.state.canViewStudentInfo) {\r\n        try {\r\n          const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n          console.log(studentInfoJson);\r\n          if (studentInfoJson.length == 0) {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n          } else {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n\r\n            var returnedState = this.parseStudentInfo(state, studentInfoJson);\r\n            state.profileInfo = returnedState.profileInfo;\r\n            state.profileInfoPrelim = returnedState.profileInfoPrelim;\r\n          }\r\n        }\r\n        catch (e) {\r\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n          state.profileInfo = this.parseCols(studentColumnJson);\r\n        }\r\n      }\r\n\r\n      var startDate = getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      var startDateString = dateToString(startDate);\r\n      //var startDateString = \"2018-01-28\";\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      var endDateString = dateToString(endDate);\r\n      //var endDateString = \"2018-03-03\";\r\n      state.endDateString = endDateString;\r\n\r\n      if (this.state.canViewHeatmap) {\r\n        const heatMapJson = await httpGet(`${protocol}://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\r\n        state.heatMapJson = heatMapJson;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${this.state.id}`);\r\n    var returnedState = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: returnedState.profileInfo,\r\n        profileInfoPrelim: returnedState.profileInfoPrelim\r\n      };\r\n    });\r\n  }\r\n\r\n  addTypes(state) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      // Ensure all varchar(x) types get caught as str_value\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfoPrelim[infoId - 1].patchPost = info[item];\r\n\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n      state.profileInfoPrelim[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n      state.profileInfoPrelim[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  search() {\r\n    var preState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  display() {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' });\r\n  }\r\n  \r\n  async delete(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    // Ensure we have studentInfoIds from the most recent POSTs\r\n    var newState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n\r\n    try {\r\n      const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n\r\n      if (studentInfoJson.length == 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n      } else {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n\r\n        var returnednewState = this.parseStudentInfo(newState, studentInfoJson);\r\n        newState.profileInfo = returnednewState.profileInfo;\r\n      }\r\n    } \r\n    catch (e) {\r\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n      newState.profileInfo = this.parseCols(studentColumnJson);\r\n    }\r\n\r\n    httpDelete(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    \r\n    for (var field in newState.profileInfo) {\r\n      var field = newState.profileInfo[field];\r\n      if (field.studentInfoId) {\r\n        httpDelete(`${protocol}://${domain}/api/student_info/?id=${field.studentInfoId}`, field.patchPost);\r\n      } else {\r\n        console.log(field);\r\n      }\r\n    }\r\n\r\n    // Ensure that the autocomplete removes the entry\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray.splice(entryIndex, 1);\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n    \r\n    this.state.mode = 'search';\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileDataPrelim[changedField] = evt.target.value;\r\n    state.profileDataUpdated = true;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n    \r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfoPrelim[changedField].type;\r\n\r\n    state.profileInfoPrelim[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfoPrelim[changedField].value = newValue;\r\n    state.profileInfoPrelim[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault();\r\n    httpPatch(`${protocol}://${domain}/api/students/`, state.profileData)\r\n      .then(function (result) {\r\n        if ('error' in result) {\r\n          result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n        }\r\n      });\r\n    \r\n    // Deep copy\r\n    state.profileInfo = JSON.parse(JSON.stringify(state.profileInfoPrelim));\r\n\r\n    if (state.profileDataUpdated) {\r\n      state.profileData = JSON.parse(JSON.stringify(state.profileDataPrelim));\r\n      httpPatch(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    }\r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          httpPatch(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\r\n            .then(function (result) {\r\n              if ('error' in result) {\r\n                result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n              }\r\n            });;\r\n        } else {\r\n          httpPost(`${protocol}://${domain}/api/student_info/`, field.patchPost)\r\n            .then(function (result) {\r\n              if ('error' in result) {\r\n                result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n              } else {\r\n                posted = true;\r\n              }\r\n            });;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var studentId = state.id;\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var mdyArray;\r\n    var m, d, y;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '\\/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      mdyArray = heatMapJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n      y = mdyArray[0];\r\n      m = mdyArray[1];\r\n      d = mdyArray[2];\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value != null != '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type = this.state.profileInfo[entry].colInfo.type;\r\n        // var type;\r\n        // switch (this.state.profileInfo[entry].type) {\r\n        //   case 'str_value':\r\n        //   type = \"text\";\r\n        //   break;\r\n        //   case 'int_value':\r\n        //   type = \"int\";\r\n        //   break;\r\n        //   case 'date_value':\r\n        //   type = \"date\";\r\n        //   break;\r\n        //   case 'time_value':\r\n        //   type = \"time\";\r\n        //   break;\r\n        // }\r\n        \r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.state.profileInfo[5].updated = true;\r\n      this.state.profileInfo[5].patchPost['blob_value'] = reader.result;\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          src: reader.result,\r\n          uploadedPic: true\r\n        };\r\n      });\r\n    }\r\n    reader.readAsDataURL(evt.target.files[0]);\r\n  }\r\n\r\n  render() {\r\n    let permissions = getPermissions()\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    let heatmap = [];\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      var pic;\r\n      if (this.state.uploadedPic) {\r\n        pic = this.state.src;\r\n      } else {\r\n        pic = blankPic;\r\n      }\r\n      let heatmap = [];\r\n      if (this.state.canViewHeatmap) {\r\n        heatmap = <div><h3>Student Attendance</h3>\r\n          <p>Number of engagements for this individual student in the past month.</p>\r\n          <p>The y-axis represents the week number in the month, with the most recent (the current) week displaying at the bottom.</p>\r\n          <p><b>Note:</b> Data is displayed chronologically, with row 1 representing the oldest week and row 5 representing the current week.</p> \r\n          <Heatmap data={this.formatData(this.state)} heatMapType=\"individualStudent\" /></div>\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'> \r\n              <div className='col-md-2 to-front top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={pic} width=\"196\" height=\"196\" /><br /> */}\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"btn btn-primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n      {heatmap}\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\" /> */}\r\n                {/* <p> Upload Student Profile Photo </p> */}\r\n                {/* <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br /> */}\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    <Label>Last Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"default\" onClick={this.display}>Cancel</Button>\r\n                      <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\r\n                    </ButtonToolbar>\r\n                    <br />\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"danger\" onClick={evt => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete(evt, this.state) }}>Delete</Button>\r\n                    </ButtonToolbar>\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar, Form, ControlLabel, FormControl, FormGroup } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { domain, downloadReportsCSV, getEarlierDate, dateToString, getNextSaturday, getPrevSunday, getPermissions, httpGet, protocol, downloadAttendanceCSV } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js';\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byHourJsonForDownload: [],\r\n            byDayJson: [],\r\n            byDayJsonForDownload: [],\r\n            byDayHeatMap: [],\r\n            dateOne: \"\",\r\n            dateTwo: \"\",\r\n            buildingCSV: false,\r\n        };\r\n        this.downloadHourlyCSV = this.downloadHourlyCSV.bind(this);\r\n        this.downloadWeeklyCSV = this.downloadWeeklyCSV.bind(this);\r\n        this.downloadYearlyCSV = this.downloadYearlyCSV.bind(this);\r\n        this.updateDateOne = this.updateDateOne.bind(this);\r\n        this.updateDateTwo = this.updateDateTwo.bind(this);\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //hardcoded date range for testing\r\n          //var startDateStringWeek = \"2018-02-08\";\r\n          //var endDateStringWeek = \"2018-02-14\";\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          var startDateWeek = getEarlierDate(6);\r\n          var startDateStringWeek = dateToString(startDateWeek);\r\n          var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`${protocol}://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\r\n          console.log(\"By hour:\",byHourJson);\r\n          // var byHourJson = await byHourAttendanceData.json();\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n          var startDateYear= getEarlierDate(365);\r\n          startDateYear = getPrevSunday(startDateYear);\r\n          var startDateStringYear = dateToString(startDateYear);\r\n          var endDateYear = getNextSaturday(today);\r\n          var endDateStringYear = dateToString(endDateYear);\r\n          //var startDateStringYear = \"2018-02-04\";\r\n          //var endDateStringYear = \"2019-02-09\";\r\n          const byDayJson = await httpGet(`${protocol}://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\r\n          // var byDayJson = await byDayAttendanceData.json();\r\n          var dayData = await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear);\r\n          var hourData = await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n\r\n\r\n          //Delete this block later, this is just here for testing\r\n          // var dayData = this.formatDayData(this.state);\r\n          // console.log(\"processed day of year data after setting state: \", this.state.byDayJson);\r\n          // var hourData = this.formatHourData(this.state);\r\n          // console.log(\"processed hour of week data: \", hourData);\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n      updateDateOne(e) {\r\n        this.setState({dateOne: e.target.value});\r\n      }\r\n\r\n      updateDateTwo(e) {\r\n        this.setState({dateTwo: e.target.value});\r\n      }\r\n\r\n      async downloadCSV() {\r\n          if (this.state.dateOne === \"\" || this.state.dateTwo === \"\") {\r\n            return\r\n          }\r\n          this.setState({ buildingCSV: true });\r\n          await downloadAttendanceCSV(this.state.dateOne, this.state.dateTwo)\r\n          this.setState({ buildingCSV: false });\r\n      }\r\n    \r\n      downloadHourlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Hourly_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byHourJsonForDownload, [\"Date\", \"Hour\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadWeeklyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Daily_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload.splice(0,7), [\"Date\",\"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadYearlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Annual_Attendance_\".concat(this.state.startDateStringYear);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringYear);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload, [\"Date\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n\r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byDayJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byDayJson.length; i++){\r\n          entryAsList = Object.values(byDayJson[i]);\r\n          byDayJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          mdyArray = byDayJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          annualHeatMapEntry = {\"x\": weekNum+1, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayJsonForDownload: byDayJsonForDownload,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare))){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on SAME DAY, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || currHour > hourToCompare){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n        console.log(\"by hour json: \", byHourJson);\r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byHourJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byHourJson.length; i++){\r\n          entryAsList = Object.values(byHourJson[i]);\r\n          byHourJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,5);\r\n          mdyArray = byHourJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n                  byHourJsonForDownload: byHourJsonForDownload\r\n              };\r\n          });\r\n          console.log(\"by hour: \", processedData);\r\n        return processedData;\r\n      }\r\n\r\n    render() {\r\n        const buildingCSV = this.state.buildingCSV;\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_reports') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n        return (\r\n            <div className=\"container py-4\">\r\n              <h1> Reports </h1>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8 align-self-center\">\r\n                  <h3> Hourly Attendance </h3>\r\n                  <ButtonToolbar style={{ float: 'right'}}>\r\n                  <Button onClick={this.downloadHourlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Hourly'}</Button>\r\n                  </ButtonToolbar>\r\n                  <p> Number of engagements per hour in the past week from {this.state.startDateStringWeek} to {this.state.endDateStringWeek};</p>\r\n                  <p>with TODAY as the top row and past days showing below.</p>\r\n                  <Heatmap\r\n                    data = {this.state.byHourJson}\r\n                    heatMapType = \"weekly\" />\r\n                </div>\r\n                <div className='col-md-4 align-self-center'>\r\n                  <h3> Daily Attendance </h3>\r\n                  <ButtonToolbar style={{ float: 'right'}}>\r\n                  <Button onClick={this.downloadWeeklyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Daily'}</Button>\r\n                  </ButtonToolbar>\r\n                  <p> Number of engagements per day in the past week to {this.state.endDateStringYear}.</p>\r\n                  <BarChart data = {this.state.byDayJson.slice(-7)}/> </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8\">\r\n                    <h3> Annual Daily Attendance </h3>\r\n                    <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.downloadYearlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Annual'}</Button>\r\n                    </ButtonToolbar>\r\n                    <p> Number of engagements per day in the past year from {this.state.startDateStringYear} to {this.state.endDateStringYear};</p>\r\n                    <p>with the leftmost column as 52 weeks ago and the rightmost column as the current week.</p>\r\n                    <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-8\">\r\n                    <h3> Multi-Date Attendance Sheet </h3>\r\n                    <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                      <FormGroup>\r\n                          <ControlLabel>Start Date</ControlLabel>{' '}\r\n                          <FormControl onChange={this.updateDateOne} value={this.state.dateOne} type=\"date\"/>{'  '}\r\n                          <ControlLabel>End Date</ControlLabel>{' '}\r\n                          <FormControl onChange={this.updateDateTwo} value={this.state.dateTwo} type=\"date\"/>{'  '}\r\n                          <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                      </FormGroup>\r\n                    </Form>\r\n                    <br/>\r\n                    <br/>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: '',\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        errorMsg: '',\r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain, protocol } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            errorMsg: false\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({backendError: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({\r\n                    backendError: false,\r\n                    errorMsg: ''\r\n                })\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                        backendError: false,\r\n                        errorMsg: ''\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n           \r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>{this.state.row['name'] === undefined || this.state.row['name'] === ' ' ? \"[User History]\" : this.state.row['name'] }</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { getPermissions, httpGet, domain, protocol } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n        }\r\n        this.setState({showUserModal: false, users: users, showingUsers: showingUsers, showingAllUsers: false});\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users });\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`${protocol}://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    alert(\"Error: Unknown server error getting user history.\")\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, name: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        const permissions = getPermissions();\r\n        let buttonToolbar;\r\n        if (permissions.indexOf('add_user') >= 0) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                <Button onClick={this.openModal}>New User</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n            </ButtonToolbar>\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                {buttonToolbar}\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\nimport { Alert, Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                let displayName = perm_name;\r\n                if (displayName.includes('group')) {\r\n                    displayName = displayName.replace('group', 'user role');\r\n                } else if (displayName.includes('activity')) {\r\n                    displayName = displayName.replace('activity', 'programming');\r\n                } else if (displayName.includes('attendance items')) {\r\n                    displayName = displayName.replace('attendance items', 'attendance entries');\r\n                } else if (displayName.includes('student column')) {\r\n                    displayName = displayName.replace('student column', 'student field');\r\n                } else if (displayName.includes('city span students')) {\r\n                    displayName = displayName.replace('city span students', 'student keys');\r\n                }\r\n                checkboxes.push({label: perm_name, checked: false, displayName: displayName})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: '', error: false, backendError: false, errorMsg: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() === 'error') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        if (permissions.length < 1) {\r\n            self.setState({error: true});\r\n            return;\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.displayName}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name)) {\r\n            return 'success';\r\n        } else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n                        >\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { httpDelete, httpPatch, domain, protocol } from './Helpers';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            errorMsg: '',\r\n            error: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                let displayName = perm_name;\r\n                if (displayName.includes('group')) {\r\n                    displayName = displayName.replace('group', 'user role');\r\n                } else if (displayName.includes('activity')) {\r\n                    displayName = displayName.replace('activity', 'programming');\r\n                } else if (displayName.includes('attendance items')) {\r\n                    displayName = displayName.replace('attendance items', 'attendance entries');\r\n                } else if (displayName.includes('student column')) {\r\n                    displayName = displayName.replace('student column', 'student field');\r\n                } else if (displayName.includes('city span students')) {\r\n                    displayName = displayName.replace('city span students', 'student keys');\r\n                }\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked, displayName: displayName})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({error: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({error: false, errorMsg: ''});\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({error: false, errorMsg: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.displayName}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role?')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain, protocol } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`${protocol}://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass AssignStudentKeyModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oldID: 0,\r\n            student: {},\r\n            suggestions: [],\r\n            searchArray: [],\r\n            match: \"\",\r\n        }\r\n\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.setMatch = this.setMatch.bind(this);\r\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\r\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            oldID: this.props.studentID\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\r\n            const student = await httpGet(`${protocol}://${domain}/api/students/?id=${this.props.studentID}`);\r\n            const suggestions = await httpGet(`${protocol}://${domain}/api/suggestions/student/?id=${this.props.studentID}`);\r\n            const searchArray = this.buildSuggestionsArray();\r\n\r\n            this.setState({\r\n                student: student,\r\n                suggestions: suggestions,\r\n                searchArray: searchArray,\r\n                oldID: this.props.studentID\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSuggestionsArray() {\r\n        let array = []\r\n        const citySpanStudents = this.props.citySpanStudents;\r\n        for (var object in this.props.citySpanStudents) {\r\n            array.push({\r\n                firstName: citySpanStudents[object].first_name,\r\n                lastName1: citySpanStudents[object].last_name,\r\n                lastName2: \"\",\r\n                id: citySpanStudents[object].student_key\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    setMatch(studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    setMatchFromSearch(e, studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose()\r\n    }\r\n\r\n    onSubmit() {\r\n        // PATCH student\r\n        httpPatch(`${protocol}://${domain}/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose(this.props.studentID);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <h4>Suggestions:</h4>\r\n                    {this.state.suggestions.length === 3 \r\n                    && <ListGroup>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\r\n                      </ListGroup>}\r\n                    <br/>\r\n                    <h4>Search for match:</h4>\r\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\r\n                    <br/>\r\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass AssignStudentKeyButton extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyButton;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, Form, FormGroup, Label, Well } from 'react-bootstrap';\r\n\r\nclass FileUploader extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t  super();\r\n\t  this.state = {\r\n\t\tfile: undefined,\r\n\t\terror: \"\",\r\n\t  };\r\n\r\n\t  this.submit = this.submit.bind(this);\r\n\t}\r\n  \r\n\thandleChange = event => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\r\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\terror: \"\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Invalid file type\"\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tsubmit() {\r\n\t\tif (this.state.file !== undefined) {\r\n\t\t\tthis.props.upload(this.state.file);\r\n\t\t\tthis.setState({file: undefined});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\r\n\t\t\t\t<Well style={{display: 'inline-block'}}>\r\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\r\n\t\t\t\t</Well>\r\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\r\n\t\t\t</FormGroup>\r\n\t\t\t{this.state.error !== \"\" && <Label bsStyle=\"danger\">Error: {this.state.error}</Label>}\r\n\t\t</Form>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default FileUploader;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\r\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport FileUploader from './FileUploader';\r\n\r\nclass StudentKeys extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unmatchedStudents: [],\r\n            citySpanStudents: [],\r\n            suggestions: [],\r\n            showModal: false,\r\n            focusedStudent: -1,\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleRowClick = this.handleRowClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\r\n        this.processCSV = this.processCSV.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const unmatchedStudents = await httpGet(`${protocol}://${domain}/api/suggestions/unmatchedstudents/`);\r\n            const citySpanStudents = await httpGet(`${protocol}://${domain}/api/suggestions/cityspanstudents/`);\r\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\r\n\r\n            this.setState({\r\n                unmatchedStudents: unmatchedStudents,\r\n                suggestions: suggestions,\r\n                showModal: false,\r\n                focusedStudent: -1,\r\n                citySpanStudents: citySpanStudents\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleCSVUpload(csv) {\r\n        var papa = require('papaparse');\r\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\r\n    }\r\n\r\n    processCSV(result) {\r\n        var output = []\r\n        for (let index in result.data) {\r\n            let obj = result.data[index];\r\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\r\n                continue;\r\n            } \r\n            output.push({first_name: obj[\"First Name\"], last_name: obj[\"Last Name\"], student_key: obj[\"Student Key\"]})\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/suggestions/cityspanstudents/`, { \"students\": output })\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function (response) {\r\n                        alert(response.error);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    tmpfail(error, file) {\r\n        console.log(error);\r\n    }\r\n\r\n    handleRowClick(studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    closeModal(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({\r\n            showModal: false,\r\n            unmatchedStudents: unmatchedStudents\r\n        });\r\n    }\r\n\r\n    handleSearch(e, studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    updateStudents(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({unmatchedStudents: unmatchedStudents});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.unmatchedStudents.map(student =>\r\n            (\r\n               {\r\n                   name: `${student.first_name} ${student.last_name}`,\r\n                   id: student.id\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: AssignStudentKeyButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Students Without Student Keys</h1>\r\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\r\n                <br/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <Autocomplete\r\n                        suggestions={this.state.suggestions}\r\n                        handler={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div style={{float: 'right'}}>\r\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\r\n                </div>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'edit':this.handleRowClick}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentKeys ;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.activity_id !== this.state.row.activity_id) {\r\n            this.setState({ row: this.props.row })\r\n        } else if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    let activity1 = result[0];\r\n                    let activity2 = result[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Programming</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentFieldModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\r\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            is_showing: self.state.inUse,\r\n            quick_add: self.state.quickAdd,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'str',\r\n                        inUse: true,\r\n                        quickAdd: false,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleInUseCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n\r\n    handleQuickAddCheckbox = e => {\r\n        this.setState({quickAdd: !this.state.quickAdd});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student Field</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Field Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Field Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"date\">Date</option>\r\n                                <option value=\"str\">Text</option>\r\n                                <option value=\"int\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleInUseCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <ControlLabel>Show in Quick Add</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.quickAdd}\r\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\r\n                                onChange={this.handleQuickAddCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentFieldModal;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass StudentFieldCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accessor === 'is_showing') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.info_id !== this.state.row.info_id) {\r\n            this.setState({ row: this.props.row });\r\n        }\r\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {info_id: row.info_id};\r\n        body[self.props.accessor] = !self.state.checked;\r\n        httpPatch(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentFieldCheckbox;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddStudentFieldModal from './AddStudentFieldModal';\r\nimport { domain, httpGet, protocol } from './Helpers';\r\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\r\n\r\nclass EditStudentFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.createNewField = this.createNewField.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const fields = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            this.setState({\r\n                fields\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewField(field) {\r\n        return {\r\n            info_id: field.info_id,\r\n            is_showing: field.is_showing,\r\n            quick_add: field.quick_add,\r\n            name: field.name,\r\n            type: field.type,\r\n        };\r\n    }\r\n\r\n    updateCheckbox(field=null) {\r\n        let self = this;\r\n        let { fields } = self.state;\r\n        if (field !== null) {\r\n            fields = fields.filter(item => item.info_id !== field.info_id);\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        self.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'date') {\r\n            return 'Date';\r\n        } else if (type === 'str') {\r\n            return 'Text';\r\n        } else if (type === 'int') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(field=null) {\r\n        const { fields } = this.state;\r\n        if (field !== null) {\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        this.setState({showModal: false, fields: fields});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.fields.map(field =>\r\n            (\r\n               {\r\n                   name: field.name,\r\n                   is_showing: field.is_showing,\r\n                   info_id: field.info_id,\r\n                   type: field.type,\r\n                   type_name: this.getDataTypeName(field.type),\r\n                   quick_add: field.quick_add\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Field',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'quick_add',\r\n                label: 'Show in Quick Add',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n        ];\r\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Student Profile Fields</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\r\n                </ButtonToolbar>\r\n                <AddStudentFieldModal show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditStudentFields;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport StudentKeys from './StudentKeys';\r\nimport Activities from './Activities';\r\nimport EditStudentFields from './EditStudentFields';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      let tabs = [];\r\n      let counter = 1;\r\n      const permissions = getPermissions()\r\n      if (permissions.indexOf('view_user') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Management\">\r\n          <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('view_group') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Roles\">\r\n          <Roles toggleRefreshRoles={this.toggleRefreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Programming\">\r\n          <Activities />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Profile Fields\">\r\n          <EditStudentFields />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_cityspanstudents') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Key Management\">\r\n          <StudentKeys />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          {tabs}\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\nimport { getPermissions } from '../components/Helpers';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0 ||\r\n            permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0 || \r\n            permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}