{"version":3,"sources":["images/blank_profile_pic.jpg","components/Helpers.js","components/Layout.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","components/AttendanceByProgramReport.js","components/NewStudentsReport.js","components/MilestoneReport.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/FileUploader.js","components/AssignStudentKeyButton.js","components/LinkTable.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AddStudentFieldModal.js","components/StudentFieldCheckbox.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","domain","protocol","httpPost","url","body","arguments","length","undefined","token","window","localStorage","getItem","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","logout","push","error","json","httpPostFile","form","FormData","append","photo_value","student_id","info_id","httpPatch","httpPatchFile","id","blob","httpGet","httpDelete","compareActivities","a","b","ordering","removeItem","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","concat","sent","sort","abrupt","is_showing","name","activity_id","type","date","str_value","num_value","Object","first_name","last_name","t0","require","unparse","fields","data","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","this","downloadReportsCSV","columnHeaders","title","checkCredentials","Component","permissions","react_default","Redirect","to","partitions","split","parse","atob","decodeToken","exp","Date","now","getPermissions","getEarlierDate","daysAgo","console","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Layout","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","state","activeItem","show","children","nav","indexOf","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","withRouter","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","errorCode","errorMsg","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","alert","ids","CustomFunction","confirm","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","log","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","canCreateStudent","mobile","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","refresh","getCurrentDate","innerWidth","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","buttonToolbar","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","ButtonToolbar","float","components_AddStudentModal","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArrayStudents","err","heatMapType","dataLength","yArray","x","reverse","toCompare","min","max","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","setYArrayRange","margin","es","width","scaleWidth","scaleHeight","top","left","xType","yType","axisType","yDomain","reverseYAxis","orientation","colorRange","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","getPic","uploadedPic","src","blankPic","mode","canViewStudentInfo","canViewHeatmap","canDeleteStudent","heatMapJson","edit","studentsJson","studentColumnJson","parseCols","profileInfoPrelim","previousState","currentProps","picUpdated","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","studentProfileEx","photo_url","objectUrl","profileDataPrelim","studentInfoJson","addTypes","returnedState","parseStudentInfo","startDateString","endDateString","_context2","t1","test","infoId","returnednewState","entryFound","entryIndex","changedField","profileDataUpdated","newValue","posted","updateStudentInfo","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayEntry","processedData","strDays","y","floor","color","files","heatmap","components_Heatmap","formatData","parsedInfo","ListGroup","variant","deleteButton","delete","accept","readImage","handleNameChange","BarChart","obj","labelAnchorX","labelAnchorY","AttendanceByProgramReport","activityName","activityNumber","handleActivityDropdownSelect","updateEndDate","updateStartDate","items","itemIndex","studentIndex","studentName","studentKey","student_key","componentClass","NewStudentsReport","newStudents","MilestoneReport","milestone","updateMilestone","milestoneStudents","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byHourJsonForDownload","byDayJson","byDayJsonForDownload","byDayInPastWeekJson","byDayInPastWeekForDownload","byDayHeatMap","dateOne","dateTwo","tab","downloadHourlyCSV","downloadWeeklyCSV","downloadYearlyCSV","updateDateOne","updateDateTwo","handleTabSelect","startDateWeek","startDateYear","endDateYear","formatDayData","formatHourData","entryAsList","startPastWeek","endPastWeek","values","currDateObj","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","dayOfWeek","hourEntry","Tabs","activeKey","onSelect","Tab","eventKey","components_BarChart","components_AttendanceByProgramReport","components_NewStudentsReport","components_MilestoneReport","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","role_name","onDelete","passwordBlock","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","last1","last2","newUser","last_login","lastNames","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","displayName","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","onClose","match_key","paddingTop","match_name","FileUploader","event","file","extension","upload","LinkTable","select","page","pages","buildPages","first","last","header","text","charAt","toUpperCase","Table","striped","hover","bordered","Pagination","First","Prev","Item","Next","Last","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","output","components_AssignStudentKeyModal","components_FileUploader","components_LinkTable","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","quick_add","StudentFieldCheckbox","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","tabs","counter","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d685226.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","//Helper functions for date selection in data visualizations\n\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\n// Store helper functions that we'll probably re-use here!\n\nconst history = createBrowserHistory();\n\n//For local development\nconst domain = '127.0.0.1:8000'\nconst protocol = 'http'\n\n// // For production server\n// const domain = 'www.keyattendance.com'\n// const protocol = 'https'\n\n\nfunction httpPost(url, body={}) {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\n\t// if we don't have a token, we shouldn't be trying to call this function.\n\tif (token === null) {\n\t\thistory.push(`/`)\n\t\treturn\n\t}\n\n\treturn fetch(url, {\n\t\tmethod: \"POST\",\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\n\t\tbody: JSON.stringify(body)\n\t}).then(response => {\n\t\tif (response.status >= 400) {\n\t\t\t// Logout if we got a token validation error\n\t\t\tif (response.status === 403) {\n\t\t\t\tlogout()\n\t\t\t\thistory.push(`/`)\n\t\t\t}\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\n\t\t} else {\n\t\t\treturn response.json()\n\t\t}\n\t}); \n}\n\nfunction httpPostFile(url, body={}) {\n    const token = window.localStorage.getItem(\"key_credentials\");\n\n    // if we don't have a token, we shouldn't be trying to call this function.\n    if (token === null) {\n        history.push(`/`)\n        return\n    }\n\n    var form = new FormData()\n    form.append('file', body.photo_value);\n    form.append('student_id', body.student_id);\n    form.append('info_id', body.info_id);\n\n    return fetch(url, {\n        method: \"POST\",\n        headers: {'Authorization': 'JWT ' + token},\n        body: form\n    }).then(response => {\n        if (response.status >= 400) {\n            // Logout if we got a token validation error\n            if (response.status === 403) {\n                logout()\n                history.push(`/`)\n            }\n            return {'error' : response.status, 'response' : response.json()}\n        } else {\n            return response.json()\n        }\n    });\n}\n\nfunction httpPatch(url, body={}) {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\n\t// if we don't have a token, we shouldn't be trying to call this function.\n\tif (token === null) {\n\t\thistory.push(`/`)\n\t\treturn\n\t}\n\n\treturn fetch(url, {\n\t\tmethod: \"PATCH\",\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\n\t\tbody: JSON.stringify(body)\n\t}).then(response => {\n\t\tif (response.status >= 400) {\n\t\t\t// Logout if we got a token validation error\n\t\t\tif (response.status === 403) {\n\t\t\t\tlogout()\n\t\t\t\thistory.push(`/`)\n\t\t\t}\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\n\t\t} else if (response) {\n\t\t\treturn response.json()\n\t\t} else {\n\t\t\treturn // we got nothing back\n\t\t}\n\t}); \n}\n\nfunction httpPatchFile(url, body={}) {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\n\t// if we don't have a token, we shouldn't be trying to call this function.\n\tif (token === null) {\n\t\t\thistory.push(`/`)\n\t\t\treturn\n\t}\n\n\tvar form = new FormData()\n    form.append('file', body.photo_value);\n    form.append('student_id', body.student_id);\n    form.append('info_id', body.info_id);\n    form.append('id', body.id);\n\n\treturn fetch(url, {\n\t\t\tmethod: \"PATCH\",\n\t\t\theaders: {'Authorization': 'JWT ' + token},\n\t\t\tbody: form\n\t}).then(response => {\n\t\t\tif (response.status >= 400) {\n\t\t\t\t\t// Logout if we got a token validation error\n\t\t\t\t\tif (response.status === 403) {\n\t\t\t\t\t\t\tlogout()\n\t\t\t\t\t\t\thistory.push(`/`)\n\t\t\t\t\t}\n\t\t\t\t\treturn {'error' : response.status, 'response' : response.json()}\n\t\t\t} else {\n\t\t\t\t\treturn response.blob()\n\t\t\t}\n\t});\n}\n\nfunction httpGet(url) {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\t// if we don't have a token, we shouldn't be trying to call this function.\n\tif (token === null) {\n\t\thistory.push(`/`)\n\t\treturn\n\t}\n\n\treturn fetch(url, {\n\t\tmethod: \"GET\",\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\n\t}).then(response => {\n\t\tif (response.status >= 400) {\n\t\t\t// Logout if we got a token validation error\n\t\t\tif (response.status === 403) {\n\t\t\t\tlogout()\n\t\t\t\thistory.push(`/`)\n\t\t\t}\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\n\t\t} else {\n\t\t\treturn response.json()\n\t\t}\n\t}); \n}\n\nfunction httpGetFile(url) {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\t// if we don't have a token, we shouldn't be trying to call this function.\n\tif (token === null) {\n\t\thistory.push(`/`)\n\t\treturn\n\t}\n\n\treturn fetch(url, {\n\t\tmethod: \"GET\",\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\n\t}).then(response => {\n\t\tif (response.status >= 400) {\n\t\t\t// Logout if we got a token validation error\n\t\t\tif (response.status === 403) {\n\t\t\t\tlogout()\n\t\t\t\thistory.push(`/`)\n\t\t\t}\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\n\t\t} else {\n\t\t\treturn response.blob()\n\t\t}\n\t}); \n}\n\nfunction httpDelete(url, body={}) {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\n\t// if we don't have a token, we shouldn't be trying to call this function.\n\tif (token === null) {\n\t\thistory.push(`/`)\n\t\treturn\n\t}\n  \n\treturn fetch(url, {\n\t\tmethod: \"DELETE\",\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\n\t\tbody: JSON.stringify(body)\n\t}).then(response => {\n\t\tif (response.status >= 400) {\n\t\t\t// Logout if we got a token validation error\n\t\t\tif (response.status === 403) {\n\t\t\t\tlogout()\n\t\t\t\thistory.push(`/`)\n\t\t\t}\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\n\t\t} else {\n\t\t\treturn {};\n\t\t}\n\t}); \n}\n\nfunction compareActivities(a,b) {\n\tif (a.ordering < b.ordering)\n\t  return -1;\n\tif (a.ordering > b.ordering)\n\t  return 1;\n\treturn 0;\n}\n\nfunction decodeToken(token) {\n\tlet partitions = token.split('.');\n    return JSON.parse(atob(partitions[1]));\n}\n\nfunction logout() {\n\twindow.localStorage.removeItem(\"key_credentials\");\n\twindow.localStorage.removeItem(\"permissions\");\n}\n\nasync function downloadAttendanceCSV(startDate, endDate=null) {\n\t// Get data\n\tconst url = (startDate === endDate || endDate === null) ? `${protocol}://${domain}/api/attendance/?day=${startDate}` : `${protocol}://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\n\tconst attendanceData = await httpGet(url);\n\tconst studentData = await httpGet(`${protocol}://${domain}/api/students/`);\n\tconst activityData = await httpGet(`${protocol}://${domain}/api/activities/`);\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\n\t// Make sure we got the data we came for.\n\tif (attendanceData.length === 0 || activityData.length === 0) {\n\t\treturn\n\t}\n\t// Build activity lookup table\n\tvar activities = {}\n\tfor (var i = 0; i < activityData.length; i++) {\n\t\tif (activityData[i].is_showing) {\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\n\t\t}\n\t}\n\n\t// Combine attendance items. Need to sort by date and student id.\n\tvar entries = {}\n\tfor (var i = 0; i < attendanceData.length; i++) {\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\n\t\t}\n\t\tif (attendanceData[i].str_value !== null) {\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\n\t\t} else if (attendanceData[i].num_value !== null) {\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\n\t\t} else {\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\n\t\t}\n\t}\n\n\t// Build spreadsheet\n\tvar sheet = []\n\tvar columns = ['Date','First', 'Last', 'Student Key']\n\tfor (var i = 0; i < activityData.length; i++) {\n\t\tif (activityData[i].is_showing) {\n\t\t\tcolumns.push(activityData[i].name)\n\t\t}\n\t}\n\tconst keys = Object.keys(entries)\n\tfor (var i = 0; i < keys.length ; i++) {\n\t\tvar row = []\n\t\t// match student data to current id\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\n\t\t\t\trow[1] = studentData[j].first_name;\n\t\t\t\trow[2] = studentData[j].last_name;\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} \n\t\tfor (var j = 0; j < columns.length; j++) {\n\t\t\tswitch (columns[j]) {\n\t\t\t\tcase 'Date':\n\t\t\t\t\trow[j] = entries[keys[i]].date\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'First':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Last':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Student Key':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\n\t\t\t\t\tconst activity = activities[columns[j]];\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\n\t\t\t\t\t\tif (activity.type === 'boolean') {\n\t\t\t\t\t\t\trow[j] = 'N';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trow[j] = 'N/A';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsheet.push(row);\n\t}\n\n\t// Put data in a CSV\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\n\tvar csvString = papa.unparse({\n\t\tfields: columns,\n\t\tdata: sheet\n\t});\n\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\n\tvar element = document.createElement('a');\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\n\telement.style.display = 'none';\n\tdocument.body.appendChild(element);\n\telement.click();\n\tdocument.body.removeChild(element);\n}\n\nfunction downloadReportsCSV(json, columnHeaders, title) {\n\t// Put data in a CSV\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\n\tvar csvString = papa.unparse({\n\t\tfields: columnHeaders,\n\t\tdata: json\n\t});\n\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\n\tvar element = document.createElement('a');\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\n\telement.setAttribute('download', `${title}.csv`);\n\telement.style.display = 'none';\n\tdocument.body.appendChild(element);\n\telement.click();\n\tdocument.body.removeChild(element);\n}\n\n// Makes sure that we have a valid token, else redirects to login screen\nconst checkCredentials = (Component) => {\n\tconst token = window.localStorage.getItem(\"key_credentials\");\n\tconst permissions = window.localStorage.getItem('permissions')\n\tif (token === null || permissions === null) {\n\t\treturn <Redirect to='/'/>;\n\t}\n\tlet tokenData = decodeToken(token);\n\tif (tokenData.exp < Date.now() / 1000) { \n\t\tlogout();\n\t\treturn <Redirect to='/'/>;\n\t} else {\n\t\treturn <Component/>;\n\t}\n}\n\nfunction getPermissions() {\n\tlet permissions = window.localStorage.getItem('permissions')\n\tif (permissions !== null && permissions.length > 0) {\n\t\treturn permissions.split(',');\n\t}\n\treturn null;\n}\n\n// Only allows a component to render if the proper role is stored\nconst withRole = (Component, role) => {\n\tconst storedRole = window.localStorage.getItem(\"role\");\n\tif (storedRole !== role) {\n\t\treturn null\n\t} else {\n\t\treturn <Component/>;\n\t}\n}\n\n\n// Returns date obj for the date that is \"days ago\" number of days ago\n//from today's date\n//. E.g. if daysAgo equals 3 the date string will be the date \n// three days ago. If daysAgo = 0 the string is today's date.\nfunction getEarlierDate(daysAgo) {\n    if (daysAgo < 0) {\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\n      daysAgo = -daysAgo;\n    }\n    var earlierDate = new Date();\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\n    return earlierDate;\n}\n\n//Returns date obj for previous sunday from given date\n//(or the date itself if the date falls on a sunday)\nfunction getPrevSunday(date) {\n    var offset = date.getDay();\n    date.setDate(date.getDate() - offset);\n    return date;\n}\n\n//Returns date obj for following saturday from given date\n//(or the date itself if the date falls on a saturday)\nfunction getNextSaturday(date) {\n    var offset = 6 - date.getDay();\n    date.setDate(date.getDate() + offset);\n    return date;\n}\n\n// Creates a date string of the form yyyy-mm-dd for the date\nfunction dateToString(date){\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\n    return dateString;\n}\n\nexport { getPermissions, protocol, domain, downloadReportsCSV, downloadAttendanceCSV, compareActivities, httpPost, httpPostFile, httpPatch, httpPatchFile, httpGet, httpGetFile, httpDelete, checkCredentials, history, withRole, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }","import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { getPermissions } from './Helpers';\n\nclass Layout extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n        activeItem: 'home'\n      }\n  }\n\n  handleItemClick = (name) => () => {\n    this.props.history.push(`/${name}`);\n  }\n\n  logout = () => () => {\n    window.localStorage.removeItem(\"key_credentials\");\n    window.localStorage.removeItem(\"permissions\")\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    if (!this.props.show) { return this.props.children }\n    const permissions = getPermissions();\n    let nav = [];\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\n    }\n    if (permissions.indexOf('view_students') >= 0) {\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\n    }\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0 \n      || permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0\n      || permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\n    }\n    if (permissions.indexOf('view_reports') >= 0) {\n      nav.push(<NavItem key={3} onClick={this.handleItemClick('reports')}>Reports</NavItem>)\n    }\n    if (permissions.indexOf('view_reports') >= 0) {\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('reports')}>Volunteers</NavItem>)\n    }\n    const navItems = <Nav>{nav}</Nav>\n    return (\n      <div>\n        <Navbar>\n            <Navbar.Header>\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\n                    Key\n                </Navbar.Brand>\n                <Navbar.Toggle />\n            </Navbar.Header>\n            <Navbar.Collapse>\n              {navItems}\n              <Nav pullRight>\n                <NavItem onClick={this.logout()}>Logout</NavItem>\n              </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n  }),\n};\n\nexport default withRouter(Layout);\n","import React from 'react';\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport { domain, protocol } from '../components/Helpers';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n\t\tsuper(props)\n\t\t\n        this.state = {\n\t\t\tusername: \"\",\n            password:\"\",\n            error: false,\n            firstLogin: true\n\t\t}\n\t\t\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('loggedIn') != null) {\n            this.setState({firstLogin: false});\n        }\n    }\n\n    onUsernameChange(e) {\n\t\tthis.setState({username: e.target.value})\n\t}\n\n\tonPasswordChange(e) {\n\t\tthis.setState({password: e.target.value})\n    }\n\n    submit(e) {\n        e.preventDefault();\n        // Submit username and password to backend\n        fetch(`${protocol}://${domain}/api-token-auth/`, {\n            method: \"POST\", \n            headers:{'Content-Type':'application/json'}, \n            body: JSON.stringify({username: this.state.username, password: this.state.password})\n        }).then(response => {\n            if (response.status >= 400) {\n                // If we get a negative response, display some sort of error and wipe the fields.\n                this.setState({error: true, username: \"\", password: \"\"});\n            } else {\n                response.json().then(result => {\n                    // Store token in browser\n                    window.localStorage.setItem(\"key_credentials\", result.token);\n                    // Store permissions in browser\n                    window.localStorage.setItem(\"permissions\", result.permissions);\n                    // Flag that we've logged in before\n                    window.localStorage.setItem(\"loggedIn\", 'true');\n                    this.props.history.push(`/attendance`);\n                })\n            }\n        });\n    }\n\n    render() {\n        const centerStyle={'textAlign':'center'}\n        const token = window.localStorage.getItem(\"key_credentials\");\n        if (token !== null) {\n            return (<Redirect to='/attendance'/>);\n        } else {\n            return (\n                <div className='center'>\n                    <div className='login-container'>\n                        <Well>\n                            <h2 style={centerStyle}>Key Attendance</h2>\n                                <h4 style={centerStyle}>Sign In</h4>\n                                    <form onSubmit={e => this.submit(e)}>\n                                        <FormGroup>\n                                            <ControlLabel>Username</ControlLabel>\n                                            <FormControl\n                                                type=\"text\"\n                                                value={this.state.username}\n                                                placeholder=\"Username\"\n                                                onChange={this.onUsernameChange}\n                                            />\n                                            <br/>\n                                            <ControlLabel>Password</ControlLabel>\n                                            <FormControl\n                                                type=\"password\"\n                                                value={this.state.password}\n                                                placeholder='Password'\n                                                 onChange={this.onPasswordChange}\n                                             />\n                                        </FormGroup>\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\n                                        <br/>\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\n                                    </form>\n                                </Well>\n                            </div>\n                        </div> \n            );\n        }\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nclass ActivityCheckbox extends Component {\n    state = {\n        isChecked: false,\n        value: '',\n        activityType: ''\n    };\n\n    componentDidMount() {\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\n    }\n\n    componentDidUpdate() {\n        if (this.props.checked !== this.state.isChecked) {\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\n        }\n    }\n\n    // Handles checked/unchecked state of checkbox\n    toggleCheckboxChange = () => {\n        const { toggleCheckbox, label } = this.props;\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\n    };\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    render() {\n        const { label } = this.props;\n        const { isChecked, value, activityType } = this.state;\n\n        let checkbox = <span className=\"checkbox\">\n            <label>\n                <input\n                    type=\"checkbox\"\n                    value={label}\n                    checked={isChecked}\n                    onChange={this.toggleCheckboxChange}\n                />\n                {label}\n            </label>\n        </span>;\n\n        if (activityType === 'boolean') {\n            return (<span className=\"checkbox\">\n                {checkbox}\n            </span>)\n        } else{\n            let input;\n            if (activityType === 'string') {\n                input = <input\n                    type=\"text\"\n                    value={value}\n                    name=\"value\"\n                    disabled = {isChecked}\n                    onChange={this.handleChange}\n                />\n            } else {\n                input = <input\n                    type=\"number\"\n                    value={value}\n                    disabled = {isChecked}\n                    name=\"value\"\n                    onChange={this.handleChange}\n                />\n            }\n            return (\n                <span className=\"checkbox\">\n                    {checkbox}\n                    {input}\n                </span>\n            )\n        }\n\n    }\n}\n\nActivityCheckbox.propTypes = {\n    label: PropTypes.string.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired\n};\n\nexport default ActivityCheckbox;\n","import React from 'react';\nimport ActivityCheckbox from'./ActivityCheckbox.js'\nimport { Label } from 'react-bootstrap';\nimport { httpDelete, httpPost, domain, protocol } from './Helpers';\n\nclass ActivityCheckboxes extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            activities: {},\n            studentID: 0,\n            error: \"\",\n            errorMsg: \"\",\n            numChecked: 0,\n            date: ''\n        }\n\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\n    }\n\n    componentDidMount() {\n        let numChecked = 0;\n        const activities = this.props.row['activities']\n        const keys = Object.keys(activities);\n        for (let i = 0; i < keys.length; i++) {\n            if (activities[keys[i]].type === 'boolean') {\n                if (activities[keys[i]].value === true) {\n                    numChecked++;\n                }\n            } else {\n                if (activities[keys[i]].value !== '') {\n                    numChecked++;\n                }\n            }\n        }\n\n        this.setState({\n            activities: activities,\n            studentID: this.props.row.studentID,\n            numChecked: numChecked,\n            date: this.props.row.date\n        });\n    }\n\n    // Makes sure that the checkbox reflects whether it has been selected\n    toggleCheckbox = (isChecked, label, value, type) => {\n        const { activities, studentID, numChecked, date } = this.state;\n        var self = this; // This is a cheap hack so the .then() function can have access to state\n\n        // Get attendanceItemID, studentID, activityID from activities\n        const activityID = activities[label].activityID\n        const attendanceItemID = activities[label].attendanceItemID\n\n        // Carry out API actions\n        if (!isChecked) {\n            // Add attendanceItem to database\n            const today = new Date();\n            let body = {\n                \"student_id\": studentID,\n                \"activity_id\": activityID,\n                \"date\":`${date}`,\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\n            };\n            if (type === 'string') {\n                if (value === '') {\n                    return; // do not post if value is blank\n                }\n                body[\"str_value\"] = value;\n            } else if (type === 'float') {\n                if (value === '') {\n                    return; // do not post if value is blank\n                }\n                body[\"num_value\"] = value;\n            }\n            httpPost(`${protocol}://${domain}/api/attendance/`, body)\n            .then(function(result) {\n                // Update state to refresh checkboxes\n                if ('error' in result) {\n                    const errorCode = result.error;\n                    result.response.then(function(response) {\n                        self.setState({error: errorCode, errorMsg: response.error})\n                    });\n                } else {\n                    if (type === 'boolean') {\n                        activities[label].value = true;\n                    } else if (type === 'string') {\n                        activities[label].value = result.str_value;\n                    } else if (type === 'float') {\n                        activities[label].value = result.num_value;\n                    }\n                    activities[label].attendanceItemID = result.id;\n                    self.setState({activities: activities, numChecked: numChecked + 1, error: '', errorMsg: ''})\n                }\n            });\n        } else {\n            // Remove attendanceItem from the database\n            if (numChecked === 1) {\n                // We're trying to uncheck the last checkbox\n                // show some sort of visual error??\n            } else {\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\n                    if ('error' in result) {\n                        const errorCode = result.error;\n                        result.response.then(function (response) {\n                            self.setState({ error: errorCode, errorMsg: response.error })\n                        });\n                    } else {\n                        if (type === 'boolean') {\n                            activities[label].value = false;\n                        } else {\n                            activities[label].value = '';\n                        }\n                        self.setState({activities: activities, numChecked: numChecked - 1, error: '', errorMsg: ''})\n                    }\n                });\n            }\n        }\n    }\n\n    // Creates a checkbox for each activity\n    createCheckboxes = () => {\n        const { activities } = this.state;\n        const keys = Object.keys(activities);\n        var boxes = [];\n        for (var i = 0; i < keys.length; i++) {\n            const type = activities[keys[i]].type;\n            const value = activities[keys[i]].value;\n            let checked;\n            if (type === 'boolean') {\n                checked = value;\n            } else {\n                checked = value !== ''\n            }\n            boxes.push(\n                <ActivityCheckbox\n                    label={keys[i]}\n                    key={keys[i]}\n                    activityType={type}\n                    value={value}\n                    checked = {checked}\n                    toggleCheckbox={this.toggleCheckbox}\n                />\n            )\n        }\n        return boxes;\n    };\n\n    render() {\n        let errorMsg = \"Your changes have not been saved. Please refresh and try again.\";\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\n            errorMsg = this.state.errorMsg;\n        }\n        return (\n            <span className=\"container\">\n                <span className=\"row\">\n                    <span className=\"col-sm-12\">\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: {errorMsg} </Label>}\n                        {this.createCheckboxes()}\n                    </span>\n                </span>\n            </span>\n        );\n    }\n}\n\nexport default ActivityCheckboxes;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { httpDelete, getPermissions, domain, protocol } from './Helpers';\n\nclass AttendanceOptions extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n        }\n\n        this.deleteRow = this.deleteRow.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            row: this.props.row,\n        });\n    }\n\n    componentDidUpdate() {\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\n            this.setState({\n                row: this.props.row,\n            })\n        }\n    }\n\n    deleteRow() {\n        const permissions = getPermissions();\n        if (permissions.indexOf('delete_attendanceitems') < 0) {\n            alert('Error: You are not authorized to delete attendance items');\n        } else {\n            const { row } = this.state;\n            const activities = row['activities']\n            const keys = Object.keys(activities);\n            let ids = [];\n\n            // figure out what to delete\n            for (let i = 0; i < keys.length; i++) {\n                if (activities[keys[i]].attendanceItemID !== 0) {\n                    ids.push(activities[keys[i]].attendanceItemID)\n                }\n            }\n\n            // delete the things\n            for (let i = 0; i < ids.length; i++) {\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${ids[i]}`);\n            }\n\n            this.props.CustomFunction(row['studentID']);\n        }\n    }\n\n    render() {\n        return(\n            <Button \n                bsStyle=\"danger\" \n                onClick={(e) => { if (window.confirm('Are you sure you wish to delete this student?')) this.deleteRow(e)}}>Delete\n            </Button>\n        )\n    }\n}\n\nexport default AttendanceOptions;\n","import React from 'react';\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\nimport { httpPost, domain, protocol } from './Helpers';\n\nclass AddStudentModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n\t\t\n        this.state = {\n\t\t\tfirstName: \"\",\n\t\t\tlastName:\"\",\n\t\t\tshow: false,\n\t\t\tstudentFields: {},\n\t\t\tstudentInfo: {},\n\t\t}\n\t\t\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\n\t}\n\n\tcomponentDidUpdate() {\n        if (this.props.show !== this.state.show) {\n\t\t\tlet studentInfo = {};\n\t\t\tconst fieldsList = this.props.studentFields;\n\t\t\tlet studentFields = {};\n\t\t\tfor (var index in fieldsList) {\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\n\t\t\t}\n            this.setState({\n\t\t\t\tshow: this.props.show,\n\t\t\t\tstudentFields: studentFields,\n\t\t\t\tstudentInfo: studentInfo,\n\t\t\t});\n        }\n    }\n\n\tvalidateInput() {\n\t\tconst { firstName, lastName } = this.state;\n\t\tif (firstName.length > 0 && lastName.length > 0) {\n\t\t\treturn 'success';\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn 'error';\n\t\t}\n\t}\n\n\tonFirstNameChange(e) {\n\t\tthis.setState({firstName: e.target.value})\n\t}\n\n\tonLastNameChange(e) {\n\t\tthis.setState({lastName: e.target.value})\n\t}\n\t\n\tcancel() {\n\t\tthis.setState({\n\t\t\tfirstName: \"\",\n\t\t\tlastName:\"\",\n\t\t});\n\t\tthis.props.onSubmit();\n\t}\n\n\tcreateStudentInfo(name, value, student_id, self) {\n\t\tconst {studentFields} = self.state;\n\t\tconst field = studentFields[name];\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\n\t\tif (field.type === 'str') {\n\t\t\tbody['str_value'] = value;\n\t\t} else if (field.type === 'int') {\n\t\t\tbody['int_value'] = value;\n\t\t} else if (field.type === 'date') {\n\t\t\tbody['date_value'] = value;\n\t\t}\n\t\treturn body;\n\t}\n\n\tsubmit() {\n\t\tconst self = this;\n\t\thttpPost(`${protocol}://${domain}/api/students/`, {\n\t\t\tfirst_name: this.state.firstName,\n\t\t\tlast_name: this.state.lastName\n\t\t}).then(function(result) {\n\t\t\tif ('error' in result) {\n\t\t\t\tconsole.log(result);\n\t\t\t} else {\n\t\t\t\tconst student_id = result.id;\n\t\t\t\tconst {studentInfo} = self.state;\n\t\t\t\tlet infoBody = [];\n\t\t\t\tfor (var field in studentInfo) {\n\t\t\t\t\tif (studentInfo[field] !== '') {\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thttpPost(`${protocol}://${domain}/api/student_info/`, infoBody)\n\t\t\t\t\t.then(function (infoResult) {\n\t\t\t\t\t\tif ('error' in infoResult) {\n\t\t\t\t\t\t\tconsole.log(infoResult);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\t\tfirstName: \"\",\n\t\t\t\t\t\t\t\tlastName: \"\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.props.onSubmit(result);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tcreateStudentInfoFields () {\n\t\tlet info = [];\n\t\tconst { studentFields } = this.state;\n\t\tfor (var fieldName in studentFields) {\n\t\t\tconst field = studentFields[fieldName];\n\t\t\tlet type;\n\t\t\tswitch (field.type) {\n\t\t\t\tcase 'str':\n\t\t\t\t\ttype = \"text\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'int':\n\t\t\t\t\ttype = \"int\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'date':\n\t\t\t\t\ttype = \"date\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\n\t\t}\n\t\treturn info;\n\t}\n\n\thandleInfoChange = e => {\n        const name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tlet { studentInfo } = this.state;\n\t\tstudentInfo[name] = value;\n        this.setState({\n\t\t\tstudentInfo\n        });\n    };\n\n    render() {\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default AddStudentModal;\n","/*\n *  https://alligator.io/react/react-autocomplete/\n */\n\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Autocomplete.css\"\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\n\nclass Autocomplete extends Component {\n  static propTypes = {\n    suggestions: PropTypes.instanceOf(Array),\n    handler: PropTypes.instanceOf(Function)\n  };\n\n  static defaultProps = {\n    suggestions: [],\n    handler: null\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // The active selection's index\n      activeSuggestion: 0,\n      // The suggestions that match the user's input\n      filteredSuggestions: [],\n      // Whether or not the suggestion list is shown\n      showSuggestions: false,\n      // What the user has entered\n      userInput: \"\"\n    };\n  }\n\n  // Event fired when the input value is changed\n  onChange = e => {\n    const { suggestions } = this.props;\n    const userInput = e.currentTarget.value;\n\n    // Filter our suggestions that don't contain the user's input\n    const filteredSuggestions = suggestions.filter(\n      suggestion =>\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\n          (suggestion.firstName.toLowerCase() + \" \" +\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\n    );\n\n    // Update the user input and filtered suggestions, reset the active\n    // suggestion and make sure the suggestions are shown\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      userInput: e.currentTarget.value,\n    });\n  };\n\n  // Event fired when the user clicks on a suggestion\n  onClick = e => {\n    // Update the user input and reset the rest of the state\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: e.currentTarget.innerText\n    });\n    this.props.handler(e, e._targetInst.key);\n    this.setState({ userInput: \"\" });\n  };\n\n  // Prevents React's form from overriding our code when hitting enter\n  handleSubmit = e => {\n    e.preventDefault();\n  }\n\n  // Event fired when the user presses a key down\n  onKeyDown = e => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n\n    // User pressed the enter key, update the input and close the\n    // suggestions\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\n      this.props.handler(e, this.state.selectedId)\n      this.setState({ userInput: \"\" });\n    }\n    else if (e.keyCode === 13) {\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\n          filteredSuggestions[activeSuggestion].lastName1)\n        this.setState({\n          activeSuggestion: -1,\n          showSuggestions: false,\n          userInput: fullName,\n          selectedId: filteredSuggestions[activeSuggestion].id\n        });\n      }\n\n    }\n    // User pressed the up arrow, decrement the index\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\n      this.scrollUpHandler();\n    }\n    // User pressed the down arrow, increment the index\n    else if (e.keyCode === 40) {\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\n        return;\n      }\n\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\n      this.scrollDownHandler();\n    }\n  };\n\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\n  scrollDownHandler() {\n    var dropdown = document.getElementsByClassName(\"suggestions\");\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\n    var scrollPos = dropdown[0].scrollTop;\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\n    }\n  }\n\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\n  scrollUpHandler() {\n    var dropdown = document.getElementsByClassName(\"suggestions\");\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\n    var scrollPos = dropdown[0].scrollTop;\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\n    }\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      handleSubmit,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = (\n          <div className=\"suggestions\">\n            {filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === activeSuggestion) {\n                className = \"suggestion-active\";\n              }\n              let username = '';\n              if (suggestion.username) {\n                username = ' | ' + suggestion.username;\n              }\n              return (\n                <p\n                  className={className}\n                  key={suggestion.id}\n                  onClick={onClick}\n                >\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\n                </p>\n              );\n            })}\n          </div>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div className=\"no-suggestions\">\n            <em>No suggestions.</em>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n        <Form inline\n          onSubmit={handleSubmit}>\n          <FormGroup\n            controlId=\"formInlineName\"\n          >\n            <ControlLabel>{this.props.label === undefined ? 'Search:' : this.props.label}</ControlLabel>{' '}\n            <FormControl\n              autoComplete=\"off\"\n              type=\"text\"\n              value={userInput}\n              onChange={onChange}\n              onKeyDown={onKeyDown}\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\n            />\n            {suggestionsListComponent}\n          </FormGroup>{' '}\n        </Form>\n      </Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React from 'react';\nimport ReactCollapsingTable from 'react-collapsing-table';\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\nimport AttendanceOptions from '../components/AttendanceOptions';\nimport AddStudentModal from '../components/AddStudentModal';\nimport Autocomplete from \"../components/Autocomplete\";\nimport { httpPost, httpGet, domain, protocol } from '../components/Helpers';\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\nimport { getPermissions, downloadAttendanceCSV, compareActivities } from '../components/Helpers';\nimport { Redirect } from 'react-router-dom';\n\nclass Attendance extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            buildingCSV: false,\n            students: [],\n            activities: [],\n            attendanceItems: [],\n            suggestionsArray: [],\n            attendance: [],\n            showStudentModal: false,\n            date: '',\n            prevDate: '',\n            canCreateStudent: false,\n            mobile: false,\n        }\n\n        this.downloadCSV = this.downloadCSV.bind(this);\n        this.addStudent = this.addStudent.bind(this);\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.setDateToToday = this.setDateToToday.bind(this);\n        this.refresh = this.refresh.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({date: this.getCurrentDate(), mobile: (window.innerWidth < 768)})\n    }\n\n    componentDidUpdate() {\n        if (this.state.date !== this.state.prevDate) {\n            this.setState({prevDate: this.state.date})\n            this.fetchAndBuild()\n        }\n    }\n\n    getCurrentDate() {\n        const today = new Date();\n        const month = today.getMonth() + 1;\n        const day = today.getDate();\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\n    }\n\n    async fetchAndBuild() {\n        const { date } = this.state;\n        try {\n\n            const students = await httpGet(`${protocol}://${domain}/api/students/`);\n            const attendanceItems = await httpGet(`${protocol}://${domain}/api/attendance/?day=${date}`);\n            let activities = await httpGet(`${protocol}://${domain}/api/activities/`);\n            const permissions = getPermissions()\n            let studentFields = [];\n            let canCreateStudent = false;\n            if (permissions.indexOf('add_students') >= 0) {\n                studentFields = await httpGet(`${protocol}://${domain}/api/student_column/?quick_add=True`);\n                canCreateStudent = true;\n            }\n            activities = activities.filter(item => item.is_showing === true);\n            activities.sort(compareActivities)\n            const suggestions = this.makeSuggestionsArray(students);\n\n            this.setState({\n                suggestionsArray: suggestions,\n                students: students,\n                activities: activities,\n                studentFields : studentFields,\n                attendanceItems: attendanceItems,\n                canCreateStudent: canCreateStudent\n            });\n        } catch (e) {\n            console.log(e);\n        }\n        this.buildSheet();\n    }\n\n    buildSheet() {\n        const { activities, attendanceItems, students } = this.state;\n        // Combine attendance items. Need to sort by student id.\n        var entries = {};\n        for (var i = 0; i < attendanceItems.length; i++) {\n            if (attendanceItems[i].activity_id === -1) {\n                continue;\n            }\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\n            }\n            let value = true;\n            if (attendanceItems[i].num_value !== null) {\n                value = attendanceItems[i].num_value;\n            } else if (attendanceItems[i].str_value !== null) {\n                value = attendanceItems[i].str_value;\n            }\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\n        }\n\n        // Build table of the form [{name, activity1, ... , activityn, time}]\n        var sheet = [];\n        const ids = Object.keys(entries);\n        var columns = ['Name'];\n        for (var i = 0; i < activities.length; i++) {\n            columns.push(activities[i].name);\n        }\n        for (var i = 0; i < ids.length; i++) {\n            var row = {}\n            // match student data to current id\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\n                if (students[j].id === parseInt(ids[i])) {\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\n                    row['studentID'] = students[j].id;\n                    break;\n                }\n            } \n            row['time'] = entries[ids[i]].time;\n            row['activities'] = {};\n            // fill in activities data\n            for (var j = 0; j < activities.length; j++) {\n                let value;\n                if (!entries[ids[i]][activities[j].activity_id]) {\n                    if (activities[j].type === 'boolean') {\n                        value = false;\n                    } else {\n                        value = '';\n                    }\n                } else {\n                    value = entries[ids[i]][activities[j].activity_id].value;\n                }\n                row['activities'][activities[j].name] = {\n                    'value': value,\n                    'activityID': activities[j].activity_id,\n                    'type': activities[j].type,\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\n                }\n            }\n            sheet.push(row)\n        }\n\n        this.setState({ attendance: sheet });\n    }\n\n    async addStudent(e, studentID) {\n        // Refresh attendance page.\n        await this.fetchAndBuild();\n\n        const { students, attendance, activities, date } = this.state;\n        const today = new Date();\n        const self = this;\n\n        // make sure we don't already have this student.\n        for (let i = 0; i < attendance.length; i++) {\n            if (parseInt(studentID) === attendance[i].studentID) {\n                return;\n            }\n        }\n\n        httpPost(`${protocol}://${domain}/api/attendance/`, {\n            \"student_id\": studentID,\n            \"activity_id\": 7, // Key    \n            \"date\":`${date}`,\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\n        }).then(function(result) {\n            if ('error' in result) {\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\n            } else {\n                // Add new row to table\n                let name = \"\";\n                for (var j = 0; j < students.length; j++) {\n                    if (students[j].id === parseInt(studentID)) {\n                        name = `${students[j].first_name} ${students[j].last_name}`;\n                        break;\n                    }\n                }\n\n                let activityList = {};\n                for (var j = 0; j < activities.length; j++) {\n                    const type = activities[j].type;\n                    const value = type === 'boolean' ? false : '';\n                    activityList[activities[j].name] = {\n                        'activityID': activities[j].activity_id,\n                        'attendanceItemID': 0,\n                        'value': value,\n                        'type': type\n                    }\n                }\n                activityList['Key']['value'] = true;\n                activityList['Key']['attendanceItemID'] = result.id;\n\n                const row = { 'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities': activityList };\n                attendance.push(row);\n                self.setState({ attendance: attendance });\n            }\n        });\n    }\n\n    makeSuggestionsArray(suggestions) {\n        var array = [];\n        var lastHolder1;\n        var lastHolder2;\n        var tempArray;\n        for (var object in suggestions) {\n            if (suggestions[object]['last_name'].includes(\" \")) {\n                tempArray = suggestions[object]['last_name'].split(\" \");\n                lastHolder1 = tempArray[0];\n                lastHolder2 = tempArray[1];\n            }\n            else {\n                lastHolder1 = suggestions[object]['last_name'];\n                lastHolder2 = \"\";\n            }\n            array.push({\n                firstName: suggestions[object]['first_name'],\n                lastName1: lastHolder1,\n                lastName2: lastHolder2,\n                id: suggestions[object]['id']\n            });\n        }\n        return array;\n    }\n\n    async downloadCSV() {\n        this.setState({ buildingCSV: true });\n        await downloadAttendanceCSV(`${this.state.date}`)\n        this.setState({ buildingCSV: false });\n    }\n\n    // Allows the AttendanceOptions object to  update state here\n    removeAttendanceRow(studentID) {\n        const { attendance } = this.state;\n        for (let i = 0; i < attendance.length; i++) {\n            if (attendance[i].studentID === studentID) {\n                attendance.splice(i, 1);\n            }\n        }\n        this.setState({attendance: attendance});\n    }\n\n    openModal() {\n        this.setState({showStudentModal: true});\n    }\n\n    refresh() {\n        this.fetchAndBuild();\n    }\n\n    closeModal(student=null) {\n        const { students } = this.state;\n        let suggestions = []\n\n        if (student !== null) {\n            // First, add student to students list\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\n            suggestions = this.makeSuggestionsArray(students);\n            // Then, add student to the array.\n            this.addStudent(null, student.id);\n        }\n\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\n    }\n\n    updateDate(e) {\n        this.setState({date: e.target.value});\n    }\n\n    setDateToToday() {\n        this.setState({date: this.getCurrentDate()})\n    }\n\n    render() {\n        const permissions = getPermissions();\n        if (permissions.indexOf('view_attendanceitems') < 0) {\n            return (<Redirect to='/notfound'/>);\n        }\n        const rows = this.state.attendance.map(item =>\n            (\n               {\n                   name: item.name,\n                   time: item.time,\n                   activities: item.activities,\n                   studentID: item.studentID,\n                   date: this.state.date\n               }\n           )\n        ).sort((a, b) => {\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\n        });\n\n        const columns = [\n            {\n                accessor: 'name',\n                label: 'Name',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'time',\n                label: 'Check-in Time',\n                priorityLevel: 2,\n                position: 2,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'options',\n                label: 'Options',\n                priorityLevel: 3,\n                position: 3,\n                CustomComponent: AttendanceOptions,\n                sortable: false,\n                minWidth: 100\n            },\n            { \n                accessor: 'activities',\n                label: 'Activities',\n                priorityLevel: 4,\n                position: 4,\n                minWidth: 2000,\n                CustomComponent: ActivityCheckboxes,\n                sortable: false, \n            }\n        ];\n\n        const buildingCSV = this.state.buildingCSV;\n\n        let buttonToolbar;\n        if (this.state.canCreateStudent) {\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\n                <Button onClick={this.refresh}>Refresh</Button>\n                {!this.state.mobile && <Button onClick={this.setDateToToday}>Go To Today</Button>}\n                {!this.state.mobile && <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>}\n                <Button onClick={this.openModal}>Create New Student</Button>\n            </ButtonToolbar>\n        } else {\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\n                <Button onClick={this.refresh}>Refresh</Button>\n                {!this.state.mobile && <Button onClick={this.setDateToToday}>Go To Today</Button>}\n                {!this.state.mobile && <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>}\n            </ButtonToolbar>\n        }\n\n        return (\n            <div className='content'>\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\n                <h1>Attendance for {this.state.date}</h1>\n                <br/>\n                {buttonToolbar}\n                {!this.state.mobile && <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\n                    <FormGroup>\n                        <ControlLabel>Date:</ControlLabel>{' '}\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\n                    </FormGroup>\n                </Form>}\n                <Autocomplete\n                    label={'Check-in Student:'}\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\n\t\t\t\t\thandler={this.addStudent}\n\t\t\t\t/>\n                <br/>\n                <ReactCollapsingTable\n                        rows = { rows }\n                        columns = { columns }\n                        column = {'time'}\n                        direction = {'descending'}\n                        showPagination={ true }\n                        callbacks = {{'options':this.removeAttendanceRow}}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from 'react';\nimport { HeatmapSeries, XAxis, XYPlot, YAxis } from 'react-vis';\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\nimport \"./React-vizLegends.scss\";\n\n\nclass Heatmap extends Component {\n\n  static propTypes = {\n    heatMapJson: PropTypes.instanceOf(Array),\n  };\n\n  static defaultProps = {\n    data: [],\n      heatMapType: \"\"\n\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: props.data,\n        // yArray is used for the reports Heatmaps and yArrayStudents is used for students heatmap\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n    };\n  }\n\n  // Sets the correct range for the y-axis depending on what day the data starts on\n    // This assumes the range length will always be exactly one week\n  setYArrayRange(data) {\n      try {\n          if (data[0][\"y\"] === \"Thu\") {\n              return [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ]\n          }\n          else if (data[0][\"y\"] === \"Fri\") {\n              return [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", ]\n          }\n          else if (data[0][\"y\"] === \"Sat\") {\n              return [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", ]\n          }\n          else if (data[0][\"y\"] === \"Sun\") {\n              return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ]\n          }\n          else if (data[0][\"y\"] === \"Mon\") {\n              return [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", ]\n          }\n          else if (data[0][\"y\"] === \"Tue\") {\n              return [\"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\",]\n          }\n          else if (data[0][\"y\"] === \"Wed\") {\n              return [\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", ]\n          }\n      }\n      catch(err) {\n          console.log(err);\n      }\n\n\n  };\n\n  scaleWidth(heatMapType, dataLength) {\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\n      return 8*dataLength;\n    }\n    else if (heatMapType === \"annual\") {\n      return 3.2*dataLength;\n    }\n  }\n\n  scaleHeight(heatMapType) {\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\n          return 300;\n      }\n      else if (heatMapType === \"annual\") {\n          return 350;\n      }\n  }\n\n  axisType(heatMapType) {\n      return \"ordinal\";\n  }\n\n  colorRange(data, heatMapType) {\n      for (var i=0; i<data.length; i++) {\n          if ((heatMapType === \"individualStudent\"  && data[i][\"color\"] !== 0) ||\n              ((heatMapType === \"weekly\" || heatMapType === \"annual\" ) && data[i][\"color\"] !== 0)) {\n              return [\"#F5FBFD\", \"teal\"]\n          }\n      }\n      return [\"#F5FBFD\", \"#F5FBFD\"];\n  }\n\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\n  reverseYAxis(heatMapType, yArray) {\n      if (heatMapType !== \"individualStudent\") {\n          try {\n              return yArray.map(x => x).reverse();\n          }\n          catch (err) {\n              console.log(err);\n          }\n      }\n      else {\n          return this.state.yArrayStudents.map(x=>x).reverse();\n      }\n\n  }\n\n  calculateMinDataPoint(data){\n    var min = 0;\n    var toCompare;\n    for(var i=0; i<data.length;i++){\n      toCompare = data[i][\"color\"];\n      if(toCompare && (toCompare < min)){\n        min = toCompare;\n      }\n    }\n    return min;\n  }\n\n  calculateMaxDataPoint(data){\n    var max = 0;\n    var toCompare;\n    for(var i=0; i<data.length;i++){\n      toCompare = data[i][\"color\"];\n      if(toCompare && (toCompare > max)){\n        max = toCompare;\n      }\n    }\n    return max;\n  }\n\n  calculateHeatmapColor(maxHeatMapColor){\n    if(maxHeatMapColor===0){\n      return \"#F5FBFD\";\n    } else {\n      return \"teal\";\n    }\n  }\n\n  render() {\n    const data = this.props.data;\n    const dataLength = data.length;\n    const heatMapType = this.props.heatMapType;\n    const minLegendLabel = this.calculateMinDataPoint(data);\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\n    const yArray = this.setYArrayRange(data);\n\n\n    return (\n      <div>\n        <div style={{margin:20}}>\n      <XYPlot\n        width={this.scaleWidth(heatMapType, dataLength)}\n        height={this.scaleHeight(heatMapType)}\n        margin={{top: 30, left: 45}}\n        xType=\"ordinal\"\n        yType={this.axisType(heatMapType)}\n        yDomain={this.reverseYAxis(heatMapType, yArray)}\n        >\n        <XAxis orientation='top'/>\n        <YAxis orientation='left'/>\n\n        <HeatmapSeries\n            className=\"heatmap-series-example\"\n            colorRange = {this.colorRange(data, heatMapType)}\n              data={data}\n              style={{\n                stroke: 'black',\n                strokeWidth: '1px',\n                rectStyle: {\n                  rx: 1,\n                  ry: 1\n                }\n              }} />\n\n      </XYPlot>\n      </div>\n\n      <ContinuousColorLegend\n      width={300}\n      startTitle={minLegendLabel}\n      midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\n      endTitle= {maxLegendLabel}\n      startColor=\"#F5FBFD\"\n      endColor={maxHeatMapColor}\n      height={100}\n      />\n</div>\n      \n    );\n  };\n}\n\nexport default Heatmap;","import React, { Component } from 'react';\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, Label, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom';\nimport Autocomplete from '../components/Autocomplete';\nimport Heatmap from '../components/Heatmap';\nimport { dateToString, getPermissions, domain, getEarlierDate, getNextSaturday, getPrevSunday, httpDelete, httpGet, httpPatch, httpPost, protocol, httpPostFile, httpPatchFile, httpGetFile } from '../components/Helpers';\nimport blankPic from '../images/blank_profile_pic.jpg';\n\n\nclass Students extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'search',\n      canViewStudentInfo: false,\n      canViewHeatmap: false,\n      canDeleteStudent: false,\n      heatMapJson: []\n    };\n    this.display = this.display.bind(this);\n    this.edit = this.edit.bind(this);\n    this.handler = this.handler.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      var studentsJson = await httpGet(`${protocol}://${domain}/api/students/`);\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\n      \n      let permissions = getPermissions()\n      let canViewStudentInfo = false;\n      if (permissions.indexOf('view_studentinfo') >= 0) {\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n        var profileInfo = this.parseCols(studentColumnJson);\n        var profileInfoPrelim = this.parseCols(studentColumnJson);\n        canViewStudentInfo = true;\n      }\n      let canViewHeatmap = false;\n      if (permissions.indexOf('view_reports') >= 0) {\n        canViewHeatmap = true;\n      }\n      let canDeleteStudent = false;\n      if (permissions.indexOf('delete_students') >= 0) {\n        canDeleteStudent = true;\n      }\n\n      this.setState(function (previousState, currentProps) {\n        return {\n          mode: 'search',\n          suggestionsArray: suggestionsArray,\n          studentColumnJson: studentColumnJson,\n          profileInfo: profileInfo,\n          profileInfoPrelim: profileInfoPrelim,\n          id: null,\n          canViewStudentInfo: canViewStudentInfo,\n          canViewHeatmap: canViewHeatmap,\n          uploadedPic: false,\n          src: null,\n          picUpdated: false,\n          canDeleteStudent: canDeleteStudent\n        };\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  makeSuggestionsArray(suggestions) {\n    var array = [];\n    var lastHolder1;\n    var lastHolder2;\n    var tempArray;\n    for (var object in suggestions) {\n      if (suggestions[object]['last_name'].includes(\" \")) {\n        tempArray = suggestions[object]['last_name'].split(\" \");\n        lastHolder1 = tempArray[0];\n        lastHolder2 = tempArray[1];\n      }\n      else {\n        lastHolder1 = suggestions[object]['last_name'];\n        lastHolder2 = \"\";\n      }\n      array.push({\n        firstName: suggestions[object]['first_name'],\n        lastName1: lastHolder1,\n        lastName2: lastHolder2,\n        id: suggestions[object]['id']\n      });\n    }\n    return array;\n  }\n\n  parseCols(cols) {\n    cols.sort(this.sortCols);\n    \n    var profileInfo = [];\n    for (var col in cols) {\n      profileInfo[col] = {\n        studentInfoId: null,\n        colInfo: cols[col],\n        value: null,\n        type: null,\n        updated: false,\n        patchPost: {\n          'student_id': null,\n          'info_id': parseInt(col) + 1,\n          'int_value': null,\n          'str_value': null,\n          'bool_value': null,\n          'date_value': null,\n          'time_value': null,\n          'photo_value': null,\n          'id': null\n        }\n      }\n    }\n\n    return profileInfo;\n  }\n  \n  // Could be used to create a custom layout for the fields on the student profile page\n  sortCols(a, b) {\n    if (a.info_id > b.info_id) return 1;\n    if (a.info_id < b.info_id) return -1;\n    return 0;\n  }\n\n  handler(e, studentId) {\n    var preState = {\n      mode: 'display',\n      id: studentId,\n      profileInfo: this.state.profileInfo,\n      profileInfoPrelim: this.state.profileInfoPrelim\n    };\n    this.getStudentProfile(preState);\n  }\n\n  async getStudentProfile(state) {\n    try {\n      const studentProfileJson = await httpGet(`${protocol}://${domain}/api/students/?id=` + state.id);\n      state.profileData = studentProfileJson;\n      const studentProfileEx = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\n      \n      for (var i in studentProfileEx) {\n        if (studentProfileEx[i].photo_url !== null && this.state.picUpdated == false) {\n          var objectUrl = `${protocol}://${domain}/${studentProfileEx[i].photo_url}`;\n          this.setState({src: objectUrl, uploadedPic: true});\n        }\n      }\n      this.setState({picUpdated: false});\n      \n      // Deep copy\n      state.profileDataPrelim = JSON.parse(JSON.stringify(studentProfileJson));\n      if (this.state.canViewStudentInfo) {\n        try {\n          const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\n          if (studentInfoJson.length === 0) {\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n            state.profileInfo = this.parseCols(studentColumnJson);\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\n            state = this.addTypes(state);\n          } else {\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n            state.profileInfo = this.parseCols(studentColumnJson);\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\n            state = this.addTypes(state);\n\n            var returnedState = this.parseStudentInfo(state, studentInfoJson);\n            state.profileInfo = returnedState.profileInfo;\n            state.profileInfoPrelim = returnedState.profileInfoPrelim;\n          }\n        }\n        catch (e) {\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n          state.profileInfo = this.parseCols(studentColumnJson);\n        }\n      }\n\n      //get heatmap data for past 28 days (past 4 wks) up to the previous sunday (\"the starting sunday\")\n      // to the saturday which ends this current week (i.e. \"the ending saturday\")\n      //this ensures we are always getting exactly 5 weeks worth of data\n      var startDate = getEarlierDate(28);\n      startDate = getPrevSunday(startDate);\n      var startDateString = dateToString(startDate);\n      state.startDateString = startDateString;\n      var today = getEarlierDate(0);\n      var endDate = getNextSaturday(today);\n      var endDateString = dateToString(endDate);\n      state.endDateString = endDateString;\n\n      if (this.state.canViewHeatmap) {\n        const heatMapJson = await httpGet(`${protocol}://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\n        state.heatMapJson = heatMapJson;\n      }\n\n      this.setState(function (previousState, currentProps) {\n        return state;\n      });\n    }\n    catch (e) {\n      console.log(e);\n    }\n  }\n\n  async updateStudentInfo() {\n    const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${this.state.id}`);\n    var returnedState = this.parseStudentInfo(this.state, studentInfoJson);\n\n    this.setState(function (previousState, currentProps) {\n      return {\n        profileInfo: returnedState.profileInfo,\n        profileInfoPrelim: returnedState.profileInfoPrelim\n      };\n    });\n  }\n\n  addTypes(state) {\n    for (var entry in state.profileInfo) {\n      state.profileInfo[entry].patchPost.student_id = state.id;\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\n\n      // Ensure all varchar(x) types get caught as str_value\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\n        state.profileInfo[entry].type = 'str_value';\n        state.profileInfoPrelim[entry].type = 'str_value';\n      } else {\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\n      }\n    }\n    return state;\n  }\n\n  parseStudentInfo(state, info) {\n    for (var entry in state.profileInfo) {\n      state.profileInfo[entry].patchPost.student_id = state.id;\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\n\n      var type;\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\n        state.profileInfo[entry].type = 'str_value';\n        state.profileInfoPrelim[entry].type = 'str_value';\n      } else {\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\n      }\n    }\n\n    for (var item in info) {\n      var infoId = info[item].info_id;\n      state.profileInfo[infoId - 1].patchPost = info[item];\n      state.profileInfoPrelim[infoId - 1].patchPost = info[item];\n\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\n      state.profileInfoPrelim[infoId - 1].studentInfoId = info[item].id;\n\n      type = state.profileInfo[infoId - 1].type;\n      state.profileInfo[infoId - 1].value = info[item][type];\n      state.profileInfoPrelim[infoId - 1].value = info[item][type];\n    }\n\n    return state;\n  }\n\n  search() {\n    var preState = {\n      mode: 'search',\n      id: this.state.id,\n      profileInfo: this.state.profileInfo,\n      profileInfoPrelim: this.state.profileInfoPrelim\n    };\n    this.getStudentProfile(preState);\n  }\n\n  display() {\n    var preState = {\n      mode: 'display',\n      id: this.state.id,\n      profileInfo: this.state.profileInfo,\n      profileInfoPrelim: this.state.profileInfoPrelim\n    };\n    this.getStudentProfile(preState);\n  }\n\n  edit() {\n    this.setState({ mode: 'edit' });\n  }\n  \n  async delete(evt, state) {\n    evt.preventDefault();\n\n    // Ensure we have studentInfoIds from the most recent POSTs\n    var newState = {\n      mode: 'search',\n      id: this.state.id,\n      profileInfo: this.state.profileInfo,\n      profileInfoPrelim: this.state.profileInfoPrelim\n    };\n\n    try {\n      const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\n\n      if (studentInfoJson.length === 0) {\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n        newState.profileInfo = this.parseCols(studentColumnJson);\n        newState = this.addTypes(newState);\n      } else {\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n        newState.profileInfo = this.parseCols(studentColumnJson);\n        newState = this.addTypes(newState);\n\n        var returnednewState = this.parseStudentInfo(newState, studentInfoJson);\n        newState.profileInfo = returnednewState.profileInfo;\n      }\n    } \n    catch (e) {\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\n      newState.profileInfo = this.parseCols(studentColumnJson);\n    }\n\n    httpDelete(`${protocol}://${domain}/api/students/`, state.profileData);\n\n    // Ensure that the autocomplete removes the entry\n    var entryFound = false;\n      var entryIndex = 0;\n      while (entryFound === false) {\n        if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\n          state.suggestionsArray.splice(entryIndex, 1);\n          entryFound = true\n        } else {\n          entryIndex++;\n        }\n      }\n      \n      this.state.mode = 'search';\n      this.setState(function (previousState, currentProps) {\n        return state;\n      });\n  }\n\n  handleNameChange(evt, state) {\n    var changedField = evt.target.id;\n    state.profileDataPrelim[changedField] = evt.target.value;\n    state.profileDataUpdated = true;\n    this.setState(function (previousState, currentProps) {\n      return state;\n    });\n  }\n\n  handleInfoChange(evt, state) {\n    var changedField = parseInt(evt.target.id);\n    \n    var newValue = evt.target.value;\n    var type = state.profileInfoPrelim[changedField].type;\n\n    state.profileInfoPrelim[changedField].updated = true;\n\n    // Ensure that empty strings are parsed as null values\n    if (newValue === '') {\n      newValue = null;\n    }\n\n    state.profileInfoPrelim[changedField].value = newValue;\n    state.profileInfoPrelim[changedField].patchPost[type] = newValue;\n\n    this.setState(function (previousState, currentProps) {\n      return state;\n    });\n  }\n\n  handleSubmit(evt, state) {\n    evt.preventDefault();\n    httpPatch(`${protocol}://${domain}/api/students/`, state.profileData)\n      .then(function (result) {\n        if ('error' in result) {\n          result.response.then(function (response) { alert(`Error: ${response.error}`) });\n        }\n      });\n    \n    state.profileInfo = state.profileInfoPrelim;\n\n    if (state.profileDataUpdated) {\n      state.profileData = JSON.parse(JSON.stringify(state.profileDataPrelim));\n      httpPatch(`${protocol}://${domain}/api/students/`, state.profileData);\n    }\n    var posted = false;\n    for (var field in state.profileInfo) {\n      var field = state.profileInfo[field];\n      if (field.updated) {\n        if (field.studentInfoId) {\n          if (field.colInfo.name == 'photopath') {\n            httpPatchFile(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\n              .then(function (result) {\n                if ('error' in result) {\n                  result.response.then(function (response) { alert(`Error: ${response.error}`) });\n                }\n              });\n          } else {\n            httpPatch(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\n              .then(function (result) {\n                if ('error' in result) {\n                  result.response.then(function (response) { alert(`Error: ${response.error}`) });\n                }\n              });\n          }\n        } else {\n            field.patchPost.student_id = state.id;\n            if (field.colInfo.name == 'photopath') {\n              httpPostFile(`${protocol}://${domain}/api/student_info/`, field.patchPost)\n                .then(function (result) {\n                  if ('error' in result) {\n                    result.response.then(function (response) { alert(`Error: ${response.error}`) });\n                  } else {\n                    posted = true;\n                  }\n                });\n            }\n            else {\n              httpPost(`${protocol}://${domain}/api/student_info/`, field.patchPost)\n                .then(function (result) {\n                  if ('error' in result) {\n                    result.response.then(function (response) { alert(`Error: ${response.error}`) });\n                  } else {\n                    posted = true;\n                  }\n                });\n            }\n        }\n      }\n    }\n    \n    if (posted) {\n      this.updateStudentInfo();\n    }\n\n\n    // Ensure that the autocomplete component has an updated copy of the profile\n    var entryFound = false;\n    var entryIndex = 0;\n    while (entryFound === false) {\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\n        state.suggestionsArray[entryIndex] = {\n          firstName: state.profileData['first_name'],\n          id: state.profileData['id'],\n          lastName1: state.profileData['last_name'],\n          lastName2: ''\n        };\n        entryFound = true\n      } else {\n        entryIndex++;\n      }\n    }\n    \n    // Get studentinfoid\n    this.getStudentProfile(state);\n    this.renderDisplayInfo(this.state.profileInfo);\n    state.id = state.profileData.id;\n    state.mode = 'display';\n\n\n    this.setState(function (previousState, currentProps) {\n      return state;\n    });\n  }\n\n  sameDay(d1, d2) {\n    return d1.getFullYear() === d2.getFullYear() &&\n      d1.getMonth() === d2.getMonth() &&\n      d1.getDate() === d2.getDate();\n  }\n\n  compareTime(time1, time2) {\n    return new Date(time1) > new Date(time2); // true if time1 is later\n  }\n\n  formatData(state) {\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\n    var startDateString = state.startDateString;\n    var endDateString = state.endDateString;\n    var startDate = new Date(startDateString.replace(/-/g, '/'));\n    var endDate = new Date(endDateString.replace(/-/g, '/'));\n    var dateToCompare = startDate;\n    var currEntryDate;\n    var currIdx = 0;\n    var heatMapJson = this.state.heatMapJson;\n\n    if (heatMapJson.length === 0) {\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\n      heatMapJson.push(firstEntry);\n    }\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\n    //dateToCompare always incremented by 1\n    while (this.compareTime(dateToCompare, endDate) === false) {\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\n      if (currIdx > heatMapJson.length - 1) {\n        currIdx = heatMapJson.length - 1;\n      }\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '/'));\n      //identified missing date, so add dummy date entry for missing date\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\n        //else add to very end of json \n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\n        } else {\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\n        }\n      }\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\n      currIdx++;\n     }\n  \n      //Time to convert updated JSON with missing dates added in into\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\n    var processedData = [];\n    var dayOfWeek, weekNum, dayEntry;\n    var currDateObj;\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n    for (var i = 0; i < heatMapJson.length; i++) {\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '/'));\n      dayOfWeek = strDays[currDateObj.getDay()];\n      weekNum = Math.floor(i / 7);\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\n      processedData.push(dayEntry);\n     }\n     return processedData;\n   }\n\n  renderDisplayInfo = () => {\n    let info = [];\n    \n    var fields = this.state.profileInfo;\n    for (var field in fields) {\n      if (fields[field].colInfo.is_showing === true) {\n        var value = 'N/A';\n        if (fields[field].value !== null && fields[field].value !== null !== '') {\n          value = fields[field].value;\n        }\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\n      }\n    }\n    \n\n    return info;\n  }\n\n  renderEditInfo = () => {\n    let info = [];\n\n    for (var entry in this.state.profileInfo) {\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\n\n        var type = this.state.profileInfo[entry].colInfo.type;\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\n        info.push(<br key={entry + 'break'}/>);\n      }\n    }\n    return info;\n  }\n                  \n  getPic = () => {\n        var pic;\n        if (this.state.uploadedPic) {\n          pic = this.state.src;\n        } else {\n          pic = blankPic;\n        }\n        return pic;\n  }\n\n  readImage(evt, state) {\n    evt.preventDefault();\n    this.setState({picUpdated: false});\n    state.profileInfo = JSON.parse(JSON.stringify(state.profileInfoPrelim));\n    state.profileInfoPrelim[5].value = evt.target.files[0];\n    state.profileInfoPrelim[5].updated = true;\n    state.profileInfoPrelim[5].patchPost.photo_value = evt.target.files[0];\n    this.setState(function (previousState, currentProps) {\n      return state;\n    });\n  }\n\n  render() {\n    let permissions = getPermissions()\n    if (permissions.indexOf('view_students') < 0) {\n      return (<Redirect to='/attendance' />);\n    }\n    if (this.state.mode === 'search') {\n      return (\n        <div className='content'>\n          <h1> Key Students </h1>\n          <div className='container-fluid no-padding'>\n            <div className='row justify-content-start'>\n              <div className='col-md-12 to-front top-bottom-padding'>\n                <Autocomplete\n                  suggestions={this.state.suggestionsArray}\n                  handler={this.handler}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    else if (this.state.mode === 'display') {\n      let heatmap = [];\n      if (this.state.canViewHeatmap) {\n        heatmap = <div><h3>Student Attendance</h3>\n          <p>Number of engagements for this individual student in the past month.</p>\n          <p><b>Note:</b> Data is displayed chronologically, with row 1 representing the oldest week and row 5 representing the current week.</p> \n          <Heatmap data={this.formatData(this.state)} heatMapType=\"individualStudent\" /></div>\n      }\n      return (\n        <div className='content'>\n          <h1> Student Profile </h1>\n          <div className='container-fluid no-padding'>\n            <div className='row justify-content-start'>\n              <div className='col-md-4 to-front top-bottom-padding'>\n                <Autocomplete\n                  suggestions={this.state.suggestionsArray}\n                  handler={this.handler}\n                />\n              </div>\n              <div className='col-md-8 top-bottom-padding'>\n                <img id=\"studentPhoto\" src={this.getPic(this.state.parsedInfo)} width=\"196\" height=\"196\" /><br />\n                <ListGroup>\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\n                </ListGroup>\n                <Button variant=\"btn btn-primary\" onClick={this.edit}>\n                  Edit\n                </Button>\n\t\t\t  </div>\n        \t</div>\n\t\t  </div>\n      {heatmap}\n\t\t</div>\n      );\n    }\n    else if (this.state.mode === 'edit') {\n      let deleteButton = []\n      if (this.state.canDeleteStudent) {\n        deleteButton = <ButtonToolbar>\n          <Button bsStyle=\"danger\" onClick={evt => { if (window.confirm('Are you sure you wish to delete this student?')) this.delete(evt, this.state) }}>Delete</Button>\n        </ButtonToolbar>\n      }\n      return (\n        <div className='content'>\n          <h1> Student Profile </h1>\n          <div className='container-fluid no-padding'>\n            <div className='row justify-content-start'>\n              <div className='col-md-4 to-front top-bottom-padding'>\n                <Autocomplete\n                  suggestions={this.state.suggestionsArray}\n                  handler={this.handler}\n                />\n              </div>\n              <div className='col-md-8 top-bottom-padding'>\n                <img id=\"studentPhoto\" src={this.getPic(this.state.parsedInfo)} width=\"196\" height=\"196\" />\n                <p> Upload Student Profile Photo </p>\n                <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br />\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\n                  <FormGroup>\n                    <Label>First Name: </Label>\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\n                    <Label>Last Name: </Label>\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\n                    {this.renderEditInfo(this.state.parsedInfo)}\n                    <br/>\n                    <ButtonToolbar>\n                      <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\n                      <Button bsStyle=\"default\" onClick={this.display}>Cancel</Button>\n                    </ButtonToolbar>\n                    <br />\n                    {deleteButton}\n                  </FormGroup>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Students;\n","// BarChart.js\nimport React from 'react';\nimport {\n    XYPlot,\n    XAxis, // Shows the values on x axis\n    YAxis, // Shows the values on y axis\n    VerticalBarSeries,\n    LabelSeries\n} from 'react-vis';\nimport PropTypes from \"prop-types\";\nclass BarChart extends React.Component {\n\n    static propTypes = {\n        barChartJson: PropTypes.instanceOf(Array),\n    };\n\n    static defaultProps = {\n        data: [],\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: props.data\n        };\n    }\n    render() {\n        const data = this.props.data;\n        const chartWidth = 400;\n        const chartHeight = 350;\n        const chartDomain = [0, 350];\n        return (\n            <XYPlot\n                xType=\"ordinal\"\n                width={chartWidth}\n                height={chartHeight}\n                yDomain={chartDomain}\n            >\n                <XAxis />\n                <YAxis />\n                <VerticalBarSeries\n                    data={data}\n                />\n                <LabelSeries\n                    data={data.map(obj => {\n                        return { ...obj, label: obj.y.toString() }\n                    })}\n                    labelAnchorX=\"middle\"\n                    labelAnchorY=\"text-after-edge\"\n                />\n            </XYPlot>\n        );\n    }\n}\nexport default BarChart;","import React from 'react';\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\n\nclass AttendanceByProgramReport extends React.Component {\n    constructor(props) {\n    \tsuper(props);\n  \n      \tthis.state = {\n\t\t\tactivities: [],\n\t\t\tactivityName: \"\",\n\t\t\tactivityNumber: 0,\n\t\t\tbuildingCSV: false,\n\t\t\tstartDate: \"\",\n\t\t\tendDate: \"\",\n\t\t};\n\n\t\tthis.handleActivityDropdownSelect = this.handleActivityDropdownSelect.bind(this);\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\n\t}\n\n\tasync downloadCSV() {\n\t\tconst { startDate, endDate, activityNumber, activityName } = this.state;\n\t\tif (startDate === \"\" || endDate === \"\") {\n\t\t  return\n\t\t}\n\t\tthis.setState({ buildingCSV: true });\n\t\tconst sheet = []\n\t\tconst columns = ['Date', 'Student Name', 'Student Key']\n\t\tconst title = `${activityName}_${startDate}-${endDate}`\n\t\tconst items = await httpGet(`${protocol}://${domain}/api/reports/byActivityAttendance/?startdate=${startDate}&enddate=${endDate}&activity=${activityNumber}`)\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`)\n\t\t\n\t\t// sheet should look like: \n\t\t// Date | Student Name | Student Key \n\n\t\tfor (let itemIndex in items) {\n\t\t\tlet studentName = \"\";\n\t\t\tlet studentKey = \"\";\n\t\t\tfor (let studentIndex in students) {\n\t\t\t\tif (students[studentIndex].id === items[itemIndex].student_id) {\n\t\t\t\t\tstudentName = students[studentIndex].first_name + \" \" + students[studentIndex].last_name\n\t\t\t\t\tstudentKey = students[studentIndex].student_key\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet row = []\n\t\t\trow[0] = items[itemIndex].date;\n\t\t\trow[1] = studentName\n\t\t\trow[2] = (studentKey === null ? \"N/A\" : studentKey)\n\t\t\tsheet.push(row);\n\t\t}\n\n\t\tawait downloadReportsCSV(sheet, columns, title);\n\t\tthis.setState({ buildingCSV: false });\n\t}\n\n\tupdateStartDate(e) {\n    \tthis.setState({startDate: e.target.value});\n    }\n\n    updateEndDate(e) {\n    \tthis.setState({endDate: e.target.value});\n    }\n\n\tasync componentDidMount() {\n\t\tconst activities = await httpGet(`${protocol}://${domain}/api/activities/`);\n        this.setState({activities: activities, activityName: activities[0].name, activityNumber: activities[0].activity_id});\n\t}\n\n\thandleActivityDropdownSelect(e) {\n\t\tconst { activities } = this.state;\n\t\tlet activityName = e.target.value;\n\t\tlet activityNumber = 0;\n\t\tfor (let key in activities) {\n\t\t\tif (activities[key].name === activityName) {\n\t\t\t\tactivityNumber = activities[key].activity_id;\n\t\t\t}\n\t\t}\n    \tthis.setState({activityName: activityName, activityNumber: activityNumber});\n    }\n\t\n\trender() {\n\t\tconst activityList = this.state.activities.map((item, i) => <option value={item.name} key={`item${i}`}>{item.name}</option>)\n\t\tconst {buildingCSV} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3> Download Attendance by Program </h3>\n\t\t\t\t<p>Downloads a spreadsheet containing all attendance records between two dates for a given program.</p>\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\n                  <FormGroup>\n                    <ControlLabel>Program: </ControlLabel>{' '}\n                    <FormControl componentClass=\"select\" \n                      name=\"type\" \n                      onChange={this.handleActivityDropdownSelect}\n                      defaultValue=\"string\"\n                    >\n                    \t{activityList}\n                    </FormControl>{'  '}\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\n                    <ControlLabel>End Date:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\n                  </FormGroup>\n                </Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AttendanceByProgramReport;\n","import React from 'react';\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\n\nclass NewStudentsReport extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tbuildingCSV: false,\n\t\t\tstartDate: \"\",\n\t\t\tendDate: \"\",\n\t\t};\n\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\n\t}\n\n\tasync downloadCSV() {\n\t\tconst { startDate, endDate } = this.state;\n\t\tif (startDate === \"\" || endDate === \"\") {\n\t\t  return\n\t\t}\n\t\tthis.setState({ buildingCSV: true });\n\t\tconst sheet = [];\n\t\tconst columns = ['Student Name', 'Student Key'];\n\t\tconst title = `New_Students_${startDate}-${endDate}`;\n\t\tconst ids = await httpGet(`${protocol}://${domain}/api/reports/newStudents/?startdate=${startDate}&enddate=${endDate}`);\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`);\n\n\t\t// sheet should look like: \n\t\t// Student Name | Student Key \n\n\t\tfor (let i in ids.newStudents) {\n\t\t\tlet studentName = \"\";\n\t\t\tlet studentKey = \"\";\n\t\t\tfor (let studentIndex in students) {\n\t\t\t\tif (students[studentIndex].id === ids.newStudents[i]) {\n\t\t\t\t\tstudentName = students[studentIndex].first_name + \" \" + students[studentIndex].last_name;\n\t\t\t\t\tstudentKey = students[studentIndex].student_key;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet row = []\n\t\t\trow[0] = studentName;\n\t\t\trow[1] = (studentKey === null ? \"N/A\" : studentKey);\n\t\t\tsheet.push(row);\n\t\t}\n\n\t\tawait downloadReportsCSV(sheet, columns, title);\n\t\tthis.setState({ buildingCSV: false });\n\t}\n\n\tupdateStartDate(e) {\n    \tthis.setState({startDate: e.target.value});\n    }\n\n  \tupdateEndDate(e) {\n  \t\tthis.setState({endDate: e.target.value});\n  \t}\n\n\trender() {\n\t\tconst {buildingCSV} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3> Download New Student Report </h3>\n\t\t\t\t<p>Downloads a spreadsheet containing all students that were checked in for the first time between two dates</p>\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\n                  <FormGroup>\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\n                    <ControlLabel>End Date:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\n                  </FormGroup>\n                </Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NewStudentsReport;\n","import React from 'react';\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\n\nclass MilestoneReport extends React.Component {\n    constructor(props) {\n    \tsuper(props);\n  \n      \tthis.state = {\n\t\t\tmilestone: 30,\n\t\t\tbuildingCSV: false,\n\t\t\tstartDate: \"\",\n\t\t\tendDate: \"\",\n\t\t};\n\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\n\t\tthis.updateMilestone = this.updateMilestone.bind(this);\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\n\t}\n\n\tasync downloadCSV() {\n\t\tconst { startDate, endDate, milestone } = this.state;\n\t\tif (startDate === \"\" || endDate === \"\") {\n\t\t  return\n\t\t}\n\t\tthis.setState({ buildingCSV: true });\n\t\tconst sheet = []\n\t\tconst columns = ['Student Name', 'Student Key']\n\t\tconst title = `Milestone_${milestone}_${startDate}-${endDate}`\n\t\tconst ids = await httpGet(`${protocol}://${domain}/api/reports/milestones/?startdate=${startDate}&enddate=${endDate}&milestone=${milestone}`)\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`)\n\n\t\t// sheet should look like: \n\t\t// Student Name | Student Key \n\n\t\tfor (let i in ids.milestoneStudents) {\n\t\t\tlet studentName = \"\";\n\t\t\tlet studentKey = \"\";\n\t\t\tfor (let j in students) {\n\t\t\t\tif (students[j].id === ids.milestoneStudents[i]) {\n\t\t\t\t\tstudentName = students[j].first_name + \" \" + students[j].last_name\n\t\t\t\t\tstudentKey = students[j].student_key\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet row = []\n\t\t\trow[0] = studentName\n\t\t\trow[1] = (studentKey === null ? \"N/A\" : studentKey)\n\t\t\tsheet.push(row);\n\t\t}\n\n\t\tawait downloadReportsCSV(sheet, columns, title);\n\t\tthis.setState({ buildingCSV: false });\n\t}\n\n\tupdateStartDate(e) {\n    \tthis.setState({startDate: e.target.value});\n    }\n\n\tupdateEndDate(e) {\n    \tthis.setState({endDate: e.target.value});\n\t}\n\t\n\tupdateMilestone(e) {\n\t\t\tthis.setState({milestone: e.target.value});\n\t}\t\n\trender() {\n\t\tconst {buildingCSV} = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3> Download Attendance Milestones </h3>\n\t\t\t\t<p>Downloads a spreadsheet containing a list of students who reached a given attendance milestone between two dates.</p>\n\t\t\t\t<p>For instance, if the milestone was set to 30, the spreadsheet would list the students to attended the Key for their 30th time between two given dates</p>\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\n                  <FormGroup>\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Milestone:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateMilestone} value={this.state.milestone} type=\"number\"/>{'  '}\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\n                    <ControlLabel>End Date:</ControlLabel>{' '}\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\n                  </FormGroup>\n                </Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MilestoneReport;\n","import React, { Component } from 'react';\nimport { Button, ButtonToolbar, Form, ControlLabel, FormControl, FormGroup, Tabs, Tab } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport Heatmap from '../components/Heatmap';\nimport { domain, downloadReportsCSV, getEarlierDate, dateToString, getNextSaturday, getPrevSunday, getPermissions, httpGet, protocol, downloadAttendanceCSV } from '../components/Helpers';\nimport BarChart from './../components/BarChart.js';\nimport AttendanceByProgramReport from '../components/AttendanceByProgramReport';\nimport NewStudentsReport from '../components/NewStudentsReport';\nimport MilestoneReport from '../components/MilestoneReport';\n\nclass Reports extends Component {\n\n    \n    //Initialize state vars that will be reused thru various functions in this component!\n    constructor(props) {\n        super(props);\n        this.state = {\n            startDateStringWeek: \"\",\n            endDateStringWeek: \"\",\n            startDateStringYear: \"\",\n            endDateStringYear: \"\",\n            byHourJson: [],\n            byHourJsonForDownload: [],\n            byDayJson: [],\n            byDayJsonForDownload: [],\n            byDayInPastWeekJson: [],\n            byDayInPastWeekForDownload : [],\n            byDayHeatMap: [],\n            dateOne: \"\",\n            dateTwo: \"\",\n            buildingCSV: false,\n            tab: 1,\n        };\n        //Initialize vars to handle download csv buttons\n        this.downloadHourlyCSV = this.downloadHourlyCSV.bind(this);\n        this.downloadWeeklyCSV = this.downloadWeeklyCSV.bind(this);\n        this.downloadYearlyCSV = this.downloadYearlyCSV.bind(this);\n        this.updateDateOne = this.updateDateOne.bind(this);\n        this.updateDateTwo = this.updateDateTwo.bind(this);\n        this.downloadCSV = this.downloadCSV.bind(this);\n        this.handleTabSelect = this.handleTabSelect.bind(this);\n      }\n\n      async componentDidMount() {\n        try {\n          //Set time range for weekly report (broken down by hour) as the past 7 days\n          var today = getEarlierDate(0);\n          var startDateWeek = getEarlierDate(6);\n          var startDateStringWeek = dateToString(startDateWeek);\n          var endDateStringWeek = dateToString(today);\n          const byHourJson = await httpGet(`${protocol}://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\n          //Set time range for annual report as the last 365 days, \n          //extending back to the preceeding sunday and forward to the following saturday\n          var startDateYear= getEarlierDate(365);\n          startDateYear = getPrevSunday(startDateYear);\n          var startDateStringYear = dateToString(startDateYear);\n          var endDateYear = getNextSaturday(today);\n          var endDateStringYear = dateToString(endDateYear);\n          const byDayJson = await httpGet(`${protocol}://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\n          //Call helper funcs to format the datasets broken down by day and hour\n          await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear, startDateWeek);\n          await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      //Series of functions to handle download csv buttons\n      handleTabSelect(tab) {\n        this.setState({ tab });\n      }\n\n      updateDateOne(e) {\n        this.setState({dateOne: e.target.value});\n      }\n\n      updateDateTwo(e) {\n        this.setState({dateTwo: e.target.value});\n      }\n\n      async downloadCSV() {\n          if (this.state.dateOne === \"\" || this.state.dateTwo === \"\") {\n            return\n          }\n          this.setState({ buildingCSV: true });\n          await downloadAttendanceCSV(this.state.dateOne, this.state.dateTwo)\n          this.setState({ buildingCSV: false });\n      }\n    \n      downloadHourlyCSV() {\n        this.setState({ buildingCSV: true });\n        var title = \"Reports_Hourly_Attendance_\".concat(this.state.startDateStringWeek);\n        title = title.concat(\"_to_\");\n        title = title.concat(this.state.endDateStringWeek);\n        downloadReportsCSV(this.state.byHourJsonForDownload, [\"Date\", \"Hour\", \"# Engagements\"], title);\n        this.setState({ buildingCSV: false });\n      }\n\n      downloadWeeklyCSV() {\n        this.setState({ buildingCSV: true });\n        var title = \"Reports_Daily_Attendance_\".concat(this.state.startDateStringWeek);\n        title = title.concat(\"_to_\");\n        title = title.concat(this.state.endDateStringWeek);\n        downloadReportsCSV(this.state.byDayInPastWeekForDownload, [\"Date\",\"# Engagements\"], title);\n        this.setState({ buildingCSV: false });\n      }\n\n      downloadYearlyCSV() {\n        this.setState({ buildingCSV: true });\n        var title = \"Reports_Annual_Attendance_\".concat(this.state.startDateStringYear);\n        title = title.concat(\"_to_\");\n        title = title.concat(this.state.endDateStringYear);\n        downloadReportsCSV(this.state.byDayJsonForDownload, [\"Date\", \"# Engagements\"], title);\n        this.setState({ buildingCSV: false });\n      }\n\n      //Given two JS Date objects, returns True if the two Dates represent the same day; False otherwise\n      sameDay(d1, d2) {\n        return d1.getFullYear() === d2.getFullYear() &&\n          d1.getMonth() === d2.getMonth() &&\n          d1.getDate() === d2.getDate();\n      }\n\n      //Given two JS Date objects, returns True if first Date (time1) is later\n      compareTime(time1, time2) {\n        return new Date(time1) > new Date(time2);\n      }\n\n      //Format json data from day-of-yr API return into format usable by heatmap (and also add missing entries)\n      formatDayData(state, startDateStringYear, endDateStringYear, startDateWeek) {\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\n        var startDateString = startDateStringYear;\n        var endDateString = endDateStringYear;\n        //Convert timerange to JS Date objects\n        var startDate = new Date(startDateString.replace(/-/g, '/'));\n        var endDate = new Date(endDateString.replace(/-/g, '/'));\n        var dateToCompare = startDate;\n        var currEntryDate;\n        var currIdx = 0;\n        var byDayJson = state;\n        //If the JSON is empty, add in a dummy entry to initialize formatting\n        if(byDayJson.length === 0){\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\n          byDayJson.push(firstEntry);\n        }\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\n        //dateToCompare always incremented by 1\n        while (this.compareTime(dateToCompare, endDate) === false) {\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\n          if (currIdx > byDayJson.length - 1) {\n            currIdx = byDayJson.length - 1;\n          }\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '/'));\n          //identified missing date, so add dummy date entry for missing date\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\n            //else add to very end of json \n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\n            } else {\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\n            }\n          }\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\n          currIdx++;\n        }\n\n        //process jsons into lists of lists and store into state for downloading as csv\n        var byDayJsonForDownload = [];\n        var byDayInPastWeekForDownload = [];\n        var entryAsList;\n        var currDateObj;\n        var startPastWeek = startDateWeek;\n        startPastWeek.setDate(startPastWeek.getDate()-1);\n        var endPastWeek = getEarlierDate(0);\n        for(var i=0; i<byDayJson.length; i++){\n          entryAsList = Object.values(byDayJson[i]);\n          byDayJsonForDownload.push(entryAsList);\n          //add to daily attendance csv if date is within past week\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '/'));\n          if(this.compareTime(currDateObj,startPastWeek) && (this.compareTime(currDateObj,endPastWeek) == false) ){\n            byDayInPastWeekForDownload.push(entryAsList);\n          }\n        }\n\n        //Time to convert updated JSON with missing dates added in into\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\n        var processedData = [];\n        var processedDataAnnual = [];\n        var byDayInPastWeekJson = [];\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\n        var currDateObj;\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        for (var i = 0; i < byDayJson.length; i++) {\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '/'));\n          dayOfWeek = currDateObj.getDay();\n          dayOfWeekConverted = strDays[dayOfWeek];\n          weekNum = Math.floor(i / 7);\n          annualHeatMapEntry = {\"x\": weekNum+1, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\n          processedDataAnnual.push(annualHeatMapEntry);\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\n          processedData.push(dayEntry);\n          //add to daily attendance dataset if date is within past week\n          if(this.compareTime(currDateObj,startPastWeek) && (this.compareTime(currDateObj,endPastWeek) == false) ){\n            byDayInPastWeekJson.push(dayEntry);\n          }\n        }\n          //Set state so these vars can be used elsewhere!\n          this.setState(function (previousState, currentProps) {\n              return {\n                  startDateStringYear: startDateStringYear,\n                  endDateStringYear : endDateStringYear,\n                  byDayJson : processedData,\n                  byDayInPastWeekJson : byDayInPastWeekJson,\n                  byDayJsonForDownload: byDayJsonForDownload,\n                  byDayInPastWeekForDownload : byDayInPastWeekForDownload,\n                  byDayHeatMap: processedDataAnnual\n\n              };\n          });\n        return processedData;\n      }\n\n      //Format json data from hour-of-week API return into format usable by heatmap (and also add missing entries)\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\n        var startDateString = startDateStringWeek;\n        var endDateString = endDateStringWeek;\n        //Convert time range to JS Date objects\n        var startDate = new Date(startDateString.replace(/-/g, '/'));\n        var endDate = new Date(endDateString.replace(/-/g, '/'));\n        var dateToCompare = startDate;\n        var currEntryDate;\n        var currHour;\n        var currIdx = 0;\n        var byHourJson = state;\n        //!!!Set the Key's range of operating hours here!!!!\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\n        //first filter out any entries that have timestamps outside of key operating hours\n        byHourJson = byHourJson.filter(function(entry) {\n          var inValidTimeRange = hourArray.includes(entry.time);\n          return inValidTimeRange === true;\n         });\n        var hourToCompareIdx= 0;\n        var hourToCompare = hourArray[0];\n        //If JSON is empty, add in dummy entry to initialize formatting\n        if(byHourJson.length === 0){\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\n          byHourJson.push(firstEntry);\n        }\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\n        while (this.compareTime(dateToCompare, endDate) === false) {\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\n          if (currIdx > byHourJson.length - 1) {\n            currIdx = byHourJson.length - 1;\n          }\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '/'));\n          currHour = byHourJson[currIdx][\"time\"];\n          //identified missing date, so add dummy date entry for missing date\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\n            //else add to very end of json\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare))){\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\n            } else {\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\n            }\n          }\n          //the two date-hour combos are on SAME DAY, but different hours so add the missing hour as a dummy entry\n          else if(hourToCompare !== currHour){\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\n            //else add to very end of json\n            if (currIdx !== byHourJson.length - 1 || currHour > hourToCompare){\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\n            } else {\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\n            }\n          }\n          //the two date-hour combos match exactly\n          currIdx++;\n          if(hourToCompare === hourArray[hourArray.length-1]){\n           hourToCompare = \"next day\";\n          }\n          //on last hour of the current day, increment date and set hour to first hour\n          if(hourToCompare === \"next day\"){\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\n            hourToCompare = hourArray[0];\n            hourToCompareIdx = 0;\n          }\n          //otherwise just increment the hour\n          else{\n            hourToCompareIdx++;\n            hourToCompare = hourArray[hourToCompareIdx];\n          }\n        }\n        //process json into list of lists and store into state for downloading as csv\n        var byHourJsonForDownload = [];\n        var entryAsList;\n        for(var i=0; i<byHourJson.length; i++){\n          entryAsList = Object.values(byHourJson[i]);\n          byHourJsonForDownload.push(entryAsList);\n        }\n\n        //Time to convert updated JSON with missing date-hour combos added in into\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\n        var processedData = [];\n        var dayOfWeek, hourEntry, hourOfDay;\n        var currDateObj;\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n        for (var i = 0; i < byHourJson.length; i++) {\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '/'));\n          dayOfWeek = strDays[currDateObj.getDay()];\n          hourOfDay = byHourJson[i]['time'].slice(0,5);\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\n          processedData.push(hourEntry);\n        }\n          //Set state so these vars can be used elsewhere!\n          this.setState(function (previousState, currentProps) {\n              return {\n                  startDateStringWeek: startDateStringWeek,\n                  endDateStringWeek: endDateStringWeek,\n                  byHourJson: processedData,\n                  byHourJsonForDownload: byHourJsonForDownload\n              };\n          });\n        return processedData;\n      }\n\n    render() {\n        const buildingCSV = this.state.buildingCSV;\n        const permissions = getPermissions();\n        if (permissions.indexOf('view_reports') < 0) {\n            return (<Redirect to='/attendance'/>);\n        }\n\n        return (\n          <div className=\"content\">\n            <Tabs activeKey={this.state.tab} onSelect={this.handleTabSelect}>\n              <Tab key={1} eventKey={1} title=\"Hourly Attendance\">\n                <h3> Hourly Attendance </h3>\n                <ButtonToolbar style={{ float: 'right'}}>\n                <Button onClick={this.downloadHourlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Hourly'}</Button>\n                </ButtonToolbar>\n                <p> Number of engagements per hour in <b>{this.state.startDateStringWeek}</b> to <b>{this.state.endDateStringWeek}</b>.</p>\n                <p><b>Note:</b> Data is displayed chronologically, with the top row representing the oldest day and the bottom row representing the current day.</p>\n                <Heatmap\n                  data = {this.state.byHourJson}\n                  heatMapType = \"weekly\" />\n              </Tab>\n              <Tab key={2} eventKey={2} title=\"Daily Attendance\">\n                <h3> Daily Attendance </h3>\n                <ButtonToolbar style={{ float: 'right'}}>\n                <Button onClick={this.downloadWeeklyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Daily'}</Button>\n                </ButtonToolbar>\n                <p> Number of engagements per day in the past week from <b>{this.state.startDateStringWeek}</b> to <b>{this.state.endDateStringWeek}</b>.</p>\n                <BarChart data = {this.state.byDayInPastWeekJson}/>\n              </Tab>\n              <Tab key={3} eventKey={3} title=\"Annual Attendance\">\n                <h3> Annual Daily Attendance </h3>\n                <ButtonToolbar style={{ float: 'right'}}>\n                <Button onClick={this.downloadYearlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Annual'}</Button>\n                </ButtonToolbar>\n                <p> Number of engagements per day in the past year from <b>{this.state.startDateStringYear}</b> to <b>{this.state.endDateStringYear}</b>.</p>\n                <p><b>Note:</b> Data is displayed chronologically, with the leftmost column representing the oldest week and the rightmost column representing the current week.</p> \n                <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\n              </Tab>\n              <Tab key={4} eventKey={4} title=\"Multi-Date Attendance Sheet\">\n                <h3> Download Multi-Date Attendance Sheet </h3>\n                <p>Combines and downloads attendance sheets from multiple dates</p>\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\n                  <FormGroup>\n                    <ControlLabel>Start Date</ControlLabel>{' '}\n                    <FormControl onChange={this.updateDateOne} value={this.state.dateOne} type=\"date\"/>{'  '}\n                    <ControlLabel>End Date</ControlLabel>{' '}\n                    <FormControl onChange={this.updateDateTwo} value={this.state.dateTwo} type=\"date\"/>{'  '}\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\n                  </FormGroup>\n                </Form>\n              </Tab>\n              <Tab key={5} eventKey={5} title=\"Attendance By Program\">\n                <AttendanceByProgramReport/>\n              </Tab>\n              <Tab key={6} eventKey={6} title=\"New Students\">\n                <NewStudentsReport/>\n              </Tab>\n              <Tab key={7} eventKey={7} title=\"Attendance Milestones\">\n                <MilestoneReport/>\n              </Tab>\n            </Tabs>\n          </div>\n        );\n    }\n}\n\n// List of students who attended a particular category over a given time span\n// List of students who attended for the first time\n// List of students who have attended the key at least *n* number of times.\n\nexport default Reports;\n","import React from 'react';\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\nimport { httpPost, domain, protocol } from './Helpers';\n\nclass AddUserModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n\t\t\n        this.state = {\n            username: '',\n            first_name: '',\n            last_name: '',\n            password: '',\n            confirmPassword: '',\n            is_active: true,\n            error: false,\n            backendError: false,\n            errorMsg: '',\n            radioOptions: [],\n            show: false,\n            selectedOption: ''\n\t\t}\n\t\t\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\n        this.createRadioOptions = this.createRadioOptions.bind(this);\n    }\n    \n    componentDidUpdate() {\n        if (this.props.show !== this.state.show) {\n            const radioOptions = [];\n            const role_names = Object.keys(this.props.role_ids);\n            for (var index in role_names) {\n                radioOptions.push({label: role_names[index], checked: false})\n            }\n            this.setState({\n                radioOptions: radioOptions,\n                show: this.props.show\n            });\n        }\n    }\n\n\tvalidateInput() {\n\t\tconst { username, password, confirmPassword } = this.state;\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \n            && regex.test(username) && this.state.selectedOption) {\n\t\t\treturn 'success';\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn 'error';\n\t\t}\n    }\n    \n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    handleActiveCheckbox = e => {\n        this.setState({is_active: !this.state.is_active});\n    }\n\n\tcancel() {\n        this.setState({\n            username: '',\n            first_name: '',\n            last_name: '',\n            password: '',\n            confirmPassword: '',\n            selectedOption: '',\n            is_active: true, \n            error: false, \n            backendError: false\n        });\n        this.props.onSubmit();\n\t}\n\n\tsubmit() {\n        const self = this;\n        self.setState({backendError: false});\n        if (self.validateInput() !== 'success') {\n            self.setState({error: true});\n            return;\n        } else {\n            self.setState({error: false});\n        }\n        const groups = [];\n        groups.push(self.props.role_ids[self.state.selectedOption])\n        const body = {username: self.state.username,\n            password: self.state.password,\n            first_name: self.state.first_name,\n            last_name: self.state.last_name,\n            groups: groups,\n            is_active: self.state.is_active};\n        httpPost(`${protocol}://${domain}/api/users/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function(response) {\n                        self.setState({backendError: true, errorMsg: response.error});\n                    });\n                } else {\n                    self.setState({\n                        username: '',\n                        first_name: '',\n                        last_name: '',\n                        password: '',\n                        confirmPassword: '',\n                        selectedOption: '',\n                        is_active: true, \n                        error: false, \n                        errorMsg: '',\n                        backendError: false\n                    });\n                    self.props.onSubmit(result);\n                }\n            })\n    }\n    \n    toggleRadioOptions(index) {\n        const { radioOptions } = this.state;\n        let selectedOption = '';\n        if (!radioOptions[index].checked) {\n            selectedOption = radioOptions[index].label;\n            for (var j in radioOptions) {\n                if (j !== index) {\n                    radioOptions[j].checked = false;\n                } \n            }\n        }\n        radioOptions[index].checked = !radioOptions[index].checked;\n\n        this.setState({\n            selectedOption: selectedOption,\n            radioOptions: radioOptions\n        });\n    }\n    \n    createRadioOptions() {\n        const { radioOptions } = this.state;\n    \n        return radioOptions\n            .map((option, index) =>\n                <div key={index}>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            name=\"userRoles\"\n                            value={option.label}\n                            checked={option.checked}\n                            onChange={this.toggleRadioOptions.bind(this, index)}\n                            className=\"form-check-input\"\n                        />\n                        {option.label}\n                    </label>\n                </div>\n            );\n    }\n\n    render() {\n        let errorMsg = \"Server error. Please try again.\";\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\n            errorMsg = this.state.errorMsg;\n        }\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"text\"\n                                name=\"username\"\n\t\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>First Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"text\"\n                                name=\"first_name\"\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>Last Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"text\"\n                                name=\"last_name\"\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"password\"\n                                name=\"password\"\n\t\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n                            <br />\n                            <ControlLabel>Confirm Password</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"password\"\n                                name=\"confirmPassword\"\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n                            <br />\n                            <ControlLabel>Active</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"checkbox\"\n                                checked={this.state.is_active}\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\n\t\t\t\t\t\t\t/>\n                            <ControlLabel>User Roles</ControlLabel>\n                            {this.createRadioOptions()}\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default AddUserModal;\n","import React from 'react';\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\nimport { httpPatch, httpDelete, domain, protocol } from './Helpers';\n\nclass EditUserModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n        this.state = {\n            row: {},\n            show: false,\n            radioOptions: [],\n            selectedOption: '',\n            first_name: '',\n            last_name: '',\n            is_active: true,\n            password: '',\n            confirmPassword: '',\n            editPassword: false,\n            error: false,\n            backendError: false,\n            errorMsg: ''\n\t\t}\n        \n        this.delete = this.delete.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n        this.createRadioOptions = this.createRadioOptions.bind(this);\n\t}\n\n\tvalidateInput() {\n        const { password, confirmPassword, editPassword } = this.state;\n        if (editPassword) {\n            if (password.length === 0 || password !== confirmPassword) {\n                return 'error';\n            }\n            return 'success';\n        } else {\n\t\t\treturn null;\n\t\t}\n    }\n\n    componentDidUpdate() {\n        if (this.props.row !== this.state.row) {\n            this.setState({\n                row: this.props.row,\n            });\n        }\n        if (this.props.show !== this.state.show) {\n            const radioOptions = [];\n            const role_names = Object.keys(this.props.row.role_ids);\n            const role_ids = this.props.row.role_ids;\n            let selectedOption = '';\n            for (var index in role_names) {\n                const role_name = role_names[index];\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\n                if (checked) {\n                    selectedOption = role_name;\n                }\n                radioOptions.push({label: role_name, checked: checked})\n            }\n            this.setState({\n                radioOptions: radioOptions,\n                selectedOption: selectedOption,\n                show: this.props.show,\n                first_name: this.props.row.first_name,\n                last_name: this.props.row.last_name,\n                is_active: this.props.row.is_active,\n            });\n        }\n    }\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    handleActiveCheckbox = e => {\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[\"is_active\"] = !this.state.is_active;\n            return newState;\n        });\n    }\n\n    handlePasswordButton = e => {\n        this.setState({\n            editPassword: !this.state.editPassword,\n            password: \"\",\n            confirmPassword: \"\"\n        });\n    }\n\n\tcancel() {\n        this.setState({\n            row: this.props.row,\n            error: false,\n            backendError: false,\n            password: '',\n            confirmPassword: '',\n            editPassword: false,\n            errorMsg: false\n        });\n\t\tthis.props.onSubmit();\n    }\n    \n    delete() {\n        const self = this;\n        httpDelete(`${protocol}://${domain}/api/users/?id=${self.state.row.id}`)\n        .then(function (result) {\n            if ('error' in result) {\n                result.response.then(function(response) {\n                    self.setState({backendError: true, errorMsg: response.error});\n                });\n            } else {\n                self.setState({\n                    backendError: false,\n                    errorMsg: ''\n                })\n                self.props.onDelete(self.state.row.id);\n            }\n        });\n    }\n\n\tsubmit() {\n        const self = this;\n        this.setState({\n            backendError: false\n        });\n        if (self.validateInput() === 'error') {\n            this.setState({\n                error: true\n            });\n            return;\n        } else {\n            this.setState({\n                error: false\n            });\n        }\n        let body = {\n            id: self.state.row.id,\n            first_name: self.state.first_name,\n            last_name: self.state.last_name,\n            is_active: self.state.is_active\n        };\n        let groups = [];\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\n        body[\"groups\"] = groups;\n        if (self.state.password !== \"\") {\n            body[\"password\"] = self.state.password;\n        }\n        httpPatch(`${protocol}://${domain}/api/users/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function(response) {\n                        self.setState({backendError: true, errorMsg: response.error});\n                    });\n                } else {\n                    self.setState({\n                        password: '',\n                        confirmPassword: '',\n                        editPassword: false,\n                        backendError: false,\n                        errorMsg: ''\n                    })\n                    self.props.onSubmit(result);\n                }\n            })\n    }\n    \n    toggleRadioOptions(index) {\n        let { radioOptions, selectedOption } = this.state;\n        if (!radioOptions[index].checked) {\n            selectedOption = radioOptions[index].label;\n            for (var j in radioOptions) {\n                if (j !== index) {\n                    radioOptions[j].checked = false;\n                } \n            }\n        }\n        radioOptions[index].checked = !radioOptions[index].checked;\n\n        this.setState({\n            selectedOption: selectedOption,\n            radioOptions: radioOptions\n        });\n    }\n    \n    createRadioOptions() {\n        const { radioOptions } = this.state;\n    \n        return radioOptions\n            .map((option, index) =>\n                <div key={index}>\n                    <label>\n                        <input\n                            type=\"radio\"\n                            name=\"userRoles\"\n                            value={option.label}\n                            checked={option.checked}\n                            onChange={this.toggleRadioOptions.bind(this, index)}\n                            className=\"form-check-input\"\n                        />\n                        {option.label}\n                    </label>\n                </div>\n            );\n    }\n\n    render() {\n        let passwordBlock;\n        if (!this.state.editPassword) {\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\n        } else {\n            passwordBlock = <div>\n                <ControlLabel>Password</ControlLabel>\n                <FormControl\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    placeholder=\"Password\"\n                    onChange={this.handleChange}\n                />\n                <br />\n                <ControlLabel>Confirm Password</ControlLabel>\n                <FormControl\n                    type=\"password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    placeholder=\"Confirm Password\"\n                    onChange={this.handleChange}\n                />\n                <br />\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\n                <br />\n            </div>\n        }\n        let errorMsg = \"Server error. Please try again.\";\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\n            errorMsg = this.state.errorMsg;\n        }\n        return(\n           \n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormGroup\n                            validationState={this.validateInput()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>First Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"text\"\n                                name=\"first_name\"\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>Last Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"text\"\n                                name=\"last_name\"\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>Active</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"checkbox\"\n                                checked={this.state.is_active || false}\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\n\t\t\t\t\t\t\t/>\n                            <br />\n                            <ControlLabel>User Role</ControlLabel>\n                            {this.createRadioOptions()}\n                            {passwordBlock}\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={() => {if (window.confirm('Are you sure you want to save these changes?')) this.submit()}} bsStyle=\"primary\">Save</Button>\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default EditUserModal;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport EditUserModal from './EditUserModal';\n\nclass EditUserButton extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n            showUserModal: false,\n        }\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.closeModalDelete = this.closeModalDelete.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            row: this.props.row,\n        });\n    }\n\n    openModal() {\n        this.setState({showUserModal: true});\n    }\n\n    closeModal(user=null) {\n        if (user !== null) {\n            const updateUser = () => this.props.CustomFunction(user);\n            updateUser();\n        }\n        this.setState({showUserModal: false});\n    }\n\n    closeModalDelete(id=null) {\n        this.setState({showUserModal: false});\n        if (id !== null) {\n            const updateUser = () => this.props.CustomFunction(null, id);\n            updateUser();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.row['id'] !== this.state.row['id']) {\n            this.setState({\n                row: this.props.row,\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\n            </div>\n        )\n    }\n}\n\nexport default EditUserButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass UserHistoryButton extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            row: this.props.row,\n        });\n    }\n\n    componentDidUpdate() {\n        if (this.props.row['id'] !== this.state.row['id']) {\n            this.setState({\n                row: this.props.row,\n            });\n        }\n    }\n\n    handleClick() {\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\n        getUserHistory();\n    }\n\n    render() {\n        return(\n            <div>\n                <Button bsStyle=\"link\" onClick={this.handleClick}>View History</Button>\n            </div>\n        )\n    }\n}\n\nexport default UserHistoryButton;\n","import React from 'react';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport ReactCollapsingTable from 'react-collapsing-table';\n\nclass UserHistory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [],\n            username: ''\n        };\n        this.closeHistoryView = this.closeHistoryView.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            history: this.props.history,\n            username: this.props.username\n        });\n    }\n\n    closeHistoryView() {\n        this.props.closeHistoryView();\n    }\n\n    render() {\n        const rows = this.state.history.map(item =>\n            (\n               {\n                   datetime: item.datetime,\n                   action: item.action,\n                   values: item.values\n               }\n           )\n        ).sort((a, b) => {\n            return b.datetime.localeCompare(a.datetime);\n        });\n\n        const columns = [\n            {\n                accessor: 'datetime',\n                label: 'Date/Time',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'action',\n                label: 'Action',\n                priorityLevel: 2,\n                position: 2,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'values',\n                label: 'Values',\n                priorityLevel: 3,\n                position: 3,\n                minWidth: 100,\n                sortable: false\n            },\n        ];\n\n        return (\n            <div className='content'>\n                <h1>User History: {this.state.username}</h1>\n                <br />\n                <ButtonToolbar style={{ float: 'left' }}>\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\n                </ButtonToolbar>\n                <br/>\n                <ReactCollapsingTable\n                        rows = { rows }\n                        columns = { columns }\n                        column = {'datetime'}\n                        direction = {'descending'}\n                        showPagination={ true }\n                />\n            </div>\n        );\n    }\n}\n\nexport default UserHistory;","import React from 'react';\nimport Autocomplete from './Autocomplete';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport ReactCollapsingTable from 'react-collapsing-table';\nimport AddUserModal from './AddUserModal';\nimport EditUserButton from './EditUserButton';\nimport UserHistoryButton from './UserHistoryButton';\nimport { getPermissions, httpGet, domain, protocol } from './Helpers';\nimport UserHistory from './UserHistory';\n\nclass Users extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showUserModal: false,\n            users: [],\n            showingUsers: [],\n            role_ids: {},\n            role_names: {},\n            suggestionsArray: [],\n            showingAllUsers: true,\n            selectedUserHistory: [],\n            selectedUsername: '',\n            historyView: false\n        };\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.updateRow = this.updateRow.bind(this);\n        this.getFormattedTime = this.getFormattedTime.bind(this);\n        this.handler = this.handler.bind(this);\n        this.showAllUsers = this.showAllUsers.bind(this);\n        this.getUserHistory = this.getUserHistory.bind(this);\n        this.closeHistoryView = this.closeHistoryView.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\n            let suggestionsArray = this.makeSuggestionsArray(users);\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\n            const role_ids = {};\n            const role_names = {};\n            for (var index in roles) {\n                role_ids[roles[index].name] = roles[index].id;\n                role_names[roles[index].id] = roles[index].name;\n            }\n            this.setState({\n                showingUsers: users,\n                users: users,\n                role_ids: role_ids, \n                role_names: role_names,\n                suggestionsArray: suggestionsArray\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async componentDidUpdate() {\n        if (this.props.refreshRoles) {\n            // Re-get users - if a role was deleted, users may have been set to inactive\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\n            const role_ids = {};\n            const role_names = {};\n            for (var index in roles) {\n                role_ids[roles[index].name] = roles[index].id;\n                role_names[roles[index].id] = roles[index].name;\n            }\n            this.setState({\n                showingUsers: users,\n                users: users,\n                role_ids: role_ids, \n                role_names: role_names,\n                showAllUsers: true\n            });\n            this.props.toggleRefreshRoles(false);\n        }\n    }\n\n    makeSuggestionsArray(suggestions) {\n        var array = [];\n        var lastHolder1;\n        var lastHolder2;\n        var tempArray;\n        for (var object in suggestions) {\n          if (suggestions[object]['last_name'].includes(\" \")) {\n            tempArray = suggestions[object]['last_name'].split(\" \");\n            lastHolder1 = tempArray[0];\n            lastHolder2 = tempArray[1];\n          } else {\n            lastHolder1 = suggestions[object]['last_name'];\n            lastHolder2 = \"\";\n          }\n          array.push({\n            firstName: suggestions[object]['first_name'],\n            lastName1: lastHolder1,\n            lastName2: lastHolder2,\n            username: suggestions[object]['username'],\n            id: suggestions[object]['id']\n          });\n        }\n        return array;\n      }\n\n    handler(e, userId) {\n        let showingUsers = [];\n        if (userId !== null) {\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\n        }\n        this.setState({\n            showingUsers: showingUsers,\n            showingAllUsers: false\n        });\n    }\n\n    showAllUsers() {\n        const { users } = this.state;\n        this.setState({\n            showingUsers: users,\n            showingAllUsers: true\n        });\n    }\n\n    openModal() {\n        this.setState({showUserModal: true});\n    }\n\n    closeModal(user=null) {\n        const { suggestionsArray, users } = this.state;\n        let showingUsers = [];\n        if (user !== null) {\n            let newUser = {\n                'id': user.id, \n                'username': user.username, \n                'first_name': user.first_name,\n                'last_name': user.last_name,\n                'groups': user.groups, \n                'last_login': user.last_login,\n                'is_active': user.is_active\n            };\n            let last1;\n            let last2;\n            if (user.last_name.includes(\" \")) {\n                let lastNames = user.last_name.split(\" \");\n                last1 = lastNames[0];\n                last2 = lastNames[1];\n            }\n            else {\n                last1 = user.last_name;\n                last2 = \"\";\n            }\n            suggestionsArray.push({\n                firstName: user.first_name,\n                lastName1: last1,\n                lastName2: last2,\n                username: user.username,\n                id: user.id\n            });\n            users.push(newUser);\n            showingUsers.push(newUser);\n            this.setState({showUserModal: false, users: users, showingUsers: showingUsers, \n                showingAllUsers: false, suggestionsArray: suggestionsArray});\n        } else {\n            this.setState({showUserModal: false});\n        }\n    }\n\n    checkmark(boolean) {\n        if (boolean) {\n            return \"&#10003;\";\n        } else {\n            return \"\";\n        }\n    }\n\n    getFormattedTime(dateString) {\n        if (dateString === null || dateString.length === 0) {\n            return '';\n        }\n        let splitDateTime = dateString.split(\"T\")\n        let date = splitDateTime[0]\n        let time = splitDateTime[1].split(\".\")[0]\n        let splitTime = time.split(\":\")\n        let hours = parseInt(splitTime[0])\n        let ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours === 0 ? 12 : hours\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\n        return formattedTime;\n    }\n\n    getUserRoleNames(groups) {\n        const group_names = [];\n        for (var index in groups) {\n            group_names.push(this.state.role_names[groups[index]]);\n        }\n        return group_names.join(', ');\n    }\n\n    updateRow(user, id = null) {\n        let { users, suggestionsArray } = this.state;\n        let showingUsers = [];\n        let showingAllUsers = false;\n        if (id !== null) {\n            users = users.filter(item => item.id !== id);\n            suggestionsArray = suggestionsArray.filter(item => item.id !== id);\n            showingAllUsers = true;\n            showingUsers = users;\n        } else {\n            users = users.filter(item => item.id !== user.id);\n            suggestionsArray = suggestionsArray.filter(item => item.id !== user.id);\n            let newUser = {\n                'id': user.id,\n                'username': user.username,\n                'first_name': user.first_name,\n                'last_name': user.last_name,\n                'groups': user.groups,\n                'last_login': user.last_login,\n                'is_active': user.is_active\n            };\n            let last1;\n            let last2;\n            if (user.last_name.includes(\" \")) {\n                let lastNames = user.last_name.split(\" \");\n                last1 = lastNames[0];\n                last2 = lastNames[1];\n            }\n            else {\n                last1 = user.last_name;\n                last2 = \"\";\n            }\n            suggestionsArray.push({\n                firstName: user.first_name,\n                lastName1: last1,\n                lastName2: last2,\n                username: user.username,\n                id: user.id\n            });\n            users.push(newUser);\n            showingUsers.push(newUser)\n        }\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers, suggestionsArray: suggestionsArray });\n    }\n\n    getUserHistory(userId, username) {\n        const self = this;\n        httpGet(`${protocol}://${domain}/api/history/?user_id=${userId}`)\n            .then(function (result) {\n                if ('error' in result) {\n                    alert(\"Error: Unknown server error getting user history.\")\n                } else {\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\n                }\n            });\n    }\n\n    closeHistoryView() {\n        this.setState({ historyView: false });\n    }\n\n    render() {\n        const rows = this.state.showingUsers.map(user =>\n            (\n               {\n                   username: user.username,\n                   first_name: user.first_name,\n                   last_name: user.last_name,\n                   name: user.first_name + \" \" + user.last_name,\n                   roles: this.getUserRoleNames(user.groups),\n                   groups: user.groups,\n                   lastLogin: this.getFormattedTime(user.last_login),\n                   isActive: this.checkmark(user.is_active),\n                   id: user.id,\n                   is_active: user.is_active,\n                   role_ids: this.state.role_ids,\n               }\n           )\n        ).sort((a, b) => {\n            return a.username.localeCompare(b.username);\n        });\n        const columns = [\n            {\n                accessor: 'name',\n                label: 'Name',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'username',\n                label: 'Username',\n                priorityLevel: 2,\n                position: 2,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'lastLogin',\n                label: 'Last Login',\n                priorityLevel: 3,\n                position: 3,\n                minWidth: 100,\n                sortable: true\n            },\n            {\n                accessor: 'roles',\n                label: 'User Roles',\n                priorityLevel: 4,\n                position: 4,\n                sortable: true,\n                minWidth: 30\n            },\n            { \n                accessor: 'isActive',\n                label: 'Active',\n                priorityLevel: 5,\n                position: 5,\n                minWidth: 20,\n                sortable: true, \n            },\n            { \n                accessor: 'edit',\n                label: '',\n                priorityLevel: 6,\n                position: 6,\n                CustomComponent: EditUserButton,\n                minWidth: 50,\n                sortable: false, \n            },\n            {\n                accessor: 'history',\n                label: '',\n                priorityLevel: 7,\n                position: 7,\n                CustomComponent: UserHistoryButton,\n                minWidth: 50,\n                sortable: false,\n            }\n        ];\n        const tableCallbacks = { edit: this.updateRow, history: this.getUserHistory }\n        if (this.state.historyView) {\n            return (\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\n            );\n        }\n        const permissions = getPermissions();\n        let buttonToolbar;\n        if (permissions.indexOf('add_user') >= 0) {\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\n                <Button onClick={this.openModal}>New User</Button>\n            </ButtonToolbar>\n        } else {\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\n            </ButtonToolbar>\n        }\n        return (\n            <div className='content'>\n                <AddUserModal role_ids={this.state.role_ids}\n                    show={this.state.showUserModal}\n                    onSubmit={this.closeModal} />\n                <h1>User Management</h1>\n                <br />\n                {buttonToolbar}\n                <Autocomplete\n                    hasUsername={true}\n                    suggestions={this.state.suggestionsArray}\n                    handler={this.handler}\n                />\n                <br/>\n                <ReactCollapsingTable\n                        rows = { rows }\n                        columns = { columns }\n                        column = {'username'}\n                        direction = {'descending'}\n                        showPagination={ true }\n                        callbacks={ tableCallbacks }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Users;","import React from 'react';\nimport { httpPost, domain, protocol } from './Helpers';\nimport { Alert, Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\n\nclass AddRoleModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n\t\t\n        this.state = {\n            show: false,\n            name: '',\n            permission_ids: {},\n            checkboxes: [],\n            error: false,\n            backendError: false,\n            errorMsg: ''\n\t\t}\n\t\t\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.createCheckboxes = this.createCheckboxes.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n    }\n    \n    componentDidUpdate() {\n        if (this.props.show !== this.state.show) {\n            const checkboxes = [];\n            const perm_ids = this.props.permission_ids;\n            const perm_names = Object.keys(perm_ids);\n            for (var index in perm_names) {\n                const perm_name = perm_names[index];\n                let displayName = perm_name;\n                if (displayName.includes('group')) {\n                    displayName = displayName.replace('group', 'user role');\n                } else if (displayName.includes('activity')) {\n                    displayName = displayName.replace('activity', 'programming');\n                } else if (displayName.includes('attendance items')) {\n                    displayName = displayName.replace('attendance items', 'attendance entries');\n                } else if (displayName.includes('student column')) {\n                    displayName = displayName.replace('student column', 'student field');\n                } else if (displayName.includes('city span students')) {\n                    displayName = displayName.replace('city span students', 'student keys');\n                }\n                checkboxes.push({label: perm_name, checked: false, displayName: displayName})\n            }\n            this.setState({\n                permission_ids: this.props.permission_ids,\n                checkboxes: checkboxes,\n                show: this.props.show\n            });\n        }\n    }\n    \n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n\tcancel() {\n        this.setState({name: '', error: false, backendError: false, errorMsg: ''});\n\t\tthis.props.onSubmit();\n\t}\n\n\tsubmit() {\n        const self = this;\n        self.setState({backendError: false});\n        if (self.validateInput() === 'error') {\n            self.setState({error: true});\n            return;\n        } else {\n            self.setState({error: false});\n        }\n        let body = { name: self.state.name };\n        let permissions = [];\n        const checkboxes = self.state.checkboxes;\n        for (var index in checkboxes) {\n            if (checkboxes[index].checked) {\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\n            }\n        }\n        if (permissions.length < 1) {\n            self.setState({error: true});\n            return;\n        }\n        body[\"permissions\"] = permissions;\n        httpPost(`${protocol}://${domain}/api/groups/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function(response) {\n                        self.setState({backendError: true, errorMsg: response.error});\n                    });\n                } else {\n                    self.setState({name: ''});\n                    self.props.onSubmit(result);\n                }\n            })\n    }\n\n    toggleCheckbox(index) {\n        const { checkboxes } = this.state;\n        checkboxes[index].checked = !checkboxes[index].checked;\n\n        this.setState({\n            checkboxes\n        });\n    }\n    \n    createCheckboxes() {\n        const { checkboxes } = this.state;\n    \n        return checkboxes\n            .map((checkbox, index) =>\n                <div key={index}>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={checkbox.checked}\n                            onChange={this.toggleCheckbox.bind(this, index)}\n                        />\n                        {checkbox.displayName}\n                    </label>\n                </div>\n            );\n    }\n\n    validateInput() {\n\t\tconst { name } = this.state;\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\n        if (name.length > 0 && regex.test(name)) {\n            return 'success';\n        } else if (name.length === 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn 'error';\n\t\t}\n    }\n\n    render() {\n        let errorMsg = \"Server error. Please try again.\";\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\n            errorMsg = this.state.errorMsg;\n        }\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormGroup\n                            validationState={this.validateInput()}\n                        >\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"text\"\n                                name=\"name\"\n\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t{this.createCheckboxes()}\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default AddRoleModal;\n","import React from 'react';\nimport { httpDelete, httpPatch, domain, protocol } from './Helpers';\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\n\nclass EditRoleModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n        this.state = {\n            show: false,\n            row: {},\n            permission_ids: {},\n            checkboxes: [],\n            errorMsg: '',\n            error: false\n\t\t}\n        \n        this.delete = this.delete.bind(this);\n\t\tthis.cancel = this.cancel.bind(this);\n        this.submit = this.submit.bind(this);\n        this.createCheckboxes = this.createCheckboxes.bind(this);\n    }\n    \n    componentDidUpdate() {\n        if (this.props.row !== this.state.row) {\n            this.setState({\n                row: this.props.row,\n            });\n        }\n        if (this.props.show !== this.state.show) {\n            const checkboxes = [];\n            const perm_names = Object.keys(this.props.row.permission_ids);\n            const perm_ids = this.props.row.permission_ids;\n            for (var index in perm_names) {\n                const perm_name = perm_names[index];\n                let displayName = perm_name;\n                if (displayName.includes('group')) {\n                    displayName = displayName.replace('group', 'user role');\n                } else if (displayName.includes('activity')) {\n                    displayName = displayName.replace('activity', 'programming');\n                } else if (displayName.includes('attendance items')) {\n                    displayName = displayName.replace('attendance items', 'attendance entries');\n                } else if (displayName.includes('student column')) {\n                    displayName = displayName.replace('student column', 'student field');\n                } else if (displayName.includes('city span students')) {\n                    displayName = displayName.replace('city span students', 'student keys');\n                }\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\n                checkboxes.push({label: perm_name, checked: checked, displayName: displayName})\n            }\n            this.setState({\n                checkboxes: checkboxes,\n                permission_ids: this.props.row.permission_ids,\n                show: this.props.show\n            });\n        }\n    }\n\n      \n    delete() {\n        const self = this;\n        httpDelete(`${protocol}://${domain}/api/groups/?id=${self.state.row.id}`)\n        .then(function (result) {\n            if ('error' in result) {\n                result.response.then(function(response) {\n                    self.setState({error: true, errorMsg: response.error});\n                });\n            } else {\n                self.setState({error: false, errorMsg: ''});\n                self.props.onDelete(self.state.row.id);\n            }\n        });\n    }\n\n\tcancel() {\n        this.setState({\n            row: this.props.row,\n            error: false,\n            errorMsg: ''\n        });\n\t\tthis.props.onSubmit();\n\t}\n\n\tsubmit() {\n        const self = this;\n        let body = { name: self.state.row.name, id: self.state.row.id };\n        let permissions = [];\n        const checkboxes = self.state.checkboxes;\n        for (var index in checkboxes) {\n            if (checkboxes[index].checked) {\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\n            }\n        }\n        body[\"permissions\"] = permissions;\n        httpPatch(`${protocol}://${domain}/api/groups/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function(response) {\n                        self.setState({error: true, errorMsg: response.error});\n                    });\n                } else {\n                    self.setState({error: false, errorMsg: ''});\n                    self.props.onSubmit(result);\n                }\n            })\n    }\n    \n    toggleCheckbox(index) {\n        const { checkboxes } = this.state;\n        checkboxes[index].checked = !checkboxes[index].checked;\n\n        this.setState({\n            checkboxes\n        });\n    }\n\n    createCheckboxes() {\n        const { checkboxes } = this.state;\n    \n        return checkboxes\n            .map((checkbox, index) =>\n                <div key={index}>\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={checkbox.checked}\n                            disabled={this.state.row.name === 'Admin'}\n                            onChange={this.toggleCheckbox.bind(this, index)}\n                        />\n                        {checkbox.displayName}\n                    </label>\n                </div>\n            );\n    }\n\n    render() {\n        let errorMsg = \"Server error. Please try again.\";\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\n            errorMsg = this.state.errorMsg;\n        }\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\n                            {this.createCheckboxes()}\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n                    {this.state.error && <Alert bsStyle='danger'>{errorMsg}</Alert>}\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={() => { if (window.confirm('Are you sure you wish to save these changes? All users with this role will experience these changes.')) this.submit() }} bsStyle=\"primary\">Save</Button>\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role? All users with this role will be set to inactive.')) this.delete() }}\n                        bsStyle=\"danger\"\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default EditRoleModal;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport EditRoleModal from './EditRoleModal';\n\nclass EditRoleButton extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n            showModal: false,\n        }\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.closeModalDelete = this.closeModalDelete.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            row: this.props.row,\n        });\n    }\n\n    openModal() {\n        this.setState({showModal: true});\n    }\n\n    closeModal(role=null) {\n        const { row } = this.state;\n        if (role !== null) {\n            this.props.row.permissions = role.permissions;\n            row.permissions = role.permissions;\n        }\n        this.setState({showModal: false, row: row});\n    }\n\n    closeModalDelete(id=null) {\n        this.setState({showModal: false});\n        if (id !== null) {\n            const deleteRole = () => this.props.CustomFunction(id);\n            deleteRole();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.row['id'] !== this.state.row['id']) {\n            this.setState({\n                row: this.props.row,\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\n            </div>\n        )\n    }\n}\n\nexport default EditRoleButton;\n","import React from 'react';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddRoleModal from './AddRoleModal';\nimport EditRoleButton from './EditRoleButton';\nimport ReactCollapsingTable from 'react-collapsing-table';\nimport { httpGet, domain, protocol } from './Helpers';\n\n\nclass Roles extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            roles: [],\n            permissions_list: {},\n            permission_ids: {},\n        };\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.deleteRole = this.deleteRole.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\n            const permissions_list = await httpGet(`${protocol}://${domain}/api/permissions/`);\n            let permission_ids = {};\n            for (var index in permissions_list) {\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\n            }\n            this.setState({\n                roles: roles,\n                permissions_list: permissions_list,\n                permission_ids: permission_ids,\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    openModal() {\n        this.setState({showModal: true});\n    }\n\n    closeModal(role=null) {\n        const { roles } = this.state;\n        if (role !== null) {\n            roles.push({\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\n            });\n            this.props.toggleRefreshRoles(true);\n        }\n        this.setState({showModal: false, roles: roles});\n    }\n\n    deleteRole(id = null) {\n        let { roles } = this.state;\n        if (id !== null) {\n            roles = roles.filter(item => item.id !== id);\n            this.props.toggleRefreshRoles(true);\n        }\n        this.setState({ roles: roles });\n    }\n\n    render() {\n        const rows = this.state.roles.map(role =>\n            (\n               {\n                   name: role.name,\n                   permissions: role.permissions,\n                   id: role.id,\n                   permission_ids: this.state.permission_ids\n               }\n           )\n        ).sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n\n        const columns = [\n            {\n                accessor: 'name',\n                label: 'Role',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 50,\n                sortable: true\n            },\n            { \n                accessor: 'edit',\n                label: '',\n                priorityLevel: 2,\n                position: 5,\n                CustomComponent: EditRoleButton,\n                minWidth: 50,\n                sortable: false, \n            }\n        ];\n        const tableCallbacks = { edit: this.deleteRole }\n        return (\n            <div className=\"content\">\n                <h1>User Roles</h1>\n                <ButtonToolbar style={{ float: 'right' }}>\n                    <Button onClick={this.openModal}>New User Role</Button>\n                </ButtonToolbar>\n                <AddRoleModal permission_ids={this.state.permission_ids}\n                    show={this.state.showModal}\n                    onSubmit={this.closeModal} />\n                <ReactCollapsingTable\n                        rows = { rows }\n                        columns = { columns }\n                        column = {'name'}\n                        direction = {'descending'}\n                        showPagination={ true }\n                        callbacks = { tableCallbacks }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Roles;","import React from 'react';\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\nimport Autocomplete from './Autocomplete';\n\nclass AssignStudentKeyModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            oldID: 0,\n            student: {},\n            suggestions: [],\n            searchArray: [],\n            match: \"\",\n        }\n\n        this.onCancel = this.onCancel.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.setMatch = this.setMatch.bind(this);\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            oldID: this.props.studentID\n        });\n    }\n\n    async componentDidUpdate() {\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\n            const student = await httpGet(`${protocol}://${domain}/api/students/?id=${this.props.studentID}`);\n            const suggestions = await httpGet(`${protocol}://${domain}/api/suggestions/student/?id=${this.props.studentID}`);\n            const searchArray = this.buildSuggestionsArray();\n\n            this.setState({\n                student: student,\n                suggestions: suggestions,\n                searchArray: searchArray,\n                oldID: this.props.studentID\n            });\n        }\n    }\n\n    buildSuggestionsArray() {\n        let array = []\n        const citySpanStudents = this.props.citySpanStudents;\n        for (var object in this.props.citySpanStudents) {\n            array.push({\n                firstName: citySpanStudents[object].first_name,\n                lastName1: citySpanStudents[object].last_name,\n                lastName2: \"\",\n                id: citySpanStudents[object].student_key\n            });\n        }\n        return array;\n    }\n\n    setMatch(studentKey) {\n        this.setState({match: studentKey});\n    }\n\n    setMatchFromSearch(e, studentKey) {\n        this.setState({match: studentKey});\n    }\n\n    onCancel() {\n        this.setState({student: {}, match: \"\", suggestions: []});\n        this.props.onClose()\n    }\n\n    onSubmit() {\n        // PATCH student\n        if (this.state.match !== \"\") { \n            httpPatch(`${protocol}://${domain}/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\n            this.setState({student: {}, match: \"\", suggestions: []});\n            this.props.onClose(this.props.studentID);\n        }\n    }\n\n    render() {\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n                    <h4>Suggestions:</h4>\n                    {this.state.suggestions.length === 3 \n                    && <ListGroup>\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\n                      </ListGroup>}\n                    <br/>\n                    <h4>Search for match:</h4>\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\n                    <br/>\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default AssignStudentKeyModal;\n","import React from 'react';\nimport { Button, ControlLabel, Form, FormGroup, Label, Well } from 'react-bootstrap';\n\nclass FileUploader extends React.Component {\n\t\n\tconstructor() {\n\t  super();\n\t  this.state = {\n\t\tfile: undefined,\n\t\terror: \"\",\n\t  };\n\n\t  this.submit = this.submit.bind(this);\n\t}\n  \n\thandleChange = event => {\n\t\tconst file = event.target.files[0];\n\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\n\t\t\tthis.setState({\n\t\t\t\tfile: file,\n\t\t\t\terror: \"\"\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terror: \"Invalid file type\"\n\t\t\t})\n\t\t}\n\t};\n\n\tsubmit() {\n\t\tif (this.state.file !== undefined) {\n\t\t\tthis.props.upload(this.state.file);\n\t\t\tthis.setState({file: undefined});\n\t\t\tthis.setState({error: \"Upload Successful\"});\n\t\t}\n\t}\n  \n\trender() {\n\t  return (\n\t\t<Form>\n\t\t\t<FormGroup>\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\n\t\t\t\t<Well style={{display: 'inline-block'}}>\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\n\t\t\t\t</Well>\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\n\t\t\t</FormGroup>\n\t\t\t{this.state.error !== \"Upload Successful\" && <Label bsStyle=\"danger\">{this.state.error}</Label>}\n\t\t\t{this.state.error == \"Upload Successful\" && <Label bsStyle=\"success\">{this.state.error}</Label>}\t\t\n\t\t</Form>\n\t  );\n\t}\n  }\n  \n  export default FileUploader;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass AssignStudentKeyButton extends React.Component {\n    \n\n    render() {\n        return(\n            <div>\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\n            </div>\n        )\n    }\n}\n\nexport default AssignStudentKeyButton;\n","import React from 'react';\nimport { Button, Table, Pagination } from 'react-bootstrap';\n\n/**\n * So, funny story.\n * I tried for a couple of hours to get the table package we used to display a page number stored\n * in state. Documentation suggests its possible, but no luck. So, here's my fix: replacing the table\n * altogether. Unfortunately i think this is necessary because the dumb thing resets every time you\n * update state, which seems like a massive oversight for, you know, any usability.\n * \n * fortunately i had a basic table model that i built for another project, so im adapting that.\n */\n \n\n /**\n  * Takes as props: \n  *     data: []\n  *     headers: ['array', 'of', 'header', 'names']\n  *     onSelect: function for this thing to call when you click the link for a row, which in \n  *               turn supplies the object of the row you clicked as props\n  */\nclass LinkTable extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tpage: 1,\n\t\t\tdata:[],\n\t\t\tpages: {},\n\t\t\theaders: [],\n\t\t}\n\n\t\tthis.buildPages = this.buildPages.bind(this);\n\t\tthis.first = this.first.bind(this);\n\t\tthis.last = this.last.bind(this);\n\t\tthis.prev = this.prev.bind(this);\n\t\tthis.next = this.next.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tconst pages = this.buildPages();\n\n\t\tthis.setState({\n\t\t\tpages: pages,\n\t\t\theaders: this.props.headers ? this.props.headers : []\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (Object.values(this.props.data).length !== Object.values(this.state.data).length) {\n\t\t\tconst pages = this.buildPages();\n\n\t\t\tthis.setState({\n\t\t\t\tpages: pages,\n\t\t\t\tdata: this.props.data,\n\t\t\t\theaders: this.props.headers ? this.props.headers : []\n\t\t\t});\n\t\t}\n\t}\n\n\tbuildPages() {\n\t\tconst pages = {};\n\t\tconst pageSize = 10;\n\t\tlet page = -1;\n\t\tconst data = this.props.data ? this.props.data : []\n\n\t\tif (data.length > pageSize) {\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tif (i % pageSize === 0) { \n\t\t\t\t\tpage++;\n\t\t\t\t\tpages[page] = []\n\t\t\t\t}\n\t\t\t\tpages[page].push(data[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tpages[0] = data\n\t\t}\n\n\t\treturn pages;\n\t}\n\n\tfirst() {\n\t\tthis.setState({page: 1});\n\t}\n\n\tlast() {\n\t\tthis.setState({page: Object.keys(this.state.pages).length});\n\t}\n\n\tnext() {\n\t\tif (Object.keys(this.state.pages).length > this.state.page) {\n\t\t\tthis.setState({page: this.state.page + 1});\n\t\t}\n\t}\n\n\tprev() {\n\t\tif (this.state.page > 1) {\n\t\t\tthis.setState({page: this.state.page - 1});\n\t\t}\n\t}\n\n\tselect = (name) => () => {\n\t\tthis.props.onSelect && this.props.onSelect(name);\n\t}\n\n    render() {\n\t\tconst { headers } = this.props;\n\t\tconst { pages, page } = this.state;\n\n\t\tlet header = [];\n\t\tlet body = [];\n\t\tfor (let i in headers) {\n\t\t\tlet text = headers[i].charAt(0).toUpperCase() + headers[i].slice(1).toLowerCase();\n\t\t\theader.push(<th key={`header${i}`}>{text}</th>)\n\t\t}\n\n\t\tfor (let i in pages[page - 1]) {\n\t\t\tlet columns = [];\n\t\t\tfor (let j in headers) {\n\t\t\t\tif (headers[j] in pages[page - 1][i]) {\n\t\t\t\t\tif (j == 1) { // This is a dumb fix lmao.\n\t\t\t\t\t\tcolumns.push(<td key={`row${j}${i}`}><Button variant=\"link\" onClick={this.select(pages[page - 1][i])}>{pages[page - 1][i][headers[j]]}</Button></td>)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcolumns.push(<td key={`row${j}${i}`}>{pages[page - 1][i][headers[j]]}</td>)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbody.push(<tr key={`row${i}`}>{columns}</tr>)\n\t\t}\n\t\t\n        return (\n            <div >\n                <Table striped hover bordered>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{body}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t\t<Pagination>\n\t\t\t\t\t<Pagination.First onClick={this.first}/>\n\t\t\t\t\t<Pagination.Prev onClick={this.prev}/>\n\t\t\t\t\t<Pagination.Item>{page}</Pagination.Item>\n\t\t\t\t\t<Pagination.Next onClick={this.next}/>\n\t\t\t\t\t<Pagination.Last onClick={this.last}/>\n\t\t\t\t</Pagination>\n            </div>\n        )\n    }\n}\n\nexport default LinkTable;","import React from 'react';\nimport Autocomplete from './Autocomplete';\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\nimport FileUploader from './FileUploader';\nimport LinkTable from './LinkTable';\n\nclass StudentKeys extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            unmatchedStudents: [],\n            citySpanStudents: [],\n            suggestions: [],\n            showModal: false,\n            page: 1,\n            focusedStudent: -1,\n        };\n\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.handleRowClick = this.handleRowClick.bind(this);\n        this.handleSearch = this.handleSearch.bind(this);\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\n        this.processCSV = this.processCSV.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const unmatchedStudents = await httpGet(`${protocol}://${domain}/api/suggestions/unmatchedstudents/`);\n            const citySpanStudents = await httpGet(`${protocol}://${domain}/api/suggestions/cityspanstudents/`);\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\n\n            this.setState({\n                unmatchedStudents: unmatchedStudents,\n                suggestions: suggestions,\n                showModal: false,\n                focusedStudent: -1,\n                citySpanStudents: citySpanStudents\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    handleCSVUpload(csv) {\n        var papa = require('papaparse');\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\n    }\n\n    processCSV(result) {\n        var output = []\n        for (let index in result.data) {\n            let obj = result.data[index];\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\n                continue;\n            } \n            let first = Object.values(obj).includes('First Name') ? obj[\"First Name\"] : obj[\"First\"]\n            let last = Object.values(obj).includes('Last Name') ? obj[\"Last Name\"] : obj[\"Last\"]\n            output.push({first_name: first, last_name: last, student_key: obj[\"Student Key\"]})\n        }\n        httpPatch(`${protocol}://${domain}/api/suggestions/cityspanstudents/`, { \"students\": output })\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function (response) {\n                        alert(response.error);\n                    });\n                }\n            });\n    }\n\n    tmpfail(error, file) {\n        console.log(error);\n    }\n\n    handleRowClick(studentID) {\n        this.setState({\n            focusedStudent: studentID,\n            showModal: true\n        });\n    }\n\n    openModal() {\n        this.setState({\n            showModal: true\n        });\n    }\n\n    closeModal(studentID) {\n        const { unmatchedStudents } = this.state;\n        for (let i = 0; i < unmatchedStudents.length; i++) {\n            if (unmatchedStudents[i].id === studentID) {\n                unmatchedStudents.splice(i, 1);\n            }\n        }\n        this.setState({\n            showModal: false,\n            unmatchedStudents: unmatchedStudents\n        });\n    }\n\n    handleSearch(e, studentID) {\n        this.setState({\n            focusedStudent: studentID,\n            showModal: true\n        });\n    }\n\n    makeSuggestionsArray(suggestions) {\n        var array = [];\n        var lastHolder1;\n        var lastHolder2;\n        var tempArray;\n        for (var object in suggestions) {\n            if (suggestions[object]['last_name'].includes(\" \")) {\n                tempArray = suggestions[object]['last_name'].split(\" \");\n                lastHolder1 = tempArray[0];\n                lastHolder2 = tempArray[1];\n            }\n            else {\n                lastHolder1 = suggestions[object]['last_name'];\n                lastHolder2 = \"\";\n            }\n            array.push({\n                firstName: suggestions[object]['first_name'],\n                lastName1: lastHolder1,\n                lastName2: lastHolder2,\n                id: suggestions[object]['id']\n            });\n        }\n        return array;\n    }\n\n    updateStudents(studentID) {\n        const { unmatchedStudents } = this.state;\n        for (let i = 0; i < unmatchedStudents.length; i++) {\n            if (unmatchedStudents[i].id === studentID) {\n                unmatchedStudents.splice(i, 1);\n            }\n        }\n        this.setState({unmatchedStudents: unmatchedStudents});\n    }\n\n    render() {\n        const rows = this.state.unmatchedStudents.map(student =>\n            (\n               {\n                    'action': \"Assign Student Key\",\n                    name: `${student.first_name} ${student.last_name}`,\n                    id: student.id\n               }\n           )\n        ).sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n\n        const columns = [\n            {\n                accessor: 'name',\n                label: 'Name',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 50,\n                sortable: true\n            },\n            { \n                accessor: 'edit',\n                label: '',\n                priorityLevel: 2,\n                position: 5,\n                CustomComponent: AssignStudentKeyButton,\n                minWidth: 50,\n                sortable: false, \n            }\n        ];\n\n        const { page } = this.state;\n\n        return (\n            <div className=\"content\">\n                <h1>Students Without Student Keys</h1>\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\n                <br/>\n                <div style={{display: 'inline-block'}}>\n                    <Autocomplete\n                        suggestions={this.state.suggestions}\n                        handler={this.handleSearch}\n                    />\n                </div>\n                <div style={{float: 'right'}}>\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\n                </div>\n                <LinkTable data={rows} headers={['name', 'action']} onSelect={(data) => this.handleRowClick(data.id)}/>\n            </div>\n        );\n    }\n}\n\nexport default StudentKeys ;","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass ShiftDownButton extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n        }\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            row: this.props.row,\n        });\n    }\n\n    handleButtonClick() {\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\n        swapOrder();\n    }\n\n    componentDidUpdate() {\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\n            this.setState({\n                row: this.props.row,\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\n            </div>\n        )\n    }\n}\n\nexport default ShiftDownButton;\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nclass ShiftUpButton extends React.Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n        }\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            row: this.props.row,\n        });\n    }\n\n    handleButtonClick() {\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\n        swapOrder();\n    }\n\n    componentDidUpdate() {\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\n            this.setState({\n                row: this.props.row,\n            })\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\n            </div>\n        )\n    }\n}\n\nexport default ShiftUpButton;\n","import React, { Component } from 'react';\nimport { httpPatch, domain, protocol } from './Helpers';\n\nclass ShowActivityCheckbox extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n            checked: false\n        }\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\n    }\n\n    componentDidUpdate() {\n        if (this.props.row.activity_id !== this.state.row.activity_id) {\n            this.setState({ row: this.props.row })\n        } else if (this.props.row.is_showing !== this.state.checked) {\n            this.setState({ checked: this.props.row.is_showing })\n        }\n    }\n\n    toggleCheckbox = () => {\n        let self = this;\n        let { row } = self.state;\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\n                } else {\n                    const updateCheckbox = () => self.props.CustomFunction(result);\n                    updateCheckbox();\n                }\n            });\n    };\n\n    render() {\n        return (\n            <span className=\"checkbox\">\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.state.checked}\n                        onChange={this.toggleCheckbox}\n                    />\n                </label>\n            </span>\n        );\n    }\n}\n\nexport default ShowActivityCheckbox;\n","import React from 'react';\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\nimport { httpPost, domain, protocol } from './Helpers';\n\nclass AddActivityModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n\t\t\n        this.state = {\n            show: false,\n            name: '',\n            type: 'boolean',\n            inUse: true,\n            lastOrdering: 0,\n            error: false,\n            errorMsg: ''\n\t\t}\n\t\t\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n    }\n    \n    componentDidUpdate() {\n        if (this.props.show !== this.state.show) {\n            this.setState({\n                show: this.props.show,\n                lastOrdering: this.props.lastOrdering\n            });\n        }\n    }\n\n    validateInput() {\n\t\tconst { name } = this.state;\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\n        if (name.length > 0 && regex.test(name) && this.state.type) {\n\t\t\treturn 'success';\n\t\t} else if (name.length === 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn 'error';\n\t\t}\n    }\n    \n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n\tcancel() {\n        this.setState({\n            name: '',\n            type: 'boolean',\n            inUse: true,\n            lastOrdering: 0,\n            error: false,\n            errorMsg: ''\n        });\n\t\tthis.props.onSubmit();\n\t}\n\n\tsubmit() {\n        const self = this;\n        if (self.validateInput() !== 'success') {\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\n            self.setState({\n                error: true,\n                errorMsg: errorMsg\n            });\n            return;\n        }\n        let body = {\n            name: self.state.name,\n            ordering: self.state.lastOrdering + 1,\n            is_showing: self.state.inUse,\n            type: self.state.type\n        }\n        httpPost(`${protocol}://${domain}/api/activities/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    if (result['error'] === 400) {\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\n                        self.setState({\n                            error: true,\n                            errorMsg: errorMsg\n                        });\n                        return;\n                    } else {\n                        result.response.then(function(response) {\n                            self.setState({\n                                error: true,\n                                errorMsg: response.error\n                            });\n                        });\n                    }\n                } else {\n                    self.setState({\n                        name: '',\n                        type: 'boolean',\n                        inUse: true,\n                        lastOrdering: 0,\n                        error: false,\n                        errorMsg: ''\n                    });\n                    self.props.onSubmit(result);\n                }\n            })\n    }\n\n    handleCheckbox = e => {\n        this.setState({inUse: !this.state.inUse});\n    }\n    \n    render() {\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n                        <FormGroup\n                            validationState={this.validateInput()}>\n                            <ControlLabel>Activity Name</ControlLabel>\n                            <FormControl\n                                type=\"text\"\n                                name=\"name\"\n                                value={this.state.name}\n                                placeholder=\"Activity Name\"\n                                onChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n                            <br/>\n                            <FormControl componentClass=\"select\" \n                            name=\"type\" \n                            onChange={this.handleChange}\n                            defaultValue={this.state.type}\n                            >\n                                <option value=\"boolean\">Checkbox</option>\n                                <option value=\"string\">Text</option>\n                                <option value=\"float\">Number</option>\n                            </FormControl>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>Currently in Use</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"checkbox\"\n                                checked={this.state.inUse}\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\n                                onChange={this.handleCheckbox}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default AddActivityModal;\n","import React from 'react';\nimport ReactCollapsingTable from 'react-collapsing-table';\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\nimport ShiftDownButton from './ShiftDownButton';\nimport ShiftUpButton from './ShiftUpButton';\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddActivityModal from './AddActivityModal';\n\nclass Activities extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activities: [],\n            showModal: false\n        };\n\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\n        this.createNewActivity = this.createNewActivity.bind(this);\n        this.swapOrder = this.swapOrder.bind(this);\n        this.updateCheckbox = this.updateCheckbox.bind(this);\n        this.getDataTypeName = this.getDataTypeName.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const activities = await httpGet(`${protocol}://${domain}/api/activities/`);\n            this.setState({\n                activities\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    createNewActivity(activity) {\n        return {\n            activity_id: activity.activity_id,\n            type: activity.type,\n            ordering: activity.ordering,\n            is_showing: activity.is_showing,\n            name: activity.name\n        };\n    }\n\n    patchActivityOrder(id1, id2) {\n        let { activities } = this.state;\n        let self = this;\n        let body = { activity_id1: id1, activity_id2: id2 };\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\n        .then(function (result) {\n            if ('error' in result) {\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\n                } else {\n                    let activity1 = result[0];\n                    let activity2 = result[1];\n                    if (activity1 && activity2) {\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\n                        activities.push(self.createNewActivity(activity1));\n                        activities.push(self.createNewActivity(activity2));\n                    }\n                    self.setState({\n                        activities\n                    });\n                }\n            });\n    }\n\n    swapOrder(ordering, direction) {\n        let { activities } = this.state;\n        if (ordering !== null && direction === 'up' && ordering > 1) {\n            let activity1 = activities.find(item => item.ordering === ordering);\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\n            let activity1 = activities.find(item => item.ordering === ordering);\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\n        }\n    }\n\n    updateCheckbox(activity=null) {\n        let self = this;\n        let { activities } = self.state;\n        if (activity !== null) {\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\n            activities.push(this.createNewActivity(activity));\n        }\n        self.setState({\n            activities\n        });\n    }\n\n    getDataTypeName(type) {\n        if (type === 'boolean') {\n            return 'Checkbox';\n        } else if (type === 'string') {\n            return 'Text';\n        } else if (type === 'float') {\n            return 'Number';\n        }\n        return type;\n    }\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    openModal() {\n        this.setState({showModal: true});\n    }\n\n    closeModal(activity=null) {\n        const { activities } = this.state;\n        if (activity !== null) {\n            activities.push(this.createNewActivity(activity));\n        }\n        this.setState({showModal: false, activities: activities});\n    }\n\n    render() {\n        const rows = this.state.activities.map(activity =>\n            (\n               {\n                   name: activity.name,\n                   ordering: activity.ordering,\n                   is_showing: activity.is_showing,\n                   activity_id: activity.activity_id,\n                   type: activity.type,\n                   type_name: this.getDataTypeName(activity.type)\n               }\n           )\n        ).sort((a, b) => {\n            return a.ordering - b.ordering;\n        });\n\n        const columns = [\n            {\n                accessor: 'name',\n                label: 'Activity',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 100,\n                sortable: false\n            },\n            {\n                accessor: 'type_name',\n                label: 'Data Type',\n                priorityLevel: 2,\n                position: 2,\n                minWidth: 100,\n                sortable: false\n            },\n            {\n                accessor: 'is_showing',\n                label: 'Currently in Use',\n                priorityLevel: 3,\n                position: 3,\n                CustomComponent: ShowActivityCheckbox,\n                minWidth: 50,\n                sortable: false\n            },\n            {\n                accessor: 'up',\n                label: '',\n                priorityLevel: 4,\n                position: 4,\n                CustomComponent: ShiftUpButton,\n                minWidth: 100,\n                sortable: false\n            },\n            { \n                accessor: 'down',\n                label: '',\n                priorityLevel: 5,\n                position: 5,\n                CustomComponent: ShiftDownButton,\n                minWidth: 50,\n                sortable: false, \n            }\n        ];\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\n        return (\n            <div className=\"content\">\n                <h1>Programming</h1>\n                <ButtonToolbar style={{ float: 'right'}}>\n                    <Button onClick={this.openModal}>New Activity</Button>\n                </ButtonToolbar>\n                <AddActivityModal show={this.state.showModal}\n                    lastOrdering={this.state.activities.length}\n                    onSubmit={this.closeModal} />\n                <ReactCollapsingTable\n                        rows = { rows }\n                        columns = { columns }\n                        column = {'name'}\n                        direction = {'descending'}\n                        showPagination={ true }\n                        callbacks = { tableCallbacks }\n                />\n            </div>\n        );\n    }\n}\n\nexport default Activities;","import React from 'react';\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\nimport { httpPost, domain, protocol } from './Helpers';\n\nclass AddStudentFieldModal extends React.Component {\n    \n    constructor(props) {\n\t\tsuper(props)\n\t\t\n        this.state = {\n            show: false,\n            name: '',\n            type: 'str',\n            inUse: true,\n            quickAdd: false,\n            error: false,\n            errorMsg: ''\n\t\t}\n\t\t\n\t\tthis.cancel = this.cancel.bind(this);\n\t\tthis.submit = this.submit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.validateInput = this.validateInput.bind(this);\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\n    }\n    \n    componentDidUpdate() {\n        if (this.props.show !== this.state.show) {\n            this.setState({\n                show: this.props.show,\n            });\n        }\n    }\n\n    validateInput() {\n\t\tconst { name } = this.state;\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\n        if (name.length > 0 && regex.test(name) && this.state.type) {\n\t\t\treturn 'success';\n\t\t} else if (name.length === 0) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn 'error';\n\t\t}\n    }\n    \n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n\tcancel() {\n        this.setState({\n            name: '',\n            type: 'str',\n            inUse: true,\n            quickAdd: false,\n            error: false,\n            errorMsg: ''\n        });\n\t\tthis.props.onSubmit();\n\t}\n\n\tsubmit() {\n        const self = this;\n        if (self.validateInput() !== 'success') {\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\n            self.setState({\n                error: true,\n                errorMsg: errorMsg\n            });\n            return;\n        }\n        let body = {\n            name: self.state.name,\n            is_showing: self.state.inUse,\n            quick_add: self.state.quickAdd,\n            type: self.state.type\n        }\n        httpPost(`${protocol}://${domain}/api/student_column/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    if (result['error'] === 400) {\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\n                        self.setState({\n                            error: true,\n                            errorMsg: errorMsg\n                        });\n                        return;\n                    } else {\n                        result.response.then(function(response) {\n                            self.setState({\n                                error: true,\n                                errorMsg: response.error\n                            });\n                        });\n                    }\n                } else {\n                    self.setState({\n                        name: '',\n                        type: 'str',\n                        inUse: true,\n                        quickAdd: false,\n                        error: false,\n                        errorMsg: ''\n                    });\n                    self.props.onSubmit(result);\n                }\n            })\n    }\n\n    handleInUseCheckbox = e => {\n        this.setState({inUse: !this.state.inUse});\n    }\n\n    handleQuickAddCheckbox = e => {\n        this.setState({quickAdd: !this.state.quickAdd});\n    }\n    \n    render() {\n        return(\n            <Modal show={this.props.show}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Create New Student Field</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<form>\n                        <FormGroup\n                            validationState={this.validateInput()}>\n                            <ControlLabel>Field Name</ControlLabel>\n                            <FormControl\n                                type=\"text\"\n                                name=\"name\"\n                                value={this.state.name}\n                                placeholder=\"Field Name\"\n                                onChange={this.handleChange}\n\t\t\t\t\t\t\t/>\n                            <br/>\n                            <FormControl componentClass=\"select\" \n                            name=\"type\" \n                            onChange={this.handleChange}\n                            defaultValue={this.state.type}\n                            >\n                                <option value=\"date\">Date</option>\n                                <option value=\"str\">Text</option>\n                                <option value=\"int\">Number</option>\n                            </FormControl>\n\t\t\t\t\t\t\t<br/>\n                            <ControlLabel>Currently in Use</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"checkbox\"\n                                checked={this.state.inUse}\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\n                                onChange={this.handleInUseCheckbox}\n\t\t\t\t\t\t\t/>\n                            <br/>\n                            <ControlLabel>Show in Quick Add</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n                                type=\"checkbox\"\n                                checked={this.state.quickAdd}\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\n                                onChange={this.handleQuickAddCheckbox}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n        )\n    }\n}\n\nexport default AddStudentFieldModal;\n","import React, { Component } from 'react';\nimport { httpPatch, domain, protocol } from './Helpers';\n\nclass StudentFieldCheckbox extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            row: {},\n            checked: false\n        }\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.accessor === 'is_showing') {\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\n        } else if (this.props.accessor === 'quick_add') {\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.props.row.info_id !== this.state.row.info_id) {\n            this.setState({ row: this.props.row });\n        }\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\n            this.setState({ checked: this.props.row.is_showing });\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\n            this.setState({ checked: this.props.row.quick_add });\n        }\n    }\n\n    toggleCheckbox = () => {\n        let self = this;\n        let { row } = self.state;\n        let body = {info_id: row.info_id};\n        body[self.props.accessor] = !self.state.checked;\n        httpPatch(`${protocol}://${domain}/api/student_column/`, body)\n            .then(function (result) {\n                if ('error' in result) {\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\n                } else {\n                    const updateCheckbox = () => self.props.CustomFunction(result);\n                    updateCheckbox();\n                }\n            });\n    };\n\n    render() {\n        return (\n            <span className=\"checkbox\">\n                <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={this.state.checked}\n                        onChange={this.toggleCheckbox}\n                    />\n                </label>\n            </span>\n        );\n    }\n}\n\nexport default StudentFieldCheckbox;\n","import React from 'react';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport ReactCollapsingTable from 'react-collapsing-table';\nimport AddStudentFieldModal from './AddStudentFieldModal';\nimport { domain, httpGet, protocol } from './Helpers';\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\n\nclass EditStudentFields extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fields: [],\n            showModal: false\n        };\n\n        this.createNewField = this.createNewField.bind(this);\n        this.updateCheckbox = this.updateCheckbox.bind(this);\n        this.getDataTypeName = this.getDataTypeName.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    async componentDidMount() {\n        try {\n            const fields = await httpGet(`${protocol}://${domain}/api/student_column/`);\n            this.setState({\n                fields\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    createNewField(field) {\n        return {\n            info_id: field.info_id,\n            is_showing: field.is_showing,\n            quick_add: field.quick_add,\n            name: field.name,\n            type: field.type,\n        };\n    }\n\n    updateCheckbox(field=null) {\n        let self = this;\n        let { fields } = self.state;\n        if (field !== null) {\n            fields = fields.filter(item => item.info_id !== field.info_id);\n            fields.push(this.createNewField(field));\n        }\n        self.setState({\n            fields\n        });\n    }\n\n    getDataTypeName(type) {\n        if (type === 'date') {\n            return 'Date';\n        } else if (type === 'str') {\n            return 'Text';\n        } else if (type === 'int') {\n            return 'Number';\n        }\n        return type;\n    }\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    openModal() {\n        this.setState({showModal: true});\n    }\n\n    closeModal(field=null) {\n        const { fields } = this.state;\n        if (field !== null) {\n            fields.push(this.createNewField(field));\n        }\n        this.setState({showModal: false, fields: fields});\n    }\n\n    render() {\n        const rows = this.state.fields.map(field =>\n            (\n               {\n                   name: field.name,\n                   is_showing: field.is_showing,\n                   info_id: field.info_id,\n                   type: field.type,\n                   type_name: this.getDataTypeName(field.type),\n                   quick_add: field.quick_add\n               }\n           )\n        ).sort((a, b) => {\n            return a.name.localeCompare(b.name);\n        });\n\n        const columns = [\n            {\n                accessor: 'name',\n                label: 'Field',\n                priorityLevel: 1,\n                position: 1,\n                minWidth: 100,\n                sortable: false\n            },\n            {\n                accessor: 'type_name',\n                label: 'Data Type',\n                priorityLevel: 2,\n                position: 2,\n                minWidth: 100,\n                sortable: false\n            },\n            {\n                accessor: 'is_showing',\n                label: 'Currently in Use',\n                priorityLevel: 3,\n                position: 3,\n                CustomComponent: StudentFieldCheckbox,\n                minWidth: 50,\n                sortable: false\n            },\n            {\n                accessor: 'quick_add',\n                label: 'Show in Quick Add',\n                priorityLevel: 4,\n                position: 4,\n                CustomComponent: StudentFieldCheckbox,\n                minWidth: 50,\n                sortable: false\n            },\n        ];\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\n        return (\n            <div className=\"content\">\n                <h1>Student Profile Fields</h1>\n                <ButtonToolbar style={{ float: 'right'}}>\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\n                </ButtonToolbar>\n                <AddStudentFieldModal show={this.state.showModal}\n                    onSubmit={this.closeModal} />\n                <br/>\n                <br/>\n                <br/>\n                <ReactCollapsingTable\n                        rows = { rows }\n                        columns = { columns }\n                        column = {'name'}\n                        direction = {'descending'}\n                        showPagination={ true }\n                        callbacks = { tableCallbacks }\n                />\n            </div>\n        );\n    }\n}\n\nexport default EditStudentFields;","import React from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport Users from './Users';\nimport Roles from './Roles';\nimport StudentKeys from './StudentKeys';\nimport Activities from './Activities';\nimport EditStudentFields from './EditStudentFields';\nimport { getPermissions } from './Helpers';\n\nclass AdminTabs extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleSelect = this.handleSelect.bind(this);\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\n      this.state = {\n        refreshRoles: false,\n        key: 1\n      };\n    }\n  \n    handleSelect(key) {\n      this.setState({ key });\n    }\n\n    toggleRefreshRoles(boolean) {\n      this.setState({ refreshRoles: boolean });\n    }\n  \n    render() {\n      let tabs = [];\n      let counter = 1;\n      const permissions = getPermissions()\n      if (permissions.indexOf('view_user') >= 0) {\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Management\">\n          <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles} />\n        </Tab>)\n        counter++;\n      }\n      if (permissions.indexOf('view_group') >= 0) {\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Roles\">\n          <Roles toggleRefreshRoles={this.toggleRefreshRoles} />\n        </Tab>)\n        counter++;\n      }\n      if (permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0) {\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Programming\">\n          <Activities />\n        </Tab>)\n        counter++;\n      }\n      if (permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Profile Fields\">\n          <EditStudentFields />\n        </Tab>)\n        counter++;\n      }\n      if (permissions.indexOf('change_cityspanstudents') >= 0) {\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Key Management\">\n          <StudentKeys />\n        </Tab>)\n        counter++;\n      }\n      return (\n        <Tabs\n          activeKey={this.state.key}\n          onSelect={this.handleSelect}\n          id=\"admin-tabs\"\n        >\n          {tabs}\n        </Tabs>\n      );\n    }\n  }\n  \nexport default AdminTabs;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AdminTabs from '../components/AdminTabs';\nimport { getPermissions } from '../components/Helpers';\n\nclass Admin extends React.Component {\n\n    render() {\n        const permissions = getPermissions();\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0 ||\n            permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0 || \n            permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\n            return (\n                <div className='content'>\n                    <AdminTabs />\n                </div>\n            );\n        } else {\n            return (<Redirect to='/attendance'/>);\n        }\n    }\n}\n\nexport default Admin;","import React from 'react';\nimport  { Link } from 'react-router-dom';\nimport { Jumbotron } from 'react-bootstrap';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div className='content'>\n                <Jumbotron> \n                    <div className='content-jumbotron'>\n                        <h1>\n                            404 <small>page not found</small>\n                        </h1>\n                        <p>\n                            The page you're looking for has mysteriously disappeared! \n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\n                        </p>\n                    </div>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router';\nimport Layout from './Layout';\nimport Login from '../views/Login';\nimport Attendance from '../views/Attendance';\nimport Students from '../views/Students';\nimport Reports from '../views/Reports';\nimport Admin from '../views/Admin';\nimport NotFound from '../views/NotFound';\nimport { checkCredentials } from './Helpers';\n\nclass Router extends React.Component {\n\n    render() {\n        return (\n            <Layout show={this.props.location.pathname !== '/'}>\n                <Switch>\n                    <Route exact path='/' component={Login}/>\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in the frontend and calls to the database */}\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\n                    <Route render={() => checkCredentials(NotFound)}/>\n                </Switch>\n            </Layout>\n        );\n    }\n}\n\nexport default withRouter(Router);","import React, { Component } from 'react';\nimport Router from './components/Router';\nimport { history } from './components/Helpers'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router history={history}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}