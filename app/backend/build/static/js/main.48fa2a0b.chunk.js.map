{"version":3,"sources":["images/blank_profile_pic.jpg","components/Layout.js","components/Helpers.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/AssignStudentKeyButton.js","components/FileUploader.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AddStudentFieldModal.js","components/StudentFieldCheckbox.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Layout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","name","history","push","concat","logout","window","localStorage","removeItem","state","activeItem","show","children","permissionString","getItem","permissions","split","nav","indexOf","react_default","a","createElement","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","Component","withRouter","createBrowserHistory","domain","protocol","httpPost","url","body","arguments","length","undefined","token","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","error","json","httpPatch","httpGet","httpDelete","compareActivities","b","ordering","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","sent","sort","abrupt","is_showing","id","activity_id","type","student_id","date","str_value","num_value","first_name","last_name","t0","console","log","require","unparse","fields","data","document","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","downloadReportsCSV","columnHeaders","title","checkCredentials","Redirect","to","partitions","parse","atob","decodeToken","exp","Date","now","getEarlierDate","daysAgo","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","ids","CustomFunction","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","info_id","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","getCurrentDate","fetchAndBuild","month","getMonth","day","getFullYear","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","components_AddStudentModal","ButtonToolbar","float","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArrayStudents","err","heatMapType","dataLength","yArray","x","reverse","toCompare","min","max","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","colorRange","setYArrayRange","margin","es","width","scaleWidth","scaleHeight","top","left","xType","yType","axisType","yDomain","reverseYAxis","orientation","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","mode","edit","studentsJson","studentColumnJson","parseCols","profileInfoPrelim","previousState","currentProps","uploadedPic","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","profileDataPrelim","studentInfoJson","addTypes","returnedState","parseStudentInfo","startDateString","endDateString","heatMapJson","_context2","t1","test","infoId","returnednewState","entryFound","entryIndex","changedField","profileDataUpdated","newValue","posted","updateStudentInfo","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayOfWeek","weekNum","dayEntry","mdyArray","processedData","strDays","floor","y","toString","color","reader","FileReader","onloadend","src","readAsDataURL","files","blankPic","ListGroup","parsedInfo","variant","components_Heatmap","formatData","handleNameChange","confirm","delete","BarChart","obj","labelAnchorX","labelAnchorY","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byHourJsonForDownload","byDayJson","byDayJsonForDownload","byDayHeatMap","downloadHourlyCSV","downloadWeeklyCSV","downloadYearlyCSV","formatDayData","formatHourData","entryAsList","values","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","hourEntry","hourOfDay","components_BarChart","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","role_name","onDelete","passwordBlock","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","newUser","last_login","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","student_key","studentKey","onClose","match_key","paddingTop","match_name","AssignStudentKeyButton","FileUploader","event","file","extension","upload","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","header","output","components_AssignStudentKeyModal","components_FileUploader","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","errorMsg","componentClass","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","quick_add","StudentFieldCheckbox","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","Tabs","activeKey","onSelect","Tab","eventKey","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48fa2a0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    let permissionString = window.localStorage.getItem(\"permissions\");\r\n    let permissions = permissionString === null ? [] : permissionString.split(\",\")\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    let navItems = <Nav>\r\n        {nav}\r\n        <NavItem onClick={this.handleItemClick('reports')}>Reports</NavItem>\r\n      </Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst domain = '127.0.0.1:8000' // 'app.jordansybesma.com' \r\nconst protocol = 'http' // 'https'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else if (response) {\r\n\t\t\treturn response.json()\r\n\t\t} else {\r\n\t\t\treturn // we got nothing back\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n  \r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `${protocol}://${domain}/api/attendance/?day=${startDate}` : `${protocol}://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\tconsole.log(\"sheet: \", sheet);\r\n\tconsole.log(\"columns: \", columns);\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\nfunction downloadReportsCSV(json, columnHeaders, title) {\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columnHeaders,\r\n\t\tdata: json\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `${title}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tif (token === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t} \r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { protocol, domain, downloadReportsCSV, downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain, protocol } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`${protocol}://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\n\nclass ActivityCheckbox extends Component {\n    state = {\n        isChecked: false,\n        value: '',\n        activityType: ''\n    };\n\n    componentDidMount() {\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\n    }\n\n    componentDidUpdate() {\n        if (this.props.checked !== this.state.isChecked) {\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\n        }\n    }\n\n    // Handles checked/unchecked state of checkbox\n    toggleCheckboxChange = () => {\n        const { toggleCheckbox, label } = this.props;\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\n    };\n\n    handleChange = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    render() {\n        const { label } = this.props;\n        const { isChecked, value, activityType } = this.state;\n\n        let checkbox = <span className=\"checkbox\">\n            <label>\n                <input\n                    type=\"checkbox\"\n                    value={label}\n                    checked={isChecked}\n                    onChange={this.toggleCheckboxChange}\n                />\n                {label}\n            </label>\n        </span>;\n\n        if (activityType === 'boolean') {\n            return (<span className=\"checkbox\">\n                {checkbox}\n            </span>)\n        } else{\n            let input;\n            if (activityType === 'string') {\n                input = <input\n                    type=\"text\"\n                    value={value}\n                    name=\"value\"\n                    disabled = {isChecked}\n                    onChange={this.handleChange}\n                />\n            } else {\n                input = <input\n                    type=\"number\"\n                    value={value}\n                    disabled = {isChecked}\n                    name=\"value\"\n                    onChange={this.handleChange}\n                />\n            }\n            return (\n                <span className=\"checkbox\">\n                    {checkbox}\n                    {input}\n                </span>\n            )\n        }\n\n    }\n}\n\nActivityCheckbox.propTypes = {\n    label: PropTypes.string.isRequired,\n    toggleCheckbox: PropTypes.func.isRequired\n};\n\nexport default ActivityCheckbox;\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain, protocol } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`${protocol}://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    self.setState({error: result.error})\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        self.setState({error: result.error})\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: Your changes have not been saved. Please refresh and try again.</Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, domain, protocol } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const { row } = this.state;\r\n        const activities = row['activities']\r\n        const keys = Object.keys(activities);\r\n        let ids = [];\r\n\r\n        // figure out what to delete\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].attendanceItemID !== 0) {\r\n                ids.push(activities[keys[i]].attendanceItemID)\r\n            }\r\n        }\r\n\r\n        // delete the things\r\n        for (let i = 0; i < ids.length; i++) {\r\n            httpDelete(`${protocol}://${domain}/api/attendance/?key=${ids[i]}`);\r\n        }\r\n\r\n        this.props.CustomFunction(row['studentID']);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\tshow: false,\r\n\t\t\tstudentFields: {},\r\n\t\t\tstudentInfo: {},\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n\t\t\tlet studentInfo = {};\r\n\t\t\tconst fieldsList = this.props.studentFields;\r\n\t\t\tlet studentFields = {};\r\n\t\t\tfor (var index in fieldsList) {\r\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\r\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tshow: this.props.show,\r\n\t\t\t\tstudentFields: studentFields,\r\n\t\t\t\tstudentInfo: studentInfo,\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tcreateStudentInfo(name, value, student_id, self) {\r\n\t\tconst {studentFields} = self.state;\r\n\t\tconst field = studentFields[name];\r\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\r\n\t\tif (field.type === 'str') {\r\n\t\t\tbody['str_value'] = value;\r\n\t\t} else if (field.type === 'int') {\r\n\t\t\tbody['int_value'] = value;\r\n\t\t} else if (field.type === 'date') {\r\n\t\t\tbody['date_value'] = value;\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`${protocol}://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tconst student_id = result.id;\r\n\t\t\t\tconst {studentInfo} = self.state;\r\n\t\t\t\tlet infoBody = [];\r\n\t\t\t\tfor (var field in studentInfo) {\r\n\t\t\t\t\tif (studentInfo[field] !== '') {\r\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thttpPost(`${protocol}://${domain}/api/student_info/`, infoBody)\r\n\t\t\t\t\t.then(function (infoResult) {\r\n\t\t\t\t\t\tif ('error' in infoResult) {\r\n\t\t\t\t\t\t\tconsole.log(infoResult);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\t\t\t\tlastName: \"\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcreateStudentInfoFields () {\r\n\t\tlet info = [];\r\n\t\tconst { studentFields } = this.state;\r\n\t\tfor (var fieldName in studentFields) {\r\n\t\t\tconst field = studentFields[fieldName];\r\n\t\t\tlet type;\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\ttype = \"text\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\ttype = \"int\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\ttype = \"date\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\r\n\t\t}\r\n\t\treturn info;\r\n\t}\r\n\r\n\thandleInfoChange = e => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\t\tlet { studentInfo } = this.state;\r\n\t\tstudentInfo[name] = value;\r\n        this.setState({\r\n\t\t\tstudentInfo\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>Search:</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain, protocol } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: ''\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`${protocol}://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            const studentFields = await httpGet(`${protocol}://${domain}/api/student_column/?quick_add=True`)\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                studentFields : studentFields,\r\n                attendanceItems: attendanceItems\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    addStudent(e, studentID) {\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`${protocol}://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            // Add new row to table\r\n            let name = \"\";\r\n            for (var j = 0; j < students.length; j++) {\r\n                if (students[j].id === parseInt(studentID)) {\r\n                    name = `${students[j].first_name} ${students[j].last_name}`;\r\n                    break;\r\n                }\r\n            } \r\n\r\n            let activityList = {};\r\n            for (var j = 0; j < activities.length; j++) {\r\n                const type = activities[j].type;\r\n                const value = type === 'boolean' ? false : '';\r\n                activityList[activities[j].name] = {\r\n                    'activityID': activities[j].activity_id,\r\n                    'attendanceItemID': 0,\r\n                    'value': value,\r\n                    'type': type\r\n                }\r\n            }\r\n            activityList['Key']['value'] = true;\r\n            activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n            const row = {'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities':activityList};\r\n            attendance.push(row);\r\n            self.setState({attendance: attendance});\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.setDateToToday}>Go To Today</Button>\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                    <Button onClick={this.openModal}>New Student</Button> \r\n                </ButtonToolbar>\r\n                <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>\r\n                <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\nimport { HeatmapSeries, XAxis, XYPlot, YAxis } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        // yArray is used for the reports Heatmaps and yArrayStudents is used for students heatmap\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  // Sets the correct range for the y-axis depending on what day the data starts on\r\n    // This assumes the range length will always be exactly one week\r\n  setYArrayRange(data) {\r\n      try {\r\n          if (data[0][\"y\"] === \"Thu\") {\r\n              return [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Fri\") {\r\n              return [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sat\") {\r\n              return [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sun\") {\r\n              return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Mon\") {\r\n              return [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Tue\") {\r\n              return [\"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\",]\r\n          }\r\n          else if (data[0][\"y\"] === \"Wed\") {\r\n              return [\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", ]\r\n          }\r\n      }\r\n      catch(err) {\r\n          console.log(err);\r\n      }\r\n\r\n\r\n  };\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 300;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 350;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(data, heatMapType) {\r\n      for (var i=0; i<data.length; i++) {\r\n          if ((heatMapType === \"individualStudent\"  && data[i][\"color\"] !== 0) ||\r\n              ((heatMapType === \"weekly\" || heatMapType === \"annual\" ) && data[i][\"color\"] !== 0)) {\r\n              return [\"#F5FBFD\", \"teal\"]\r\n          }\r\n      }\r\n      return [\"#F5FBFD\", \"#F5FBFD\"];\r\n  }\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType, yArray) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          try {\r\n              return yArray.map(x => x).reverse();\r\n          }\r\n          catch (err) {\r\n              console.log(err);\r\n          }\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor==0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const heatMapColors = this.colorRange(maxLegendLabel)\r\n    const yArray = this.setYArrayRange(data);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div style={{margin:20}}>\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30, left: 45}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType, yArray)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n            className=\"heatmap-series-example\"\r\n            colorRange = {this.colorRange(data, heatMapType)}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n      </XYPlot>\r\n      </div>\r\n\r\n      <ContinuousColorLegend\r\n      width={300}\r\n      startTitle={minLegendLabel}\r\n      midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n      endTitle= {maxLegendLabel}\r\n      startColor=\"#F5FBFD\"\r\n      endColor={maxHeatMapColor}\r\n      height={100}\r\n      />\r\n</div>\r\n      \r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, Label, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { domain, getEarlierDate, getNextSaturday, getPrevSunday, httpDelete, httpGet, httpPatch, httpPost, protocol } from '../components/Helpers';\r\nimport blankPic from '../images/blank_profile_pic.jpg';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n    };\r\n    this.display = this.display.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`${protocol}://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n      var profileInfo = this.parseCols(studentColumnJson);\r\n      var profileInfoPrelim = this.parseCols(studentColumnJson);\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          profileInfoPrelim: profileInfoPrelim,\r\n          id: null,\r\n\r\n          uploadedPic: false\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'id': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`${protocol}://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      // Deep copy\r\n      state.profileDataPrelim = JSON.parse(JSON.stringify(studentProfileJson));\r\n      \r\n      try {\r\n        const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info?student_id=${state.id}`);\r\n\r\n        if (studentInfoJson.length == 0) {\r\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n          state.profileInfo = this.parseCols(studentColumnJson);\r\n          state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n          state = this.addTypes(state);\r\n        } else {\r\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n          state.profileInfo = this.parseCols(studentColumnJson);\r\n          state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n          state = this.addTypes(state);\r\n\r\n          var returnedState = this.parseStudentInfo(state, studentInfoJson);\r\n          state.profileInfo = returnedState.profileInfo;\r\n          state.profileInfoPrelim = returnedState.profileInfoPrelim;\r\n        }\r\n      } \r\n      catch (e) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        state.profileInfo = this.parseCols(studentColumnJson);\r\n      }\r\n\r\n      var startDate = getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      //var startDateString = dateToString(startDate);\r\n      var startDateString = \"2018-01-28\";\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      //var endDateString = dateToString(endDate);\r\n      var endDateString = \"2018-03-03\";\r\n      state.endDateString = endDateString;\r\n\r\n      const heatMapJson = await httpGet(`${protocol}://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\r\n      state.heatMapJson = heatMapJson;\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info?student_id=${this.state.id}`);\r\n    var returnedState = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: returnedState.profileInfo,\r\n        profileInfoPrelim: returnedState.profileInfoPrelim\r\n      };\r\n    });\r\n  }\r\n\r\n  addTypes(state) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      // Ensure all varchar(x) types get caught as str_value\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfoPrelim[infoId - 1].patchPost = info[item];\r\n\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n      state.profileInfoPrelim[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n      state.profileInfoPrelim[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  search() {\r\n    var preState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  display() {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' });\r\n  }\r\n  \r\n  async delete(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    // Ensure we have studentInfoIds from the most recent POSTs\r\n    var newState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n\r\n    try {\r\n      const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info?student_id=${state.id}`);\r\n\r\n      if (studentInfoJson.length == 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n      } else {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n\r\n        var returnednewState = this.parseStudentInfo(newState, studentInfoJson);\r\n        newState.profileInfo = returnednewState.profileInfo;\r\n      }\r\n    } \r\n    catch (e) {\r\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column`);\r\n      newState.profileInfo = this.parseCols(studentColumnJson);\r\n    }\r\n\r\n    httpDelete(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    \r\n    for (var field in newState.profileInfo) {\r\n      var field = newState.profileInfo[field];\r\n      if (field.studentInfoId) {\r\n        httpDelete(`${protocol}://${domain}/api/student_info/?id=${field.studentInfoId}`, field.patchPost);\r\n      } else {\r\n        console.log(field);\r\n      }\r\n    }\r\n\r\n    // Ensure that the autocomplete removes the entry\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray.splice(entryIndex, 1);\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n    \r\n    this.state.mode = 'search';\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileDataPrelim[changedField] = evt.target.value;\r\n    state.profileDataUpdated = true;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n    \r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfoPrelim[changedField].type;\r\n\r\n    state.profileInfoPrelim[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfoPrelim[changedField].value = newValue;\r\n    state.profileInfoPrelim[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault();\r\n    \r\n    // Deep copy\r\n    state.profileInfo = JSON.parse(JSON.stringify(state.profileInfoPrelim));\r\n\r\n    if (state.profileDataUpdated) {\r\n      state.profileData = JSON.parse(JSON.stringify(state.profileDataPrelim));\r\n      httpPatch(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    }\r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          httpPatch(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost);\r\n        } else {\r\n          httpPost(`${protocol}://${domain}/api/student_info/`, field.patchPost);\r\n          posted = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var studentId = state.id;\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    // var startDateString = \"2018-01-03\";\r\n    //var endDateString = \"2018-01-31\";\r\n    var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var mdyArray;\r\n    var m, d, y;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '\\/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      mdyArray = heatMapJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n      y = mdyArray[0];\r\n      m = mdyArray[1];\r\n      d = mdyArray[2];\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value != null != '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type = this.state.profileInfo[entry].colInfo.type;\r\n        // var type;\r\n        // switch (this.state.profileInfo[entry].type) {\r\n        //   case 'str_value':\r\n        //   type = \"text\";\r\n        //   break;\r\n        //   case 'int_value':\r\n        //   type = \"int\";\r\n        //   break;\r\n        //   case 'date_value':\r\n        //   type = \"date\";\r\n        //   break;\r\n        //   case 'time_value':\r\n        //   type = \"time\";\r\n        //   break;\r\n        // }\r\n        \r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      this.state.profileInfo[5].updated = true;\r\n      this.state.profileInfo[5].patchPost['blob_value'] = reader.result;\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          src: reader.result,\r\n          uploadedPic: true\r\n        };\r\n      });\r\n    }\r\n    reader.readAsDataURL(evt.target.files[0]);\r\n  }\r\n\r\n  render() {\r\n    let permissions = window.localStorage.getItem('permissions').split(',')\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      var pic;\r\n      if (this.state.uploadedPic) {\r\n        pic = this.state.src;\r\n      } else {\r\n        pic = blankPic;\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'> \r\n              <div className='col-md-2 to-front top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={pic} width=\"196\" height=\"196\" /><br /> */}\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"btn btn-primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n          <h3>Student Attendance</h3>\r\n          <p>Number of engagements for this individual student in the past month.</p>\r\n          <Heatmap \r\n            data = {this.formatData(this.state)} heatMapType = \"individualStudent\"/>\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={blankPic} width=\"196\" height=\"196\" /> */}\r\n                {/* <p> Upload Student Profile Photo </p> */}\r\n                {/* <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br /> */}\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    <Label>Last Name: </Label>\r\n                    {/* <Col sm=\"10\"> */}\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {/* </Col> */}\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"default\" onClick={this.display}>Cancel</Button>\r\n                      <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\r\n                    </ButtonToolbar>\r\n                    <br />\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"danger\" onClick={evt => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete(evt, this.state) }}>Delete</Button>\r\n                    </ButtonToolbar>\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { domain, downloadReportsCSV, getEarlierDate, httpGet, protocol } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js';\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byHourJsonForDownload: [],\r\n            byDayJson: [],\r\n            byDayJsonForDownload: [],\r\n            byDayHeatMap: []\r\n        };\r\n        this.downloadHourlyCSV = this.downloadHourlyCSV.bind(this);\r\n        this.downloadWeeklyCSV = this.downloadWeeklyCSV.bind(this);\r\n        this.downloadYearlyCSV = this.downloadYearlyCSV.bind(this);\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //hardcoded date range for testing\r\n          var startDateStringWeek = \"2018-02-08\";\r\n          var endDateStringWeek = \"2018-02-14\";\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          //var startDateWeek = getEarlierDate(6);\r\n          //var startDateStringWeek = dateToString(startDateWeek);\r\n          //var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`${protocol}://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\r\n          console.log(\"By hour:\",byHourJson);\r\n          // var byHourJson = await byHourAttendanceData.json();\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n         // var startDateYear= getEarlierDate(365);\r\n         // startDateYear = getPrevSunday(startDateYear);\r\n          //var startDateStringYear = dateToString(startDateYear);\r\n         // var endDateYear = getNextSaturday(today);\r\n          //var endDateStringYear = dateToString(endDateYear);\r\n          var startDateStringYear = \"2018-02-04\";\r\n          var endDateStringYear = \"2019-02-09\";\r\n          const byDayJson = await httpGet(`${protocol}://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\r\n          // var byDayJson = await byDayAttendanceData.json();\r\n          var dayData = await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear);\r\n          var hourData = await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n\r\n\r\n          //Delete this block later, this is just here for testing\r\n          // var dayData = this.formatDayData(this.state);\r\n          // console.log(\"processed day of year data after setting state: \", this.state.byDayJson);\r\n          // var hourData = this.formatHourData(this.state);\r\n          // console.log(\"processed hour of week data: \", hourData);\r\n\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n      downloadHourlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Hourly_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byHourJsonForDownload, [\"Date\", \"Hour\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadWeeklyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Daily_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload.splice(0,7), [\"Date\",\"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadYearlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Annual_Attendance_\".concat(this.state.startDateStringYear);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringYear);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload, [\"Date\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n\r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byDayJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byDayJson.length; i++){\r\n          entryAsList = Object.values(byDayJson[i]);\r\n          byDayJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          mdyArray = byDayJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          annualHeatMapEntry = {\"x\": weekNum+1, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayJsonForDownload: byDayJsonForDownload,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '\\/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '\\/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '\\/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on same day, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare) && currHour > hourToCompare)){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n        \r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byHourJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byHourJson.length; i++){\r\n          entryAsList = Object.values(byHourJson[i]);\r\n          byHourJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var mdyArray;\r\n        var d, m, y;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '\\/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,2);\r\n          mdyArray = byHourJson[i]['date'].split(/\\s*\\-\\s*/g);\r\n          y = mdyArray[0];\r\n          m = mdyArray[1];\r\n          d = mdyArray[2];\r\n          hourEntry = {\"x\": hourOfDay.concat(\" hrs\"), \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n                  byHourJsonForDownload: byHourJsonForDownload\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n    render() {\r\n        const buildingCSV = this.state.buildingCSV;\r\n        return (\r\n            <div className=\"container py-4\">\r\n                <h1> Reports </h1>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 align-self-center\">\r\n                        <h3> Hourly Attendance </h3>\r\n                        <p> Number of engagements per hour in the past week.</p>\r\n                        <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.downloadHourlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Hourly'}</Button>\r\n                </ButtonToolbar>\r\n                        <Heatmap\r\n                        data = {this.state.byHourJson}\r\n                        heatMapType = \"weekly\" />\r\n\r\n                    </div>\r\n                    <div className='col-md-4 align-self-center'>\r\n                        <h3> Daily Attendance </h3>\r\n                        <p> Number of engagements per day in the past week.</p>\r\n                        <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.downloadWeeklyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Daily'}</Button>\r\n                </ButtonToolbar>\r\n                        <BarChart data = {this.state.byDayJson.slice(0, 7)}/> </div>\r\n                    </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <h3> Annual Daily Attendance </h3>\r\n                    <p> Number of engagements per day in the past year.</p>\r\n                    <ButtonToolbar style={{ float: 'right'}}>\r\n                          <Button onClick={this.downloadYearlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Annual'}</Button>\r\n                        </ButtonToolbar>\r\n                  <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n                </div>\r\n                 </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({backendError: true});\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain, protocol } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    self.setState({\r\n                        backendError: true\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>Server error. Please try again.</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>{this.state.row['name'] === undefined || this.state.row['name'] === ' ' ? \"[User History]\" : this.state.row['name'] }</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { httpGet, domain, protocol } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n        }\r\n        this.setState({showUserModal: false, users: users, showingUsers: showingUsers, showingAllUsers: false});\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users });\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`${protocol}://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, name: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                    <Button onClick={this.openModal}>New User</Button>\r\n                </ButtonToolbar>\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                checkboxes.push({label: perm_name, checked: false})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpDelete, httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: []\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                self.setState({\r\n                    backendError: true\r\n                });\r\n            } else {\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    console.log(result);\r\n                } else {\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role?')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain, protocol } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`${protocol}://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass AssignStudentKeyModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oldID: 0,\r\n            student: {},\r\n            suggestions: [],\r\n            searchArray: [],\r\n            match: \"\",\r\n        }\r\n\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.setMatch = this.setMatch.bind(this);\r\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\r\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            oldID: this.props.studentID\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\r\n            const student = await httpGet(`${protocol}://${domain}/api/students/?id=${this.props.studentID}`);\r\n            const suggestions = await httpGet(`${protocol}://${domain}/api/suggestions/student/?id=${this.props.studentID}`);\r\n            const searchArray = this.buildSuggestionsArray();\r\n\r\n            this.setState({\r\n                student: student,\r\n                suggestions: suggestions,\r\n                searchArray: searchArray,\r\n                oldID: this.props.studentID\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSuggestionsArray() {\r\n        let array = []\r\n        const citySpanStudents = this.props.citySpanStudents;\r\n        for (var object in this.props.citySpanStudents) {\r\n            array.push({\r\n                firstName: citySpanStudents[object].first_name,\r\n                lastName1: citySpanStudents[object].last_name,\r\n                lastName2: \"\",\r\n                id: citySpanStudents[object].student_key\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    setMatch(studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    setMatchFromSearch(e, studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose()\r\n    }\r\n\r\n    onSubmit() {\r\n        // PATCH student\r\n        httpPatch(`${protocol}://${domain}/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose(this.props.studentID);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <h4>Suggestions:</h4>\r\n                    {this.state.suggestions.length === 3 \r\n                    && <ListGroup>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\r\n                      </ListGroup>}\r\n                    <br/>\r\n                    <h4>Search for match:</h4>\r\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\r\n                    <br/>\r\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass AssignStudentKeyButton extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyButton;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, Form, FormGroup, Label, Well } from 'react-bootstrap';\r\n\r\nclass FileUploader extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t  super();\r\n\t  this.state = {\r\n\t\tfile: undefined,\r\n\t\terror: \"\",\r\n\t  };\r\n\r\n\t  this.submit = this.submit.bind(this);\r\n\t}\r\n  \r\n\thandleChange = event => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\r\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\terror: \"\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Invalid file type\"\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tsubmit() {\r\n\t\tif (this.state.file !== undefined) {\r\n\t\t\tthis.props.upload(this.state.file);\r\n\t\t\tthis.setState({file: undefined});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\r\n\t\t\t\t<Well style={{display: 'inline-block'}}>\r\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\r\n\t\t\t\t</Well>\r\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\r\n\t\t\t</FormGroup>\r\n\t\t\t{this.state.error !== \"\" && <Label bsStyle=\"danger\">Error: {this.state.error}</Label>}\r\n\t\t</Form>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default FileUploader;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\r\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport FileUploader from './FileUploader';\r\n\r\nclass StudentKeys extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unmatchedStudents: [],\r\n            citySpanStudents: [],\r\n            suggestions: [],\r\n            showModal: false,\r\n            focusedStudent: -1,\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleRowClick = this.handleRowClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\r\n        this.processCSV = this.processCSV.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const unmatchedStudents = await httpGet(`${protocol}://${domain}/api/suggestions/unmatchedstudents/`);\r\n            const citySpanStudents = await httpGet(`${protocol}://${domain}/api/suggestions/cityspanstudents/`);\r\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\r\n\r\n            this.setState({\r\n                unmatchedStudents: unmatchedStudents,\r\n                suggestions: suggestions,\r\n                showModal: false,\r\n                focusedStudent: -1,\r\n                citySpanStudents: citySpanStudents\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleCSVUpload(csv) {\r\n        var papa = require('papaparse');\r\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\r\n    }\r\n\r\n    processCSV(result) {\r\n        var output = []\r\n        for (let index in result.data) {\r\n            let obj = result.data[index];\r\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\r\n                continue;\r\n            } \r\n            output.push({first_name: obj[\"First Name\"], last_name: obj[\"Last Name\"], student_key: obj[\"Student Key\"]})\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/suggestions/cityspanstudents/`, {\"students\": output});\r\n    }\r\n\r\n    tmpfail(error, file) {\r\n        console.log(error);\r\n    }\r\n\r\n    handleRowClick(studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    closeModal(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({\r\n            showModal: false,\r\n            unmatchedStudents: unmatchedStudents\r\n        });\r\n    }\r\n\r\n    handleSearch(e, studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    updateStudents(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({unmatchedStudents: unmatchedStudents});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.unmatchedStudents.map(student =>\r\n            (\r\n               {\r\n                   name: `${student.first_name} ${student.last_name}`,\r\n                   id: student.id\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: AssignStudentKeyButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Students Without Student Keys</h1>\r\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\r\n                <br/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <Autocomplete\r\n                        suggestions={this.state.suggestions}\r\n                        handler={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div style={{float: 'right'}}>\r\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\r\n                </div>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'edit':this.handleRowClick}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentKeys ;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response) {\r\n                    console.log(response);\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(response);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n            return;\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response[0] || 'error' in response[1]) {\r\n                    console.log(response);\r\n                } else {\r\n                    let activity1 = response[0];\r\n                    let activity2 = response[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Attendance Activities</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentFieldModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\r\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            is_showing: self.state.inUse,\r\n            quick_add: self.state.quickAdd,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n            return;\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'str',\r\n                        inUse: true,\r\n                        quickAdd: false,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleInUseCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n\r\n    handleQuickAddCheckbox = e => {\r\n        this.setState({quickAdd: !this.state.quickAdd});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Field Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Field Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"date\">Date</option>\r\n                                <option value=\"str\">Text</option>\r\n                                <option value=\"int\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleInUseCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <ControlLabel>Show in Quick Add</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.quickAdd}\r\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\r\n                                onChange={this.handleQuickAddCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentFieldModal;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass StudentFieldCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accessor === 'is_showing') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.info_id !== this.state.row.info_id) {\r\n            this.setState({ row: this.props.row });\r\n        }\r\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {info_id: row.info_id};\r\n        body[self.props.accessor] = !self.state.checked;\r\n        httpPatch(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (response) {\r\n                if ('error' in response) {\r\n                    console.log(response);\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(response);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentFieldCheckbox;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddStudentFieldModal from './AddStudentFieldModal';\r\nimport { domain, httpGet, protocol } from './Helpers';\r\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\r\n\r\nclass EditStudentFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.createNewField = this.createNewField.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const fields = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            this.setState({\r\n                fields\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewField(field) {\r\n        return {\r\n            info_id: field.info_id,\r\n            is_showing: field.is_showing,\r\n            quick_add: field.quick_add,\r\n            name: field.name,\r\n            type: field.type,\r\n        };\r\n    }\r\n\r\n    updateCheckbox(field=null) {\r\n        let self = this;\r\n        let { fields } = self.state;\r\n        if (field !== null) {\r\n            fields = fields.filter(item => item.info_id !== field.info_id);\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        self.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'date') {\r\n            return 'Date';\r\n        } else if (type === 'str') {\r\n            return 'Text';\r\n        } else if (type === 'int') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(field=null) {\r\n        const { fields } = this.state;\r\n        if (field !== null) {\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        this.setState({showModal: false, fields: fields});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.fields.map(field =>\r\n            (\r\n               {\r\n                   name: field.name,\r\n                   is_showing: field.is_showing,\r\n                   info_id: field.info_id,\r\n                   type: field.type,\r\n                   type_name: this.getDataTypeName(field.type),\r\n                   quick_add: field.quick_add\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Field',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'quick_add',\r\n                label: 'Show in Quick Add',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n        ];\r\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Student Profile Fields</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\r\n                </ButtonToolbar>\r\n                <AddStudentFieldModal show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditStudentFields;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport StudentKeys from './StudentKeys';\r\nimport Activities from './Activities';\r\nimport EditStudentFields from './EditStudentFields';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          <Tab eventKey={1} title=\"User Management\">\r\n            <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={2} title=\"User Roles\">\r\n            <Roles toggleRefreshRoles={this.toggleRefreshRoles}/>\r\n          </Tab>\r\n          <Tab eventKey={3} title=\"Attendance Activities\">\r\n            <Activities />\r\n          </Tab>\r\n          <Tab eventKey={4} title=\"Student Profile Fields\">\r\n            <EditStudentFields />\r\n          </Tab>\r\n          <Tab eventKey={5} title=\"Student Key Management\">\r\n            <StudentKeys/>\r\n          </Tab>\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        let permissions = window.localStorage.getItem('permissions').split(',')\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\nimport  { Link } from 'react-router-dom';\nimport { Jumbotron } from 'react-bootstrap';\n\nclass NotFound extends React.Component {\n    render() {\n        return (\n            <div className='content'>\n                <Jumbotron> \n                    <div className='content-jumbotron'>\n                        <h1>\n                            404 <small>page not found</small>\n                        </h1>\n                        <p>\n                            The page you're looking for has mysteriously disappeared! \n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\n                        </p>\n                    </div>\n                </Jumbotron>\n            </div>\n        );\n    }\n}\n\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}