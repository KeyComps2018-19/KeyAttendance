{"version":3,"sources":["components/Layout.js","components/Helpers.js","views/Login.js","components/Checkbox.js","components/Checkboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","views/Students.js","views/Reports.js","views/Admin.js","views/Alerts.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","name","history","push","concat","logout","window","localStorage","removeItem","state","activeItem","show","react_default","a","createElement","Navbar","Header","Brand","onClick","Toggle","Collapse","Nav","NavItem","pullRight","children","Component","withRouter","createBrowserHistory","domain","httpPost","url","body","arguments","length","undefined","token","getItem","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","error","json","httpGet","httpDelete","compareActivities","b","ordering","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","sent","sort","abrupt","is_showing","id","activity_id","student_id","date","first_name","last_name","t0","require","unparse","fields","data","document","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","checkCredentials","Redirect","to","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","result","setItem","partitions","split","tokenData","parse","atob","is_staff","centerStyle","textAlign","className","Well","FormGroup","ControlLabel","FormControl","type","placeholder","onChange","Button","block","bsStyle","Alert","React","Checkbox","isChecked","toggleCheckboxChange","_this$props","toggleCheckbox","label","_ref","checked","attendanceItemID","Checkboxes","_this$state","studentID","numChecked","self","activityID","today","Date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_Checkbox","key","Label","AttendanceOptions","deleteRow","ids","CustomFunction","AddStudentModal","firstName","lastName","cancel","onFirstNameChange","onLastNameChange","onSubmit","console","log","Modal","Title","Body","controlId","validationState","validateInput","Feedback","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","toString","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","preventDefault","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","index","react","Form","inline","autoComplete","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","downloadAttendanceCSV","splice","student","rows","item","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","components_AddStudentModal","ButtonToolbar","float","disabled","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Students","mode","studentsJson","profileData","previousState","currentProps","studentId","getStudentProfile","studentProfileJson","_context2","first_attendance","number_visits","Reports","Admin","Alerts","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","match","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.616499c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"isAdmin\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              <Nav>\r\n                  <NavItem onClick={this.handleItemClick('attendance')}>Attendance</NavItem>\r\n                  <NavItem onClick={this.handleItemClick('students')}>Students</NavItem>\r\n                  <NavItem onClick={this.handleItemClick('reports')}>Reports</NavItem>\r\n                  <NavItem onClick={this.handleItemClick('alerts')}>Alerts</NavItem>\r\n                  <NavItem onClick={this.handleItemClick('admin')}>Admin</NavItem>\r\n              </Nav>\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\nconst domain = 'ec2-3-16-129-180.us-east-2.compute.amazonaws.com' // 127.0.0.1:8000\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\twindow.localStorage.removeItem(\"key_credentials\");\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\twindow.localStorage.removeItem(\"key_credentials\");\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\twindow.localStorage.removeItem(\"key_credentials\");\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\twindow.localStorage.removeItem(\"key_credentials\");\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error':response.status}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `http://${domain}/api/attendance/?day=${startDate}` : `http://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`http://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`http://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y'\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tcolumns.push(activityData[i].name)\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\trow[j] = 'N/A' // Needs student keys to be added to the database\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tif (entries[keys[i]][activities[columns[j]].id] != null) {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activities[columns[j]].id];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tif (token === null) {\r\n\t\treturn <Redirect to='/'/>\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\nexport { downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, domain }","import React from 'react';\r\nimport { FormGroup, ControlLabel, FormControl, Well, Button, Alert } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n    \r\n    submit() {\r\n        // Submit username and password to backend\r\n        fetch(`http://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions / role in browser\r\n                    let partitions = result.token.split('.');\r\n                    let tokenData = JSON.parse(atob(partitions[1]));\r\n                    window.localStorage.setItem(\"isAdmin\", tokenData.is_staff);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block onClick={this.submit} bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Checkbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, attendanceItemID: this.props.attendanceItemID ? this.props.attendanceItemID : 0 })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked })\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n\r\n        this.setState(({ isChecked }) => (\r\n            {\r\n                isChecked: !isChecked,\r\n            }\r\n        ));\r\n        \r\n        toggleCheckbox(this.state.isChecked, label)\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked } = this.state;\r\n\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        value={label}\r\n                        checked={isChecked}\r\n                        onChange={this.toggleCheckboxChange}\r\n                    />\r\n                    {label}\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Checkbox;\r\n","import React from 'react';\r\nimport Checkbox from'./Checkbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain } from './Helpers';\r\n\r\nclass Checkboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            numChecked: 0,\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].value === true) {\r\n                numChecked++;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label) => {\r\n        const { activities, studentID, numChecked } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date()\r\n            httpPost(`http://${domain}/api/attendance/`, {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() > 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() > 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            }).then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    self.setState({error: result.error})\r\n                } else {\r\n                    activities[label].value = true;\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`http://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        self.setState({error: result.error})\r\n                    } else {\r\n                        activities[label].value = false;\r\n                        self.setState({activities: activities, numChecked: numChecked - 1})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            boxes.push(\r\n                <Checkbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    checked={activities[keys[i]].value}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: Your changes have not been saved. Please refresh and try again.</Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, domain } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const { row } = this.state;\r\n        const activities = row['activities']\r\n        const keys = Object.keys(activities);\r\n        let ids = [];\r\n\r\n        // figure out what to delete\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].attendanceItemID !== 0) {\r\n                ids.push(activities[keys[i]].attendanceItemID)\r\n            }\r\n        }\r\n\r\n        // delete the things\r\n        for (let i = 0; i < ids.length; i++) {\r\n            httpDelete(`http://${domain}/api/attendance/?key=${ids[i]}`);\r\n        }\r\n\r\n        this.props.CustomFunction(row['studentID']);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, HelpBlock } from 'react-bootstrap';\r\nimport { httpPost, domain } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`http://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.id.toString().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \" +\r\n            suggestion.id.toString()).startsWith(userInput.toLowerCase()) === true)\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>Search:</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder=\"Name or ID\"\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport Checkboxes from '../components/Checkboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain } from '../components/Helpers';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport { downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const today = new Date();\r\n            const students = await httpGet(`http://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`http://${domain}/api/attendance/?day=${`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`}`);\r\n            const activities = await httpGet(`http://${domain}/api/activities/`);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                attendanceItems: attendanceItems\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':true, 'itemID':attendanceItems[i].id};\r\n        }\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                row['activities'][activities[j].name] = {\r\n                    'value': (entries[ids[i]][activities[j].activity_id]) ? true : false,\r\n                    'activityID': activities[j].activity_id,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    addStudent(e, studentID) {\r\n        const { students, attendance, activities } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`http://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() > 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() > 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            // Add new row to table\r\n            let name = \"\";\r\n            for (var j = 0; j < students.length; j++) {\r\n                if (students[j].id === parseInt(studentID)) {\r\n                    name = `${students[j].first_name} ${students[j].last_name}`;\r\n                    break;\r\n                }\r\n            } \r\n\r\n            let activityList = {};\r\n            for (var j = 0; j < activities.length; j++) {\r\n                activityList[activities[j].name] = {\r\n                    'activityID': activities[j].activity_id,\r\n                    'attendanceItemID': 0,\r\n                    'value': false,\r\n                }\r\n            }\r\n            activityList['Key']['value'] = true;\r\n            activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n            const row = {'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities':activityList};\r\n            attendance.push(row);\r\n            self.setState({attendance: attendance});\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    downloadCSV() {\r\n        const today = new Date()\r\n        this.setState({ buildingCSV: true });\r\n        downloadAttendanceCSV(`${today.getFullYear()}-${today.getMonth() + 1}-${today.getDate()}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: Checkboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n        const today = new Date()\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {today.getMonth() + 1}-{today.getDate()}-{today.getFullYear()}</h1>\r\n                <br/>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student</Button>\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                </ButtonToolbar>\r\n                <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","import React, { Component } from 'react';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpGet, domain } from '../components/Helpers';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n      studentsJson: {},\r\n      suggestionsArray: [],\r\n      id: null,\r\n      profileData: {}\r\n    };\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`http://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          studentsJson: studentsJson,\r\n          suggestionsArray: suggestionsArray,\r\n          id: null,\r\n          profileData: {}\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var state = {\r\n      mode: 'display',\r\n      id: studentId\r\n    };\r\n    this.getStudentProfile(state);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`http://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n\t\t\t  \t<div className='container-fluid no-padding'>\r\n\t\t\t\t\t<div className='row justify-content-start'>\r\n\t\t\t\t  \t\t<div className='col-md-12 to-front top-bottom-padding'>\r\n\t\t\t\t\t\t\t<Autocomplete\r\n\t\t\t\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\t\t\t\thandler={this.handler}\r\n\t\t\t\t\t\t  \t/>\r\n\t\t  \t\t\t\t</div>\r\n\t\t  \t\t\t</div>\r\n\t\t  \t\t</div>  \r\n        </div>\r\n      );\r\n    } else if (this.state.mode === 'display') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n\t\t  <div className='container-fluid no-padding'>\r\n  \t\t\t<div className='row justify-content-start'>\r\n\t\t\t  <div className='col-md-4 to-front top-bottom-padding'>\r\n\t\t\t\t  <Autocomplete\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.handler}\r\n\t\t\t\t  />\r\n\t\t\t  </div>\r\n\t\t\t  <div className='col-md-8 top-bottom-padding'>\r\n\t\t\t\tName: {this.state.profileData.first_name} {this.state.profileData.last_name} <br/>\r\n                ID: <Label>N/A</Label> <br/>\r\n                Birthday: xx/xx/xxxx <br/>\r\n                Nickname: N/A <br/>\r\n                Gender: N/A <br/>\r\n                First Attendance: {this.state.profileData.first_attendance} <br/>\r\n                Number of Visits: {this.state.profileData.number_visits} <br/>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n\t\t</div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","import React from 'react';\r\n\r\nclass Reports extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <p>Reports</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React from 'react';\r\n\r\nclass Admin extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <p>Admin</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\n\r\nclass Alerts extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <p>Alerts</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alerts;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport Alerts from '../views/Alerts';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route path='/alerts' render={() => checkCredentials(Alerts)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}