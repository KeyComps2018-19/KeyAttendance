{"version":3,"sources":["components/Helpers.js","components/Layout.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","components/AttendanceByProgramReport.js","components/NewStudentsReport.js","components/MilestoneReport.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/AssignStudentKeyButton.js","components/FileUploader.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AddStudentFieldModal.js","components/StudentFieldCheckbox.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["history","createBrowserHistory","domain","protocol","httpPost","url","body","arguments","length","undefined","token","window","localStorage","getItem","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","logout","push","error","json","httpPatch","httpGet","httpDelete","compareActivities","a","b","ordering","removeItem","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","concat","sent","sort","abrupt","is_showing","name","id","activity_id","type","student_id","date","str_value","num_value","Object","first_name","last_name","t0","require","unparse","fields","data","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","this","downloadReportsCSV","columnHeaders","title","checkCredentials","Component","permissions","react_default","Redirect","to","partitions","split","parse","atob","decodeToken","exp","Date","now","getPermissions","getEarlierDate","daysAgo","console","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Layout","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","state","activeItem","show","children","nav","indexOf","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","withRouter","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","errorCode","errorMsg","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","alert","ids","CustomFunction","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","info_id","log","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","canCreateStudent","mobile","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","refresh","getCurrentDate","innerWidth","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","buttonToolbar","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","ButtonToolbar","float","components_AddStudentModal","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArrayStudents","err","heatMapType","dataLength","yArray","x","reverse","toCompare","min","max","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","setYArrayRange","margin","es","width","scaleWidth","scaleHeight","top","left","xType","yType","axisType","yDomain","reverseYAxis","orientation","colorRange","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","mode","canViewStudentInfo","canViewHeatmap","canDeleteStudent","heatMapJson","edit","studentsJson","studentColumnJson","parseCols","profileInfoPrelim","previousState","currentProps","uploadedPic","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","profileDataPrelim","studentInfoJson","addTypes","returnedState","parseStudentInfo","startDateString","endDateString","_context2","t1","test","infoId","returnednewState","entryFound","entryIndex","changedField","profileDataUpdated","newValue","posted","updateStudentInfo","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayEntry","processedData","strDays","y","floor","color","reader","FileReader","onloadend","src","readAsDataURL","files","heatmap","components_Heatmap","formatData","ListGroup","parsedInfo","variant","deleteButton","confirm","delete","handleNameChange","BarChart","obj","labelAnchorX","labelAnchorY","AttendanceByProgramReport","activityName","activityNumber","handleActivityDropdownSelect","updateEndDate","updateStartDate","items","itemIndex","studentIndex","studentName","studentKey","student_key","componentClass","NewStudentsReport","newStudents","MilestoneReport","milestone","updateMilestone","milestoneStudents","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byHourJsonForDownload","byDayJson","byDayJsonForDownload","byDayInPastWeekJson","byDayInPastWeekForDownload","byDayHeatMap","dateOne","dateTwo","tab","downloadHourlyCSV","downloadWeeklyCSV","downloadYearlyCSV","updateDateOne","updateDateTwo","handleTabSelect","startDateWeek","startDateYear","endDateYear","formatDayData","formatHourData","entryAsList","startPastWeek","endPastWeek","values","currDateObj","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","dayOfWeek","hourEntry","Tabs","activeKey","onSelect","Tab","eventKey","components_BarChart","components_AttendanceByProgramReport","components_NewStudentsReport","components_MilestoneReport","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","role_name","onDelete","passwordBlock","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","last1","last2","newUser","last_login","lastNames","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","displayName","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","onClose","match_key","paddingTop","match_name","AssignStudentKeyButton","FileUploader","event","file","extension","upload","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","header","output","components_AssignStudentKeyModal","components_FileUploader","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","quick_add","StudentFieldCheckbox","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","tabs","counter","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2265ebe.chunk.js","sourcesContent":["//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\n// For local development\r\nconst domain = '127.0.0.1:8000'\r\nconst protocol = 'http'\r\n\r\n// For production server\r\n// const domain = 'app.jordansybesma.com'\r\n// const protocol = 'https'\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else if (response) {\r\n\t\t\treturn response.json()\r\n\t\t} else {\r\n\t\t\treturn // we got nothing back\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n  \r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `${protocol}://${domain}/api/attendance/?day=${startDate}` : `${protocol}://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\nfunction downloadReportsCSV(json, columnHeaders, title) {\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columnHeaders,\r\n\t\tdata: json\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `${title}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tconst permissions = window.localStorage.getItem('permissions')\r\n\tif (token === null || permissions === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t}\r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\nfunction getPermissions() {\r\n\tlet permissions = window.localStorage.getItem('permissions')\r\n\tif (permissions !== null && permissions.length > 0) {\r\n\t\treturn permissions.split(',');\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { getPermissions, protocol, domain, downloadReportsCSV, downloadAttendanceCSV, compareActivities, httpPost, httpPatch, httpGet, httpDelete, checkCredentials, history, withRole, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    const permissions = getPermissions();\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0 \r\n      || permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0\r\n      || permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_reports') >= 0) {\r\n      nav.push(<NavItem key={3} onClick={this.handleItemClick('reports')}>Reports</NavItem>)\r\n    }\r\n    const navItems = <Nav>{nav}</Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain, protocol } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`${protocol}://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ActivityCheckbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n        value: '',\r\n        activityType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\r\n    };\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked, value, activityType } = this.state;\r\n\r\n        let checkbox = <span className=\"checkbox\">\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={label}\r\n                    checked={isChecked}\r\n                    onChange={this.toggleCheckboxChange}\r\n                />\r\n                {label}\r\n            </label>\r\n        </span>;\r\n\r\n        if (activityType === 'boolean') {\r\n            return (<span className=\"checkbox\">\r\n                {checkbox}\r\n            </span>)\r\n        } else{\r\n            let input;\r\n            if (activityType === 'string') {\r\n                input = <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    name=\"value\"\r\n                    disabled = {isChecked}\r\n                    onChange={this.handleChange}\r\n                />\r\n            } else {\r\n                input = <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    disabled = {isChecked}\r\n                    name=\"value\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            }\r\n            return (\r\n                <span className=\"checkbox\">\r\n                    {checkbox}\r\n                    {input}\r\n                </span>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nActivityCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ActivityCheckbox;\r\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain, protocol } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            errorMsg: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`${protocol}://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    const errorCode = result.error;\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: errorCode, errorMsg: response.error})\r\n                    });\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1, error: '', errorMsg: ''})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        const errorCode = result.error;\r\n                        result.response.then(function (response) {\r\n                            self.setState({ error: errorCode, errorMsg: response.error })\r\n                        });\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1, error: '', errorMsg: ''})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        let errorMsg = \"Your changes have not been saved. Please refresh and try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: {errorMsg} </Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, getPermissions, domain, protocol } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('delete_attendanceitems') < 0) {\r\n            alert('Error: You are not authorized to delete attendance items');\r\n        } else {\r\n            const { row } = this.state;\r\n            const activities = row['activities']\r\n            const keys = Object.keys(activities);\r\n            let ids = [];\r\n\r\n            // figure out what to delete\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (activities[keys[i]].attendanceItemID !== 0) {\r\n                    ids.push(activities[keys[i]].attendanceItemID)\r\n                }\r\n            }\r\n\r\n            // delete the things\r\n            for (let i = 0; i < ids.length; i++) {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${ids[i]}`);\r\n            }\r\n\r\n            this.props.CustomFunction(row['studentID']);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\tshow: false,\r\n\t\t\tstudentFields: {},\r\n\t\t\tstudentInfo: {},\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n\t\t\tlet studentInfo = {};\r\n\t\t\tconst fieldsList = this.props.studentFields;\r\n\t\t\tlet studentFields = {};\r\n\t\t\tfor (var index in fieldsList) {\r\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\r\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tshow: this.props.show,\r\n\t\t\t\tstudentFields: studentFields,\r\n\t\t\t\tstudentInfo: studentInfo,\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tcreateStudentInfo(name, value, student_id, self) {\r\n\t\tconst {studentFields} = self.state;\r\n\t\tconst field = studentFields[name];\r\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\r\n\t\tif (field.type === 'str') {\r\n\t\t\tbody['str_value'] = value;\r\n\t\t} else if (field.type === 'int') {\r\n\t\t\tbody['int_value'] = value;\r\n\t\t} else if (field.type === 'date') {\r\n\t\t\tbody['date_value'] = value;\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`${protocol}://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tconst student_id = result.id;\r\n\t\t\t\tconst {studentInfo} = self.state;\r\n\t\t\t\tlet infoBody = [];\r\n\t\t\t\tfor (var field in studentInfo) {\r\n\t\t\t\t\tif (studentInfo[field] !== '') {\r\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thttpPost(`${protocol}://${domain}/api/student_info/`, infoBody)\r\n\t\t\t\t\t.then(function (infoResult) {\r\n\t\t\t\t\t\tif ('error' in infoResult) {\r\n\t\t\t\t\t\t\tconsole.log(infoResult);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\t\t\t\tlastName: \"\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcreateStudentInfoFields () {\r\n\t\tlet info = [];\r\n\t\tconst { studentFields } = this.state;\r\n\t\tfor (var fieldName in studentFields) {\r\n\t\t\tconst field = studentFields[fieldName];\r\n\t\t\tlet type;\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\ttype = \"text\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\ttype = \"int\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\ttype = \"date\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\r\n\t\t}\r\n\t\treturn info;\r\n\t}\r\n\r\n\thandleInfoChange = e => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\t\tlet { studentInfo } = this.state;\r\n\t\tstudentInfo[name] = value;\r\n        this.setState({\r\n\t\t\tstudentInfo\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>{this.props.label === undefined ? 'Search:' : this.props.label}</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain, protocol } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { getPermissions, downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: '',\r\n            canCreateStudent: false,\r\n            mobile: false,\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate(), mobile: (window.innerWidth < 768)})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`${protocol}://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            const permissions = getPermissions()\r\n            let studentFields = [];\r\n            let canCreateStudent = false;\r\n            if (permissions.indexOf('add_students') >= 0) {\r\n                studentFields = await httpGet(`${protocol}://${domain}/api/student_column/?quick_add=True`);\r\n                canCreateStudent = true;\r\n            }\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                studentFields : studentFields,\r\n                attendanceItems: attendanceItems,\r\n                canCreateStudent: canCreateStudent\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        console.log(attendanceItems);\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n        console.log(entries);\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    async addStudent(e, studentID) {\r\n        // Refresh attendance page.\r\n        await this.fetchAndBuild();\r\n\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`${protocol}://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n            } else {\r\n                // Add new row to table\r\n                let name = \"\";\r\n                for (var j = 0; j < students.length; j++) {\r\n                    if (students[j].id === parseInt(studentID)) {\r\n                        name = `${students[j].first_name} ${students[j].last_name}`;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let activityList = {};\r\n                for (var j = 0; j < activities.length; j++) {\r\n                    const type = activities[j].type;\r\n                    const value = type === 'boolean' ? false : '';\r\n                    activityList[activities[j].name] = {\r\n                        'activityID': activities[j].activity_id,\r\n                        'attendanceItemID': 0,\r\n                        'value': value,\r\n                        'type': type\r\n                    }\r\n                }\r\n                activityList['Key']['value'] = true;\r\n                activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n                const row = { 'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities': activityList };\r\n                attendance.push(row);\r\n                self.setState({ attendance: attendance });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    refresh() {\r\n        this.fetchAndBuild();\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/notfound'/>);\r\n        }\r\n        console.log(this.state.attendance);\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        let buttonToolbar;\r\n        if (this.state.canCreateStudent) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.refresh}>Refresh</Button>\r\n                {!this.state.mobile && <Button onClick={this.setDateToToday}>Go To Today</Button>}\r\n                {!this.state.mobile && <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>}\r\n                <Button onClick={this.openModal}>Create New Student</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.refresh}>Refresh</Button>\r\n                {!this.state.mobile && <Button onClick={this.setDateToToday}>Go To Today</Button>}\r\n                {!this.state.mobile && <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>}\r\n            </ButtonToolbar>\r\n        }\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                {buttonToolbar}\r\n                {!this.state.mobile && <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>}\r\n                <Autocomplete\r\n                    label={'Check-in Student:'}\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\nimport { HeatmapSeries, XAxis, XYPlot, YAxis } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        // yArray is used for the reports Heatmaps and yArrayStudents is used for students heatmap\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  // Sets the correct range for the y-axis depending on what day the data starts on\r\n    // This assumes the range length will always be exactly one week\r\n  setYArrayRange(data) {\r\n      try {\r\n          if (data[0][\"y\"] === \"Thu\") {\r\n              return [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Fri\") {\r\n              return [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sat\") {\r\n              return [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sun\") {\r\n              return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Mon\") {\r\n              return [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Tue\") {\r\n              return [\"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\",]\r\n          }\r\n          else if (data[0][\"y\"] === \"Wed\") {\r\n              return [\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", ]\r\n          }\r\n      }\r\n      catch(err) {\r\n          console.log(err);\r\n      }\r\n\r\n\r\n  };\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 300;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 350;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(data, heatMapType) {\r\n      for (var i=0; i<data.length; i++) {\r\n          if ((heatMapType === \"individualStudent\"  && data[i][\"color\"] !== 0) ||\r\n              ((heatMapType === \"weekly\" || heatMapType === \"annual\" ) && data[i][\"color\"] !== 0)) {\r\n              return [\"#F5FBFD\", \"teal\"]\r\n          }\r\n      }\r\n      return [\"#F5FBFD\", \"#F5FBFD\"];\r\n  }\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType, yArray) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          try {\r\n              return yArray.map(x => x).reverse();\r\n          }\r\n          catch (err) {\r\n              console.log(err);\r\n          }\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor===0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const yArray = this.setYArrayRange(data);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div style={{margin:20}}>\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30, left: 45}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType, yArray)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n            className=\"heatmap-series-example\"\r\n            colorRange = {this.colorRange(data, heatMapType)}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n      </XYPlot>\r\n      </div>\r\n\r\n      <ContinuousColorLegend\r\n      width={300}\r\n      startTitle={minLegendLabel}\r\n      midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n      endTitle= {maxLegendLabel}\r\n      startColor=\"#F5FBFD\"\r\n      endColor={maxHeatMapColor}\r\n      height={100}\r\n      />\r\n</div>\r\n      \r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, Label, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { dateToString, getPermissions, domain, getEarlierDate, getNextSaturday, getPrevSunday, httpDelete, httpGet, httpPatch, httpPost, protocol } from '../components/Helpers';\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n      canViewStudentInfo: false,\r\n      canViewHeatmap: false,\r\n      canDeleteStudent: false,\r\n      heatMapJson: []\r\n    };\r\n    this.display = this.display.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`${protocol}://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      let permissions = getPermissions()\r\n      let canViewStudentInfo = false;\r\n      if (permissions.indexOf('view_studentinfo') >= 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        var profileInfo = this.parseCols(studentColumnJson);\r\n        var profileInfoPrelim = this.parseCols(studentColumnJson);\r\n        canViewStudentInfo = true;\r\n      }\r\n      let canViewHeatmap = false;\r\n      if (permissions.indexOf('view_reports') >= 0) {\r\n        canViewHeatmap = true;\r\n      }\r\n      let canDeleteStudent = false;\r\n      if (permissions.indexOf('delete_students') >= 0) {\r\n        canDeleteStudent = true;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          profileInfoPrelim: profileInfoPrelim,\r\n          id: null,\r\n          canViewStudentInfo: canViewStudentInfo,\r\n          canViewHeatmap: canViewHeatmap,\r\n          canDeleteStudent: canDeleteStudent,\r\n          uploadedPic: false\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'id': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`${protocol}://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      // Deep copy\r\n      state.profileDataPrelim = JSON.parse(JSON.stringify(studentProfileJson));\r\n      if (this.state.canViewStudentInfo) {\r\n        try {\r\n          const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n          if (studentInfoJson.length === 0) {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n          } else {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n\r\n            var returnedState = this.parseStudentInfo(state, studentInfoJson);\r\n            state.profileInfo = returnedState.profileInfo;\r\n            state.profileInfoPrelim = returnedState.profileInfoPrelim;\r\n          }\r\n        }\r\n        catch (e) {\r\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n          state.profileInfo = this.parseCols(studentColumnJson);\r\n        }\r\n      }\r\n\r\n      var startDate = getEarlierDate(30);\r\n      startDate = getPrevSunday(startDate);\r\n      var startDateString = dateToString(startDate);\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      var endDateString = dateToString(endDate);\r\n      state.endDateString = endDateString;\r\n\r\n      if (this.state.canViewHeatmap) {\r\n        const heatMapJson = await httpGet(`${protocol}://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\r\n        state.heatMapJson = heatMapJson;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${this.state.id}`);\r\n    var returnedState = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: returnedState.profileInfo,\r\n        profileInfoPrelim: returnedState.profileInfoPrelim\r\n      };\r\n    });\r\n  }\r\n\r\n  addTypes(state) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      // Ensure all varchar(x) types get caught as str_value\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfoPrelim[infoId - 1].patchPost = info[item];\r\n\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n      state.profileInfoPrelim[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n      state.profileInfoPrelim[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  search() {\r\n    var preState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  display() {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' });\r\n  }\r\n  \r\n  async delete(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    // Ensure we have studentInfoIds from the most recent POSTs\r\n    var newState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n\r\n    try {\r\n      const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n\r\n      if (studentInfoJson.length === 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n      } else {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n\r\n        var returnednewState = this.parseStudentInfo(newState, studentInfoJson);\r\n        newState.profileInfo = returnednewState.profileInfo;\r\n      }\r\n    } \r\n    catch (e) {\r\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n      newState.profileInfo = this.parseCols(studentColumnJson);\r\n    }\r\n\r\n    httpDelete(`${protocol}://${domain}/api/students/`, state.profileData);\r\n\r\n    // Ensure that the autocomplete removes the entry\r\n    var entryFound = false;\r\n      var entryIndex = 0;\r\n      while (entryFound === false) {\r\n        if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n          state.suggestionsArray.splice(entryIndex, 1);\r\n          entryFound = true\r\n        } else {\r\n          entryIndex++;\r\n        }\r\n      }\r\n      \r\n      this.state.mode = 'search';\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileDataPrelim[changedField] = evt.target.value;\r\n    state.profileDataUpdated = true;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n    \r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfoPrelim[changedField].type;\r\n\r\n    state.profileInfoPrelim[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfoPrelim[changedField].value = newValue;\r\n    state.profileInfoPrelim[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault();\r\n    // Deep copy\r\n    state.profileInfo = JSON.parse(JSON.stringify(state.profileInfoPrelim));\r\n\r\n    if (state.profileDataUpdated) {\r\n      state.profileData = JSON.parse(JSON.stringify(state.profileDataPrelim));\r\n      httpPatch(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    }\r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          httpPatch(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\r\n            .then(function (result) {\r\n              if ('error' in result) {\r\n                result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n              }\r\n            });;\r\n        } else {\r\n          httpPost(`${protocol}://${domain}/api/student_info/`, field.patchPost)\r\n            .then(function (result) {\r\n              if ('error' in result) {\r\n                result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n              } else {\r\n                posted = true;\r\n              }\r\n            });;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    var startDate = new Date(startDateString.replace(/-/g, '/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '/'));\r\n    var dateToCompare = startDate;\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value !== null !== '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type = this.state.profileInfo[entry].colInfo.type;\r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    var reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      let {profileInfo} = this.state;\r\n      profileInfo[5].updated = true;\r\n      profileInfo[5].patchPost['blob_value'] = reader.result;\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          src: reader.result,\r\n          uploadedPic: true,\r\n          profileInfo: profileInfo\r\n        };\r\n      });\r\n    }\r\n    reader.readAsDataURL(evt.target.files[0]);\r\n  }\r\n\r\n  render() {\r\n    let permissions = getPermissions()\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      let heatmap = [];\r\n      if (this.state.canViewHeatmap) {\r\n        heatmap = <div><h3>Student Attendance</h3>\r\n          <p>Number of engagements for this individual student in the past month.</p>\r\n          <p><b>Note:</b> Data is displayed chronologically, with row 1 representing the oldest week and row 5 representing the current week.</p> \r\n          <Heatmap data={this.formatData(this.state)} heatMapType=\"individualStudent\" /></div>\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'> \r\n              <div className='col-md-2 to-front top-bottom-padding'>\r\n                {/* <img id=\"studentPhoto\" src={pic} width=\"196\" height=\"196\" /><br /> */}\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"btn btn-primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n      {heatmap}\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      let deleteButton = []\r\n      if (this.state.canDeleteStudent) {\r\n        deleteButton = <ButtonToolbar>\r\n          <Button bsStyle=\"danger\" onClick={evt => { if (window.confirm('Are you sure you wish to delete this student?')) this.delete(evt, this.state) }}>Delete</Button>\r\n        </ButtonToolbar>\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    <Label>Last Name: </Label>\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\r\n                      <Button bsStyle=\"default\" onClick={this.display}>Cancel</Button>\r\n                    </ButtonToolbar>\r\n                    <br />\r\n                    {deleteButton}\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\r\n\r\nclass AttendanceByProgramReport extends React.Component {\r\n    constructor(props) {\r\n    \tsuper(props);\r\n  \r\n      \tthis.state = {\r\n\t\t\tactivities: [],\r\n\t\t\tactivityName: \"\",\r\n\t\t\tactivityNumber: 0,\r\n\t\t\tbuildingCSV: false,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tendDate: \"\",\r\n\t\t};\r\n\r\n\t\tthis.handleActivityDropdownSelect = this.handleActivityDropdownSelect.bind(this);\r\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\r\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\r\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\r\n\t}\r\n\r\n\tasync downloadCSV() {\r\n\t\tconst { startDate, endDate, activityNumber, activityName } = this.state;\r\n\t\tif (startDate === \"\" || endDate === \"\") {\r\n\t\t  return\r\n\t\t}\r\n\t\tthis.setState({ buildingCSV: true });\r\n\t\tconst sheet = []\r\n\t\tconst columns = ['Date', 'Student Name', 'Student Key']\r\n\t\tconst title = `${activityName}_${startDate}-${endDate}`\r\n\t\tconst items = await httpGet(`${protocol}://${domain}/api/reports/byActivityAttendance/?startdate=${startDate}&enddate=${endDate}&activity=${activityNumber}`)\r\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`)\r\n\t\t\r\n\t\t// sheet should look like: \r\n\t\t// Date | Student Name | Student Key \r\n\r\n\t\tfor (let itemIndex in items) {\r\n\t\t\tlet studentName = \"\";\r\n\t\t\tlet studentKey = \"\";\r\n\t\t\tfor (let studentIndex in students) {\r\n\t\t\t\tif (students[studentIndex].id === items[itemIndex].student_id) {\r\n\t\t\t\t\tstudentName = students[studentIndex].first_name + \" \" + students[studentIndex].last_name\r\n\t\t\t\t\tstudentKey = students[studentIndex].student_key\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet row = []\r\n\t\t\trow[0] = items[itemIndex].date;\r\n\t\t\trow[1] = studentName\r\n\t\t\trow[2] = (studentKey === null ? \"N/A\" : studentKey)\r\n\t\t\tsheet.push(row);\r\n\t\t}\r\n\r\n\t\tawait downloadReportsCSV(sheet, columns, title);\r\n\t\tthis.setState({ buildingCSV: false });\r\n\t}\r\n\r\n\tupdateStartDate(e) {\r\n    \tthis.setState({startDate: e.target.value});\r\n    }\r\n\r\n    updateEndDate(e) {\r\n    \tthis.setState({endDate: e.target.value});\r\n    }\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n        this.setState({activities: activities, activityName: activities[0].name, activityNumber: activities[0].activity_id});\r\n\t}\r\n\r\n\thandleActivityDropdownSelect(e) {\r\n\t\tconst { activities } = this.state;\r\n\t\tlet activityName = e.target.value;\r\n\t\tlet activityNumber = 0;\r\n\t\tfor (let key in activities) {\r\n\t\t\tif (activities[key].name === activityName) {\r\n\t\t\t\tactivityNumber = activities[key].activity_id;\r\n\t\t\t}\r\n\t\t}\r\n    \tthis.setState({activityName: activityName, activityNumber: activityNumber});\r\n    }\r\n\t\r\n\trender() {\r\n\t\tconst activityList = this.state.activities.map((item, i) => <option value={item.name} key={`item${i}`}>{item.name}</option>)\r\n\t\tconst {buildingCSV} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Download Attendance by Program </h3>\r\n\t\t\t\t<p>Downloads a spreadsheet containing all attendance records between two dates for a given program.</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Program: </ControlLabel>{' '}\r\n                    <FormControl componentClass=\"select\" \r\n                      name=\"type\" \r\n                      onChange={this.handleActivityDropdownSelect}\r\n                      defaultValue=\"string\"\r\n                    >\r\n                    \t{activityList}\r\n                    </FormControl>{'  '}\r\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AttendanceByProgramReport;\r\n","import React from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\r\n\r\nclass NewStudentsReport extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tbuildingCSV: false,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tendDate: \"\",\r\n\t\t};\r\n\r\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\r\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\r\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\r\n\t}\r\n\r\n\tasync downloadCSV() {\r\n\t\tconst { startDate, endDate } = this.state;\r\n\t\tif (startDate === \"\" || endDate === \"\") {\r\n\t\t  return\r\n\t\t}\r\n\t\tthis.setState({ buildingCSV: true });\r\n\t\tconst sheet = [];\r\n\t\tconst columns = ['Student Name', 'Student Key'];\r\n\t\tconst title = `New_Students_${startDate}-${endDate}`;\r\n\t\tconst ids = await httpGet(`${protocol}://${domain}/api/reports/newStudents/?startdate=${startDate}&enddate=${endDate}`);\r\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\r\n\t\t// sheet should look like: \r\n\t\t// Student Name | Student Key \r\n\r\n\t\tconsole.log(ids);\r\n\r\n\t\tfor (let i in ids.newStudents) {\r\n\t\t\tlet studentName = \"\";\r\n\t\t\tlet studentKey = \"\";\r\n\t\t\tfor (let studentIndex in students) {\r\n\t\t\t\tif (students[studentIndex].id === ids.newStudents[i]) {\r\n\t\t\t\t\tstudentName = students[studentIndex].first_name + \" \" + students[studentIndex].last_name;\r\n\t\t\t\t\tstudentKey = students[studentIndex].student_key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet row = []\r\n\t\t\trow[0] = studentName;\r\n\t\t\trow[1] = (studentKey === null ? \"N/A\" : studentKey);\r\n\t\t\tsheet.push(row);\r\n\t\t}\r\n\r\n\t\tawait downloadReportsCSV(sheet, columns, title);\r\n\t\tthis.setState({ buildingCSV: false });\r\n\t}\r\n\r\n\tupdateStartDate(e) {\r\n    \tthis.setState({startDate: e.target.value});\r\n    }\r\n\r\n  \tupdateEndDate(e) {\r\n  \t\tthis.setState({endDate: e.target.value});\r\n  \t}\r\n\r\n\trender() {\r\n\t\tconst {buildingCSV} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Download New Student Report </h3>\r\n\t\t\t\t<p>Downloads a spreadsheet containing all students that were checked in for the first time between two dates</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NewStudentsReport;\r\n","import React from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\r\n\r\nclass MilestoneReport extends React.Component {\r\n    constructor(props) {\r\n    \tsuper(props);\r\n  \r\n      \tthis.state = {\r\n\t\t\tmilestone: 30,\r\n\t\t\tbuildingCSV: false,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tendDate: \"\",\r\n\t\t};\r\n\r\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\r\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\r\n\t\tthis.updateMilestone = this.updateMilestone.bind(this);\r\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\r\n\t}\r\n\r\n\tasync downloadCSV() {\r\n\t\tconst { startDate, endDate, milestone } = this.state;\r\n\t\tif (startDate === \"\" || endDate === \"\") {\r\n\t\t  return\r\n\t\t}\r\n\t\tthis.setState({ buildingCSV: true });\r\n\t\tconst sheet = []\r\n\t\tconst columns = ['Student Name', 'Student Key']\r\n\t\tconst title = `Milestone_${milestone}_${startDate}-${endDate}`\r\n\t\tconst ids = await httpGet(`${protocol}://${domain}/api/reports/milestones/?startdate=${startDate}&enddate=${endDate}&milestone=${milestone}`)\r\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`)\r\n\r\n\t\t// sheet should look like: \r\n\t\t// Student Name | Student Key \r\n\r\n\t\tfor (let i in ids.milestoneStudents) {\r\n\t\t\tlet studentName = \"\";\r\n\t\t\tlet studentKey = \"\";\r\n\t\t\tfor (let j in students) {\r\n\t\t\t\tif (students[j].id === ids.milestoneStudents[i]) {\r\n\t\t\t\t\tstudentName = students[j].first_name + \" \" + students[j].last_name\r\n\t\t\t\t\tstudentKey = students[j].student_key\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet row = []\r\n\t\t\trow[0] = studentName\r\n\t\t\trow[1] = (studentKey === null ? \"N/A\" : studentKey)\r\n\t\t\tsheet.push(row);\r\n\t\t}\r\n\r\n\t\tawait downloadReportsCSV(sheet, columns, title);\r\n\t\tthis.setState({ buildingCSV: false });\r\n\t}\r\n\r\n\tupdateStartDate(e) {\r\n    \tthis.setState({startDate: e.target.value});\r\n    }\r\n\r\n\tupdateEndDate(e) {\r\n    \tthis.setState({endDate: e.target.value});\r\n\t}\r\n\t\r\n\tupdateMilestone(e) {\r\n\t\t\tthis.setState({milestone: e.target.value});\r\n\t}\t\r\n\trender() {\r\n\t\tconst {buildingCSV} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Download Attendance Milestones </h3>\r\n\t\t\t\t<p>Downloads a spreadsheet containing a list of students who reached a given attendance milestone between two dates.</p>\r\n\t\t\t\t<p>For instance, if the milestone was set to 30, the spreadsheet would list the students to attended the Key for their 30th time between two given dates</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Milestone:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateMilestone} value={this.state.milestone} type=\"number\"/>{'  '}\r\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MilestoneReport;\r\n","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar, Form, ControlLabel, FormControl, FormGroup, Tabs, Tab } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { domain, downloadReportsCSV, getEarlierDate, dateToString, getNextSaturday, getPrevSunday, getPermissions, httpGet, protocol, downloadAttendanceCSV } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js';\r\nimport AttendanceByProgramReport from '../components/AttendanceByProgramReport';\r\nimport NewStudentsReport from '../components/NewStudentsReport';\r\nimport MilestoneReport from '../components/MilestoneReport';\r\n\r\nclass Reports extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byHourJsonForDownload: [],\r\n            byDayJson: [],\r\n            byDayJsonForDownload: [],\r\n            byDayInPastWeekJson: [],\r\n            byDayInPastWeekForDownload : [],\r\n            byDayHeatMap: [],\r\n            dateOne: \"\",\r\n            dateTwo: \"\",\r\n            buildingCSV: false,\r\n            tab: 1,\r\n        };\r\n        this.downloadHourlyCSV = this.downloadHourlyCSV.bind(this);\r\n        this.downloadWeeklyCSV = this.downloadWeeklyCSV.bind(this);\r\n        this.downloadYearlyCSV = this.downloadYearlyCSV.bind(this);\r\n        this.updateDateOne = this.updateDateOne.bind(this);\r\n        this.updateDateTwo = this.updateDateTwo.bind(this);\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.handleTabSelect = this.handleTabSelect.bind(this);\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //Make timerange for last 7 days to display for weekly aggregation (broken down by hour of day)\r\n          var today = getEarlierDate(0);\r\n          var startDateWeek = getEarlierDate(6);\r\n          var startDateStringWeek = dateToString(startDateWeek);\r\n          var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`${protocol}://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\r\n          //Make timerange for last 365 days, extending back to the preceeding sunday and forward to the following sat to display yearly aggregation (broken down by day)\r\n          var startDateYear= getEarlierDate(365);\r\n          startDateYear = getPrevSunday(startDateYear);\r\n          var startDateStringYear = dateToString(startDateYear);\r\n          var endDateYear = getNextSaturday(today);\r\n          var endDateStringYear = dateToString(endDateYear);\r\n          const byDayJson = await httpGet(`${protocol}://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\r\n          await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear, startDateWeek);\r\n          await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n      \r\n\r\n      handleTabSelect(tab) {\r\n        this.setState({ tab });\r\n      }\r\n\r\n      updateDateOne(e) {\r\n        this.setState({dateOne: e.target.value});\r\n      }\r\n\r\n      updateDateTwo(e) {\r\n        this.setState({dateTwo: e.target.value});\r\n      }\r\n\r\n      async downloadCSV() {\r\n          if (this.state.dateOne === \"\" || this.state.dateTwo === \"\") {\r\n            return\r\n          }\r\n          this.setState({ buildingCSV: true });\r\n          await downloadAttendanceCSV(this.state.dateOne, this.state.dateTwo)\r\n          this.setState({ buildingCSV: false });\r\n      }\r\n    \r\n      downloadHourlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Hourly_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byHourJsonForDownload, [\"Date\", \"Hour\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadWeeklyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Daily_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byDayInPastWeekForDownload, [\"Date\",\"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadYearlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Annual_Attendance_\".concat(this.state.startDateStringYear);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringYear);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload, [\"Date\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2); // true if time1 is later\r\n      }\r\n\r\n      //Format json data from day-of-yr endpoint into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear, startDateWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        var startDate = new Date(startDateString.replace(/-/g, '/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n\r\n        //process jsons into lists of lists and store into state for downloading as csv\r\n        var byDayJsonForDownload = [];\r\n        var byDayInPastWeekForDownload = [];\r\n        var entryAsList;\r\n        var currDateObj;\r\n        var startPastWeek = startDateWeek;\r\n        startPastWeek.setDate(startPastWeek.getDate()-1);\r\n        var endPastWeek = getEarlierDate(0);\r\n        for(var i=0; i<byDayJson.length; i++){\r\n          entryAsList = Object.values(byDayJson[i]);\r\n          byDayJsonForDownload.push(entryAsList);\r\n          //add to daily attendance csv if date is within past week\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '/'));\r\n          if(this.compareTime(currDateObj,startPastWeek) && (this.compareTime(currDateObj,endPastWeek) == false) ){\r\n            byDayInPastWeekForDownload.push(entryAsList);\r\n          }\r\n        }\r\n\r\n\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var byDayInPastWeekJson = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          annualHeatMapEntry = {\"x\": weekNum+1, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n          //add to daily attendance dataset if date is within past week\r\n          if(this.compareTime(currDateObj,startPastWeek) && (this.compareTime(currDateObj,endPastWeek) == false) ){\r\n            byDayInPastWeekJson.push(dayEntry);\r\n          }\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayInPastWeekJson : byDayInPastWeekJson,\r\n                  byDayJsonForDownload: byDayJsonForDownload,\r\n                  byDayInPastWeekForDownload : byDayInPastWeekForDownload,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week endpoint into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        var startDate = new Date(startDateString.replace(/-/g, '/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare))){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on SAME DAY, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || currHour > hourToCompare){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byHourJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byHourJson.length; i++){\r\n          entryAsList = Object.values(byHourJson[i]);\r\n          byHourJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,5);\r\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n                  byHourJsonForDownload: byHourJsonForDownload\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n    render() {\r\n        const buildingCSV = this.state.buildingCSV;\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_reports') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n\r\n        return (\r\n          <div className=\"content\">\r\n            <Tabs activeKey={this.state.tab} onSelect={this.handleTabSelect}>\r\n              <Tab key={1} eventKey={1} title=\"Hourly Attendance\">\r\n                <h3> Hourly Attendance </h3>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                <Button onClick={this.downloadHourlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Hourly'}</Button>\r\n                </ButtonToolbar>\r\n                <p> Number of engagements per hour in <b>{this.state.startDateStringWeek}</b> to <b>{this.state.endDateStringWeek}</b>.</p>\r\n                <p><b>Note:</b> Data is displayed chronologically, with the top row representing the oldest day and the bottom row representing the current day.</p>\r\n                <Heatmap\r\n                  data = {this.state.byHourJson}\r\n                  heatMapType = \"weekly\" />\r\n              </Tab>\r\n              <Tab key={2} eventKey={2} title=\"Daily Attendance\">\r\n                <h3> Daily Attendance </h3>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                <Button onClick={this.downloadWeeklyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Daily'}</Button>\r\n                </ButtonToolbar>\r\n                <p> Number of engagements per day in the past week from <b>{this.state.startDateStringWeek}</b> to <b>{this.state.endDateStringWeek}</b>.</p>\r\n                <BarChart data = {this.state.byDayInPastWeekJson}/>\r\n              </Tab>\r\n              <Tab key={3} eventKey={3} title=\"Annual Attendance\">\r\n                <h3> Annual Daily Attendance </h3>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                <Button onClick={this.downloadYearlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Annual'}</Button>\r\n                </ButtonToolbar>\r\n                <p> Number of engagements per day in the past year from <b>{this.state.startDateStringYear}</b> to <b>{this.state.endDateStringYear}</b>.</p>\r\n                <p><b>Note:</b> Data is displayed chronologically, with the leftmost column representing the oldest week and the rightmost column representing the current week.</p> \r\n                <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n              </Tab>\r\n              <Tab key={4} eventKey={4} title=\"Multi-Date Attendance Sheet\">\r\n                <h3> Download Multi-Date Attendance Sheet </h3>\r\n                <p>Combines and downloads attendance sheets from multiple dates</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Start Date</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateDateOne} value={this.state.dateOne} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateDateTwo} value={this.state.dateTwo} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n              </Tab>\r\n              <Tab key={5} eventKey={5} title=\"Attendance By Program\">\r\n                <AttendanceByProgramReport/>\r\n              </Tab>\r\n              <Tab key={6} eventKey={6} title=\"New Students\">\r\n                <NewStudentsReport/>\r\n              </Tab>\r\n              <Tab key={7} eventKey={7} title=\"Attendance Milestones\">\r\n                <MilestoneReport/>\r\n              </Tab>\r\n            </Tabs>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n// List of students who attended a particular category over a given time span\r\n// List of students who attended for the first time\r\n// List of students who have attended the key at least *n* number of times.\r\n\r\nexport default Reports;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: '',\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        errorMsg: '',\r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain, protocol } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            errorMsg: false\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({backendError: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({\r\n                    backendError: false,\r\n                    errorMsg: ''\r\n                })\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                        backendError: false,\r\n                        errorMsg: ''\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n           \r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>View History</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { getPermissions, httpGet, domain, protocol } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            // Re-get users - if a role was deleted, users may have been set to inactive\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                showAllUsers: true\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { suggestionsArray, users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            let last1;\r\n            let last2;\r\n            if (user.last_name.includes(\" \")) {\r\n                let lastNames = user.last_name.split(\" \");\r\n                last1 = lastNames[0];\r\n                last2 = lastNames[1];\r\n            }\r\n            else {\r\n                last1 = user.last_name;\r\n                last2 = \"\";\r\n            }\r\n            suggestionsArray.push({\r\n                firstName: user.first_name,\r\n                lastName1: last1,\r\n                lastName2: last2,\r\n                username: user.username,\r\n                id: user.id\r\n            });\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n            this.setState({showUserModal: false, users: users, showingUsers: showingUsers, \r\n                showingAllUsers: false, suggestionsArray: suggestionsArray});\r\n        } else {\r\n            this.setState({showUserModal: false});\r\n        }\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users, suggestionsArray } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            suggestionsArray = suggestionsArray.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            suggestionsArray = suggestionsArray.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            let last1;\r\n            let last2;\r\n            if (user.last_name.includes(\" \")) {\r\n                let lastNames = user.last_name.split(\" \");\r\n                last1 = lastNames[0];\r\n                last2 = lastNames[1];\r\n            }\r\n            else {\r\n                last1 = user.last_name;\r\n                last2 = \"\";\r\n            }\r\n            suggestionsArray.push({\r\n                firstName: user.first_name,\r\n                lastName1: last1,\r\n                lastName2: last2,\r\n                username: user.username,\r\n                id: user.id\r\n            });\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers, suggestionsArray: suggestionsArray });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`${protocol}://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    alert(\"Error: Unknown server error getting user history.\")\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            },\r\n            {\r\n                accessor: 'history',\r\n                label: '',\r\n                priorityLevel: 7,\r\n                position: 7,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 50,\r\n                sortable: false,\r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, history: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        const permissions = getPermissions();\r\n        let buttonToolbar;\r\n        if (permissions.indexOf('add_user') >= 0) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                <Button onClick={this.openModal}>New User</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n            </ButtonToolbar>\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                {buttonToolbar}\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\nimport { Alert, Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                let displayName = perm_name;\r\n                if (displayName.includes('group')) {\r\n                    displayName = displayName.replace('group', 'user role');\r\n                } else if (displayName.includes('activity')) {\r\n                    displayName = displayName.replace('activity', 'programming');\r\n                } else if (displayName.includes('attendance items')) {\r\n                    displayName = displayName.replace('attendance items', 'attendance entries');\r\n                } else if (displayName.includes('student column')) {\r\n                    displayName = displayName.replace('student column', 'student field');\r\n                } else if (displayName.includes('city span students')) {\r\n                    displayName = displayName.replace('city span students', 'student keys');\r\n                }\r\n                checkboxes.push({label: perm_name, checked: false, displayName: displayName})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: '', error: false, backendError: false, errorMsg: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() === 'error') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        if (permissions.length < 1) {\r\n            self.setState({error: true});\r\n            return;\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.displayName}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name)) {\r\n            return 'success';\r\n        } else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n                        >\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { httpDelete, httpPatch, domain, protocol } from './Helpers';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            errorMsg: '',\r\n            error: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                let displayName = perm_name;\r\n                if (displayName.includes('group')) {\r\n                    displayName = displayName.replace('group', 'user role');\r\n                } else if (displayName.includes('activity')) {\r\n                    displayName = displayName.replace('activity', 'programming');\r\n                } else if (displayName.includes('attendance items')) {\r\n                    displayName = displayName.replace('attendance items', 'attendance entries');\r\n                } else if (displayName.includes('student column')) {\r\n                    displayName = displayName.replace('student column', 'student field');\r\n                } else if (displayName.includes('city span students')) {\r\n                    displayName = displayName.replace('city span students', 'student keys');\r\n                }\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked, displayName: displayName})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({error: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({error: false, errorMsg: ''});\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({error: false, errorMsg: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.displayName}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role? All users with this role will be set to inactive.')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain, protocol } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`${protocol}://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass AssignStudentKeyModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oldID: 0,\r\n            student: {},\r\n            suggestions: [],\r\n            searchArray: [],\r\n            match: \"\",\r\n        }\r\n\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.setMatch = this.setMatch.bind(this);\r\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\r\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            oldID: this.props.studentID\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\r\n            const student = await httpGet(`${protocol}://${domain}/api/students/?id=${this.props.studentID}`);\r\n            const suggestions = await httpGet(`${protocol}://${domain}/api/suggestions/student/?id=${this.props.studentID}`);\r\n            const searchArray = this.buildSuggestionsArray();\r\n\r\n            this.setState({\r\n                student: student,\r\n                suggestions: suggestions,\r\n                searchArray: searchArray,\r\n                oldID: this.props.studentID\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSuggestionsArray() {\r\n        let array = []\r\n        const citySpanStudents = this.props.citySpanStudents;\r\n        for (var object in this.props.citySpanStudents) {\r\n            array.push({\r\n                firstName: citySpanStudents[object].first_name,\r\n                lastName1: citySpanStudents[object].last_name,\r\n                lastName2: \"\",\r\n                id: citySpanStudents[object].student_key\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    setMatch(studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    setMatchFromSearch(e, studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose()\r\n    }\r\n\r\n    onSubmit() {\r\n        // PATCH student\r\n        httpPatch(`${protocol}://${domain}/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose(this.props.studentID);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <h4>Suggestions:</h4>\r\n                    {this.state.suggestions.length === 3 \r\n                    && <ListGroup>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\r\n                      </ListGroup>}\r\n                    <br/>\r\n                    <h4>Search for match:</h4>\r\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\r\n                    <br/>\r\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass AssignStudentKeyButton extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyButton;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, Form, FormGroup, Label, Well } from 'react-bootstrap';\r\n\r\nclass FileUploader extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t  super();\r\n\t  this.state = {\r\n\t\tfile: undefined,\r\n\t\terror: \"\",\r\n\t  };\r\n\r\n\t  this.submit = this.submit.bind(this);\r\n\t}\r\n  \r\n\thandleChange = event => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\r\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\terror: \"\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Invalid file type\"\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tsubmit() {\r\n\t\tif (this.state.file !== undefined) {\r\n\t\t\tthis.props.upload(this.state.file);\r\n\t\t\tthis.setState({file: undefined});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\r\n\t\t\t\t<Well style={{display: 'inline-block'}}>\r\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\r\n\t\t\t\t</Well>\r\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\r\n\t\t\t</FormGroup>\r\n\t\t\t{this.state.error !== \"\" && <Label bsStyle=\"danger\">Error: {this.state.error}</Label>}\r\n\t\t</Form>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default FileUploader;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\r\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport FileUploader from './FileUploader';\r\n\r\nclass StudentKeys extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unmatchedStudents: [],\r\n            citySpanStudents: [],\r\n            suggestions: [],\r\n            showModal: false,\r\n            focusedStudent: -1,\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleRowClick = this.handleRowClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\r\n        this.processCSV = this.processCSV.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const unmatchedStudents = await httpGet(`${protocol}://${domain}/api/suggestions/unmatchedstudents/`);\r\n            const citySpanStudents = await httpGet(`${protocol}://${domain}/api/suggestions/cityspanstudents/`);\r\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\r\n\r\n            this.setState({\r\n                unmatchedStudents: unmatchedStudents,\r\n                suggestions: suggestions,\r\n                showModal: false,\r\n                focusedStudent: -1,\r\n                citySpanStudents: citySpanStudents\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleCSVUpload(csv) {\r\n        var papa = require('papaparse');\r\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\r\n    }\r\n\r\n    processCSV(result) {\r\n        var output = []\r\n        for (let index in result.data) {\r\n            let obj = result.data[index];\r\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\r\n                continue;\r\n            } \r\n            output.push({first_name: obj[\"First Name\"], last_name: obj[\"Last Name\"], student_key: obj[\"Student Key\"]})\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/suggestions/cityspanstudents/`, { \"students\": output })\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function (response) {\r\n                        alert(response.error);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    tmpfail(error, file) {\r\n        console.log(error);\r\n    }\r\n\r\n    handleRowClick(studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    closeModal(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({\r\n            showModal: false,\r\n            unmatchedStudents: unmatchedStudents\r\n        });\r\n    }\r\n\r\n    handleSearch(e, studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    updateStudents(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({unmatchedStudents: unmatchedStudents});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.unmatchedStudents.map(student =>\r\n            (\r\n               {\r\n                   name: `${student.first_name} ${student.last_name}`,\r\n                   id: student.id\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: AssignStudentKeyButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Students Without Student Keys</h1>\r\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\r\n                <br/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <Autocomplete\r\n                        suggestions={this.state.suggestions}\r\n                        handler={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div style={{float: 'right'}}>\r\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\r\n                </div>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'edit':this.handleRowClick}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentKeys ;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.activity_id !== this.state.row.activity_id) {\r\n            this.setState({ row: this.props.row })\r\n        } else if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    let activity1 = result[0];\r\n                    let activity2 = result[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Programming</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentFieldModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\r\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            is_showing: self.state.inUse,\r\n            quick_add: self.state.quickAdd,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'str',\r\n                        inUse: true,\r\n                        quickAdd: false,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleInUseCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n\r\n    handleQuickAddCheckbox = e => {\r\n        this.setState({quickAdd: !this.state.quickAdd});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student Field</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Field Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Field Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"date\">Date</option>\r\n                                <option value=\"str\">Text</option>\r\n                                <option value=\"int\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleInUseCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <ControlLabel>Show in Quick Add</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.quickAdd}\r\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\r\n                                onChange={this.handleQuickAddCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentFieldModal;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass StudentFieldCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accessor === 'is_showing') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.info_id !== this.state.row.info_id) {\r\n            this.setState({ row: this.props.row });\r\n        }\r\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {info_id: row.info_id};\r\n        body[self.props.accessor] = !self.state.checked;\r\n        httpPatch(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentFieldCheckbox;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddStudentFieldModal from './AddStudentFieldModal';\r\nimport { domain, httpGet, protocol } from './Helpers';\r\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\r\n\r\nclass EditStudentFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.createNewField = this.createNewField.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const fields = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            this.setState({\r\n                fields\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewField(field) {\r\n        return {\r\n            info_id: field.info_id,\r\n            is_showing: field.is_showing,\r\n            quick_add: field.quick_add,\r\n            name: field.name,\r\n            type: field.type,\r\n        };\r\n    }\r\n\r\n    updateCheckbox(field=null) {\r\n        let self = this;\r\n        let { fields } = self.state;\r\n        if (field !== null) {\r\n            fields = fields.filter(item => item.info_id !== field.info_id);\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        self.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'date') {\r\n            return 'Date';\r\n        } else if (type === 'str') {\r\n            return 'Text';\r\n        } else if (type === 'int') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(field=null) {\r\n        const { fields } = this.state;\r\n        if (field !== null) {\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        this.setState({showModal: false, fields: fields});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.fields.map(field =>\r\n            (\r\n               {\r\n                   name: field.name,\r\n                   is_showing: field.is_showing,\r\n                   info_id: field.info_id,\r\n                   type: field.type,\r\n                   type_name: this.getDataTypeName(field.type),\r\n                   quick_add: field.quick_add\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Field',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'quick_add',\r\n                label: 'Show in Quick Add',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n        ];\r\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Student Profile Fields</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\r\n                </ButtonToolbar>\r\n                <AddStudentFieldModal show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditStudentFields;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport StudentKeys from './StudentKeys';\r\nimport Activities from './Activities';\r\nimport EditStudentFields from './EditStudentFields';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      let tabs = [];\r\n      let counter = 1;\r\n      const permissions = getPermissions()\r\n      if (permissions.indexOf('view_user') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Management\">\r\n          <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('view_group') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Roles\">\r\n          <Roles toggleRefreshRoles={this.toggleRefreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Programming\">\r\n          <Activities />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Profile Fields\">\r\n          <EditStudentFields />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_cityspanstudents') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Key Management\">\r\n          <StudentKeys />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          {tabs}\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\nimport { getPermissions } from '../components/Helpers';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0 ||\r\n            permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0 || \r\n            permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}